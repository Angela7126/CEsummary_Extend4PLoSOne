************************************************************
P14-2122.xhtml_1_CE.txt: Cause-Effect links
************************************************************

CASE: 0
Stag: 0 
	Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
	sentTXT: Many languages, especially Asian languages such as Chinese, Japanese and Myanmar, have no explicit word boundaries, thus word segmentation (WS), that is, segmenting the continuous texts of these languages into isolated words, is a prerequisite for many natural language processing applications including SMT
	Cause: [(0, 0), (0, 18)]
	Effect: [(0, 21), (0, 51)]

CASE: 1
Stag: 4 
	Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
	sentTXT: UWS learns from unsegmented raw text, which are available in large quantities, and thus it has the potential to provide more accurate and adaptive segmentation than supervised approaches with less development effort being required
	Cause: [(0, 0), (0, 12)]
	Effect: [(0, 16), (0, 35)]

CASE: 2
Stag: 8 
	Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
	sentTXT: [] proposed a bilingual method by adding alignment into the generative model, but was only able to test it on small-scale BTEC data
	Cause: [(0, 7), (0, 12)]
	Effect: [(0, 13), (0, 24)]

CASE: 3
Stag: 13 
	Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
	sentTXT: We aware that variational bayes (VB) may be used for speeding up the training of DP-based or PYP-based bilingual UWS
	Cause: [(0, 12), (0, 21)]
	Effect: [(0, 0), (0, 10)]

CASE: 4
Stag: 16 17 
	Pattern: 62 [['therefore']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(,)', '&R']]
	sentTXT: These variables are large in number and it is not clear how to apply VB to UWS, and as far the authors aware there is no previous work related to the application of VB to monolingual UWS Therefore, we have not explored VB methods in this paper, but we do show that our method is superior to the existing methods
	Cause: [(0, 0), (0, 37)]
	Effect: [(1, 2), (1, 24)]

CASE: 5
Stag: 24 
	Pattern: 407 [['because']]---- [['&R', '(,)', '(&ADV)'], ['&C']]
	sentTXT: The set u'\u2131' is chosen to represent an unsegmented foreign language sentence (a sequence of characters), because an unsegmented sentence can be seen as the set of all possible segmentations of the sentence denoted F , i.e., F u'\u2208' u'\u2131'
	Cause: [(0, 24), (0, 42)]
	Effect: [(0, 0), (0, 21)]

CASE: 6
Stag: 28 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: UWS learns models by maximizing the likelihood of the unsegmented corpus, formulated as
	Cause: [(0, 4), (0, 13)]
	Effect: [(0, 0), (0, 2)]

CASE: 7
Stag: 33 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: P ( u'\u2131' k k u'\u2032' u'\u2131' , u'\u2133' ) is the marginal probability of all the possible F u'\u2208' u'\u2131' that contain u'\u2131' k k u'\u2032' as a word, which can be calculated efficiently through dynamic programming (the process is similar to the foreward-backward algorithm in training a hidden Markov model (HMM) []
	Cause: [(0, 60), (0, 73)]
	Effect: [(0, 0), (0, 58)]

CASE: 8
Stag: 36 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: P ( u'\u2131' k k u'\u2032' u'\u2131' , E , u'\u212c' ) is the marginal probability of all the possible F u'\u2208' u'\u2131' that contain u'\u2131' k k u'\u2032' as a word and are aligned with E , formulated as
	Cause: [(0, 62), (0, 69)]
	Effect: [(0, 0), (0, 60)]

CASE: 9
Stag: 42 43 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: 7 can be rewritten (as in IBM model 2 In order to maintain both speed and accuracy, the following window function is adopted
	Cause: [(0, 6), (1, 13)]
	Effect: [(0, 0), (0, 4)]

CASE: 10
Stag: 44 
	Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
	sentTXT: where K is the number of characters in u'\u2131' , and the k -th character is the start of the word f j , since j and J are unknown during the computation of dynamic programming u'\u0394' b is the window size, u'\u039b' u'\u03a6' is the prior probability of an empty English word, and u'\u03a3' ensures all the items sum to 1
	Cause: [(0, 30), (0, 48)]
	Effect: [(0, 52), (0, 84)]

CASE: 11
Stag: 44 
	Pattern: 0 [[['indicate', 'indicates', 'indicated', 'realize', 'realizes', 'realized', 'ensure', 'ensures', 'ensured', 'imply', 'implies', 'implied']]]---- [['&NP@C@', '(&Clause@C@)'], ['&NP@R@', '(&Clause@R@)']]
	sentTXT: where K is the number of characters in u'\u2131' , and the k -th character is the start of the word f j , since j and J are unknown during the computation of dynamic programming u'\u0394' b is the window size, u'\u039b' u'\u03a6' is the prior probability of an empty English word, and u'\u03a3' ensures all the items sum to 1
	Cause: [(0, 0), (0, 25)]
	Effect: [(0, 27), (0, 32)]

CASE: 12
Stag: 54 
	Pattern: 0 [['according', 'to']]---- [['&R', '(,)'], ['&NP@C@']]
	sentTXT: The monolingual expectation is calculated according to Eq
	Cause: [(0, 7), (0, 7)]
	Effect: [(0, 0), (0, 4)]

CASE: 13
Stag: 58 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: For the monolingual bigram model, the number of states in the HMM is U times more than that of the monolingual unigram model, as the states at specific position of F are not only related to the length of the current word, but also related to the length of the word before it
	Cause: [(0, 26), (0, 55)]
	Effect: [(0, 0), (0, 23)]

CASE: 14
Stag: 58 59 
	Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
	sentTXT: For the monolingual bigram model, the number of states in the HMM is U times more than that of the monolingual unigram model, as the states at specific position of F are not only related to the length of the current word, but also related to the length of the word before it Thus its complexity is U 2 times the unigram model u'\u2019' s complexity
	Cause: [(0, 0), (0, 55)]
	Effect: [(1, 1), (1, 15)]

CASE: 15
Stag: 72 73 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: The data sets of NIST Eval 2002 to 2005 were used as the development for MERT tuning [] This data set mainly consists of news text 3 3 It also contains a small number of web blogs
	Cause: [(0, 12), (1, 17)]
	Effect: [(0, 0), (0, 10)]

CASE: 16
Stag: 86 
	Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
	sentTXT: The monolingual bigram model, however, was slower to converge, so we started it from the segmentations of the unigram model, and using 10 iterations
	Cause: [(0, 0), (0, 10)]
	Effect: [(0, 13), (0, 27)]

CASE: 17
Stag: 89 
	Pattern: 407 [['because']]---- [['&R', '(,)', '(&ADV)'], ['&C']]
	sentTXT: Note that the comparison of speed is only for reference because the times are obtained from their respective papers
	Cause: [(0, 11), (0, 18)]
	Effect: [(0, 0), (0, 9)]

CASE: 18
Stag: 95 
	Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
	sentTXT: The proposed method with monolingual bigram model performed poorly on the Chinese monolingual segmentation task; thus, it was not tested
	Cause: [(0, 0), (0, 14)]
	Effect: [(0, 17), (0, 21)]

CASE: 19
Stag: 97 98 
	Pattern: 8 [['because']]---- [['&R', '(,/./;/--)', '(&AND)', '&THIS', '&BE', '(&ADV)'], ['&C']]
	sentTXT: The experimental results show that the proposed UWS methods are comparable to the Stanford segmenters on the OpenMT06 corpus, while achieves a 0.96 BLEU increase on the PatentMT9 corpus This is because this corpus is out-of-domain for the supervised segmenters
	Cause: [(1, 3), (1, 10)]
	Effect: [(0, 0), (0, 29)]


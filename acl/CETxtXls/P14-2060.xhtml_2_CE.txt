************************************************************
P14-2060.xhtml_2_CE.txt: Cause-Effect links
************************************************************

CASE: 0
Stag: 6 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Perhaps the most demanding such application is text-to-speech synthesis -LRB- TTS -RRB- since , while for parsing , machine translation and information retrieval it may be acceptable to leave such things as numbers and abbreviations unexpanded , for TTS all tokens need to be read , and for that it is necessary to know how to pronounce them
	Cause: numbers and abbreviations unexpanded , for TTS all tokens need to be
	Effect: Perhaps the most demanding such application is text-to-speech synthesis -LRB- TTS -RRB- since , while for parsing , machine translation and information retrieval it may be acceptable to leave such things

CASE: 1
Stag: 10 
	Pattern: 7 [['hence']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(,)', '&R']]
	sentTXT: In other applications , such as TTS or typing auto-correction , the resulting normalized string itself is directly presented to the user ; hence errors in normalization can have a very high cost relative to leaving tokens unnormalized
	Cause: In other applications , such as TTS or typing auto-correction , the resulting normalized string itself is directly presented to the user
	Effect: errors in normalization can have a very high cost relative to leaving tokens unnormalized

CASE: 2
Stag: 11 12 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: In this paper we concentrate on abbreviations , which we define as alphabetic NSWs that it would be normal to pronounce as their expansion This class of NSWs is particularly common in personal ads , product reviews , and so forth
	Cause: alphabetic NSWs that it would be normal to pronounce as their expansion This class of NSWs is particularly common in personal ads , product reviews , and
	Effect: In this paper we concentrate on abbreviations , which we define

CASE: 3
Stag: 16 
	Pattern: 0 [[['if', 'once']], [',']]---- [[], ['&C@Complete@'], ['&R@Complete@']]
	sentTXT: If a system is unable to reliably predict the correct reading for a string , it is better to leave the string alone and have it default to , say , a character-by-character reading , than to expand it to something wrong
	Cause: a system is unable to reliably predict the correct reading for a string
	Effect: it is better to leave the string alone and have it default to , say , a character-by-character reading , than to expand it to something wrong

CASE: 4
Stag: 18 
	Pattern: 23 [['since']]---- [['&R@NCTime@', '(,)'], ['&C@NCTime@']]
	sentTXT: Ideally a navigation system should read turn on 30N correctly as turn on thirty north ; but if it can not resolve the ambiguity in 30N , it is far better to read it as thirty N than as thirty Newtons , since listeners can more easily recover from the first kind of error than the second
	Cause: listeners can more easily recover from the first kind of error than the
	Effect: Ideally a navigation system should read turn on 30N correctly as turn on thirty north ; but if it can not resolve the ambiguity in 30N , it is far better to read it as thirty N than as thirty Newtons

CASE: 5
Stag: 18 
	Pattern: 0 [[['if', 'once']], [',']]---- [[], ['&C@Complete@'], ['&R@Complete@']]
	sentTXT: Ideally a navigation system should read turn on 30N correctly as turn on thirty north ; but if it can not resolve the ambiguity in 30N , it is far better to read it as thirty N than as thirty Newtons
	Cause: it can not resolve the ambiguity in 30N
	Effect: it is far better to read it as thirty N than as thirty Newtons

CASE: 6
Stag: 19 
	Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
	sentTXT: We present methods for learning abbreviation expansion models that favor high precision -LRB- incorrect expansions 2 u ' \ u2062 ' %
	Cause: learning abbreviation expansion models that favor high precision -LRB- incorrect expansions 2 u ' \ u2062 ' %
	Effect: We present methods

CASE: 7
Stag: 21 22 
	Pattern: 0 [['based', 'on']]---- [['&C', '(,/;/./--)', '(&AND)', '(&ADV)'], ['&this', '&NP', '(,)', '&R']]
	sentTXT: Then a small amount of annotated data is used to build models to determine whether to accept a candidate expansion of an abbreviation based on these features The data we report on are taken from Google Maps TM and web pages associated with its map entries , but the methods can be applied to any data source that is relatively abbreviation rich
	Cause: Then a small amount of annotated data is used to build models to determine whether to accept a candidate expansion of an abbreviation
	Effect: are taken from Google Maps TM and web pages associated with its map entries , but the methods can be applied to any data source that is relatively abbreviation rich

CASE: 8
Stag: 27 
	Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
	sentTXT: Expanding the latter to your website sucks , brother certainly normalizes it to standard English , but one could argue that in so doing one is losing information that the writer is trying to convey using an informal style
	Cause: Expanding the latter to your website sucks , brother certainly normalizes it to standard English , but one could argue that in
	Effect: doing one is losing information that the writer is trying to convey using an informal

CASE: 9
Stag: 27 
	Pattern: 30 []---- [['&V-ing@C@', '(,)', '&R@Complete@']]
	sentTXT: Expanding the latter to your website sucks , brother certainly normalizes it to standard English , but one could argue that in
	Cause: Expanding the latter to your website sucks
	Effect: brother certainly normalizes it to standard English , but one

CASE: 10
Stag: 28 
	Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
	sentTXT: On the other hand , someone who writes svc ctr for service center in a product review is probably merely trying to save time and so expanding the abbreviations in that case is neutral with respect to preserving the intent of the original text
	Cause: On the other hand , someone who writes svc ctr for service center in a product review is probably merely trying to save time
	Effect: expanding the abbreviations in that case is neutral with respect to preserving the intent of the original

CASE: 11
Stag: 31 
	Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
	sentTXT: Since our target application is text-to-speech , we define the task in terms of an existing TTS lexicon
	Cause: our target application is text-to-speech
	Effect: we define the task in

CASE: 12
Stag: 32 
	Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
	sentTXT: If a word is already in the lexicon , it is left unprocessed , since there is an existing pronunciation for it ; if a word is out-of-vocabulary -LRB- OOV -RRB- , we consider expanding it to a word in the lexicon
	Cause: there is an existing pronunciation for it ; if a word is out-of-vocabulary -LRB- OOV -RRB-
	Effect: we consider expanding it to a word in the lexicon

CASE: 13
Stag: 32 
	Pattern: 0 [['if']]---- [['&R@Complete@'], ['&C@Complete@']]
	sentTXT: there is an existing pronunciation for it ; if a word is out-of-vocabulary -LRB- OOV -RRB-
	Cause: a word is out-of-vocabulary -LRB- OOV -RRB-
	Effect: there is an existing pronunciation for it ;

CASE: 14
Stag: 34 
	Pattern: 0 [['due', 'to']]---- [[], ['&NP@C@', '(,)', '&R']]
	sentTXT: 1 1 We do not deal here with phonetic spellings in abbreviations such as 4get , or cases where letters have been transposed due to typographical errors -LRB- scv
	Cause: typographical
	Effect: errors -LRB- scv

CASE: 15
Stag: 39 
	Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
	sentTXT: First , we used it to bootstrap a model for assigning a probability of an abbreviation/expansion pair
	Cause: assigning a probability of an abbreviation/expansion pair
	Effect: First , we used it to bootstrap a model

CASE: 16
Stag: 40 
	Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
	sentTXT: Second , we used it to extract contextual n-gram features for predicting possible expansions
	Cause: predicting possible expansions
	Effect: Second , we used it to extract contextual n-gram features

CASE: 17
Stag: 42 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: OOVs labeled as abbreviations were also labeled with the correct expansion
	Cause: abbreviations were also labeled with the correct expansion
	Effect: OOVs labeled

CASE: 18
Stag: 44 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: We collect potential abbreviation/full-word pairs by looking for terms that could be abbreviations of full words that occur in the same context
	Cause: looking for terms that could be abbreviations of full words that occur in the same context
	Effect: We collect potential abbreviation/full-word pairs

CASE: 19
Stag: 48 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: The same contextual information of course is used later on to disambiguate which of the expansions is appropriate for the context . -RRB- To compute the initial guess as to what can be a possible abbreviation , a Thrax grammar -LSB- -RSB- is used that , among other things , specifies that the abbreviation must start with the same letter as the full word ; if a vowel is deleted , all adjacent vowels should also be deleted ; consonants may be deleted in a cluster , but not the last one ; and a -LRB- string -RRB- suffix may be deleted
	Cause: to what can be a possible abbreviation , a Thrax grammar -LSB- -RSB- is used that , among other things , specifies that the abbreviation must start with the same letter as the full word ; if a vowel is deleted , all adjacent vowels should also be deleted ; consonants may be deleted in a cluster , but not the last one ;
	Effect: The same contextual information of course is used later on to disambiguate which of the expansions is appropriate for the context . -RRB- To compute the initial guess

CASE: 20
Stag: 48 
	Pattern: 0 [[['if', 'once']], [',']]---- [[], ['&C@Complete@'], ['&R@Complete@']]
	sentTXT: to what can be a possible abbreviation , a Thrax grammar -LSB- -RSB- is used that , among other things , specifies that the abbreviation must start with the same letter as the full word ; if a vowel is deleted , all adjacent vowels should also be deleted ; consonants may be deleted in a cluster , but not the last one ;
	Cause: a vowel is deleted
	Effect: all adjacent vowels should also be deleted ; consonants may be deleted in a cluster , but not the last one ;

CASE: 21
Stag: 49 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: 2 2 This Thrax grammar can be found at http://openfst.cs.nyu.edu/twiki/bin/view/Contrib/ThraxContrib We count a pair of words as u ' \ u2018 ' co-occurring u ' \ u2019 ' if they are observed in the same context
	Cause: u ' \ u2018 ' co-occurring u ' \ u2019 ' if they are observed in the same
	Effect: 2 2 This Thrax grammar can be found at http://openfst.cs.nyu.edu/twiki/bin/view/Contrib/ThraxContrib We count a pair of words

CASE: 22
Stag: 51 
	Pattern: 0 [['based', 'on']]---- [['&R', '(,)', '(&ADV)'], ['&V-ing/&NP@C@', '(&Clause@C@)']]
	sentTXT: Then , for any pair of words u , v , we can assign a pair count based on the count of contexts where both occur
	Cause: the count of contexts where both occur
	Effect: Then , for any pair of words u , v , we can assign a pair count

CASE: 23
Stag: 52 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Let c u ' \ u2062 ' -LRB- u -RRB- be defined as u ' \ u2211 ' v c u ' \ u2062 ' -LRB- u , v
	Cause: u ' \ u2211 ' v c u ' \ u2062 ' -LRB-
	Effect: u ' \ u2062 ' -LRB- u -RRB- be defined

CASE: 24
Stag: 55 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: We further filter the potential abbreviations by removing ones that have a lot of potential expansions , where we set the cutoff at 10
	Cause: removing ones that have a lot of potential expansions , where we set the cutoff at 10
	Effect: We further filter the potential abbreviations

CASE: 25
Stag: 60 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Our abbreviation model is a pair character language model -LRB- LM -RRB- , also known as a joint multi-gram model -LSB- -RSB- , whereby aligned symbols are treated as a single token and a smoothed n-gram model is estimated
	Cause: a joint multi-gram model -LSB- -RSB- , whereby aligned symbols are treated as a single token and a smoothed n-gram model is
	Effect: Our abbreviation model is a pair character language model -LRB- LM -RRB- , also known

CASE: 26
Stag: 60 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: a joint multi-gram model -LSB- -RSB- , whereby aligned symbols are treated as a single token and a smoothed n-gram model is
	Cause: a single token and a smoothed n-gram model is
	Effect: a joint multi-gram model -LSB- -RSB- , whereby aligned symbols are treated

CASE: 27
Stag: 61 62 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: This defines a joint distribution over input and output sequences , and can be efficiently encoded as a weighted finite-state transducer The extracted abbreviation/expansion pairs are character-aligned and a 7-gram pair character LM is built over the alignments using the OpenGrm n-gram library -LSB- -RSB-
	Cause: a weighted finite-state transducer The extracted abbreviation/expansion pairs are
	Effect: This defines a joint distribution over input and output sequences , and can be efficiently encoded

CASE: 28
Stag: 66 67 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: The cost from this LM , normalized by the length of the expansion , serves as a score for the quality of a putative expansion for an abbreviation For a small set of frequent , conventionalized abbreviations -LRB- e.g. , , ca for California u ' \ u2014 ' 63 pairs in total u ' \ u2014 ' mainly state abbreviations and similar items -RRB- , we assign an fixed pair LM score , since these examples are in effect irregular cases , where the regularities of the productive abbreviation process do not capture their true cost
	Cause: a score for the quality of a putative expansion for an abbreviation For a small set of frequent , conventionalized abbreviations -LRB- e.g. , , ca for California u ' \ u2014 ' 63 pairs in total u ' \ u2014 ' mainly state abbreviations and similar items -RRB- , we assign an fixed pair LM score , since these examples are in effect irregular cases ,
	Effect: The cost from this LM , normalized by the length of the expansion , serves

CASE: 29
Stag: 67 
	Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
	sentTXT: For a small set of frequent , conventionalized abbreviations -LRB- e.g. , , ca for California u ' \ u2014 ' 63 pairs in total u ' \ u2014 ' mainly state abbreviations and similar items -RRB- , we assign an fixed pair LM score , since these examples are in effect irregular cases , where the regularities of the productive abbreviation process do not capture their true cost
	Cause: these examples are in effect irregular cases
	Effect: where the regularities of the productive abbreviation process do not capture their true cost

CASE: 30
Stag: 70 71 
	Pattern: 1 [['because', 'of']]---- [['&C', '(,/;/./--)', '(&ADV)'], ['(&THIS)', '&NP', '&R']]
	sentTXT: First , we simply train a smoothed n-gram LM from the data Because of the size of the data set , this is heavily pruned using relative entropy pruning -LSB- -RSB-
	Cause: First , we simply train a smoothed n-gram LM from the data
	Effect: , this is heavily pruned using relative entropy pruning -LSB- -RSB-

CASE: 31
Stag: 78 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: We randomly selected 14,434 OOVs in their full context , and had them manually annotated as falling within one of 8 categories , along with the expansion if the category was u ' \ u2018 ' abbreviation u ' \ u2019 '
	Cause: falling within one of 8 categories , along with the expansion if the category was u ' \ u2018 ' abbreviation u ' \ u2019 '
	Effect: We randomly selected 14,434 OOVs in their full context , and had them manually annotated

CASE: 32
Stag: 80 81 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: The abbreviation class is defined as cases where pronouncing as the expansion would be normal Other categories included letter sequence -LRB- expansion would not be normal , e.g. , , TV -RRB- ; partial letter sequence -LRB- e.g. , , PurePictureTV -RRB- ; misspelling ; leave as is -LRB- part of a URL or pronounced as a word , e.g. , , NATO -RRB- ; foreign ; don u ' \ u2019 ' t know ; and junk
	Cause: cases where pronouncing as the expansion would be normal Other categories included letter sequence -LRB- expansion would not be normal , e.g. , , TV -RRB- ; partial letter sequence -LRB- e.g. , , PurePictureTV -RRB- ; misspelling ; leave as is -LRB- part of a URL or pronounced as a word , e.g. , , NATO -RRB- ; foreign ; don u ' \ u2019 ' t know
	Effect: The abbreviation class is defined

CASE: 33
Stag: 81 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Other categories included letter sequence -LRB- expansion would not be normal , e.g. , , TV -RRB- ; partial letter sequence -LRB- e.g. , , PurePictureTV -RRB- ; misspelling ; leave as is -LRB- part of a URL or pronounced as a word , e.g. , , NATO -RRB- ; foreign ; don u ' \ u2019 ' t know ; and junk
	Cause: is -LRB- part of a URL or pronounced as a word , e.g. , , NATO -RRB- ; foreign ; don u ' \ u2019 ' t know ;
	Effect: Other categories included letter sequence -LRB- expansion would not be normal , e.g. , , TV -RRB- ; partial letter sequence -LRB- e.g. , , PurePictureTV -RRB- ; misspelling ; leave

CASE: 34
Stag: 96 
	Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
	sentTXT: In our experiments , k = 2 since we have a trigram model , though in cases where the target word is the last word in the string , k = 1 , because there only the end-of-string symbol must be predicted in addition to the expansion
	Cause: we have a trigram model
	Effect: though in cases where the target word is the last word in the string , k = 1 , because there only the end-of-string symbol must be predicted in addition to the

CASE: 35
Stag: 96 
	Pattern: 407 [['because']]---- [['&R', '(,)', '(&ADV)'], ['&C']]
	sentTXT: though in cases where the target word is the last word in the string , k = 1 , because there only the end-of-string symbol must be predicted in addition to the
	Cause: there only the end-of-string symbol must be predicted in addition to the
	Effect: where the target word is the last word in the string , k = 1

CASE: 36
Stag: 97 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: We then take the Bayesian fusion of this model with the pair LM , by adding them in the log space , to get prediction from both the context and abbreviation model
	Cause: adding them in the log space , to get prediction from both the context and abbreviation model
	Effect: We then take the Bayesian fusion of this model with the pair LM ,

CASE: 37
Stag: 101 
	Pattern: 5 [['so'], ['as', 'to']]---- [['&C', '(,)'], ['(&adj/&adv@C@)'], ['&R']]
	sentTXT: We then quantize these scores down into 16 bins , using the histogram in the training data to define bin thresholds so as to partition the training instances evenly
	Cause: We then quantize these scores down into 16 bins , using the histogram in the training data to define bin thresholds
	Effect: partition the training instances evenly

CASE: 38
Stag: 103 
	Pattern: 0 [['if']]---- [['&R@Complete@'], ['&C@Complete@']]
	sentTXT: A binary feature is defined for each bin that is set to 1 if the current candidate u ' \ u2019 ' s score is less than the threshold of that bin , otherwise 0
	Cause: the current candidate u ' \ u2019 ' s score is less than the threshold of that bin , otherwise 0
	Effect: A binary feature is defined for each bin that is set to 1

CASE: 39
Stag: 103 104 
	Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
	sentTXT: A binary feature is defined for each bin that is set to 1 if the current candidate u ' \ u2019 ' s score is less than the threshold of that bin , otherwise 0 Thus multiple bin features can be active for a given candidate expansion of the abbreviation
	Cause: A binary feature is defined for each bin that is set to 1 if the current candidate u ' \ u2019 ' s score is less than the threshold of that bin , otherwise 0
	Effect: multiple bin features can be active for a given candidate expansion of the

CASE: 40
Stag: 105 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: We also have features that fire for each type of contextual feature -LRB- e.g. , , trigram with expansion as middle word , etc. -RRB- , including u ' \ u2018 ' no context u ' \ u2019 ' , where none of the trigrams or bigrams from the current example that include the candidate expansion are present in our list
	Cause: middle word , etc. -RRB- , including u ' \ u2018 ' no context u ' \ u2019 ' , where none of the trigrams or bigrams from the current example that include the candidate expansion are present in our list
	Effect: We also have features that fire for each type of contextual feature -LRB- e.g. , , trigram with expansion

CASE: 41
Stag: 106 
	Pattern: 7 [['hence']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(,)', '&R']]
	sentTXT: Further , we have features for the length of the abbreviation -LRB- shorter abbreviations have more ambiguity , hence are more risky to expand -RRB- ; membership in the list of frequent , conventionalized abbreviations mentioned earlier ; and some combinations of these , along with bias features
	Cause: Further , we have features for the length of the abbreviation -LRB- shorter abbreviations have more ambiguity
	Effect: are more risky to expand -RRB- ; membership in the list of frequent , conventionalized abbreviations mentioned earlier ; and some combinations of these , along with bias features

CASE: 42
Stag: 126 
	Pattern: 30 []---- [['&V-ing@C@', '(,)', '&R@Complete@']]
	sentTXT: Taking this very high precision system combination of the N-gram and SVM models , we then combine with the baseline TTS system as follows
	Cause: Taking this very high precision system combination of the N-gram and SVM models
	Effect: we then combine with the baseline TTS system as follows

CASE: 43
Stag: 127 
	Pattern: 0 [[['if', 'once']], [',']]---- [[], ['&C@Complete@'], ['&R@Complete@']]
	sentTXT: First we apply our system , and expand the item if it scores above threshold ; for those items left unexpanded , we let the TTS system process it in its own way
	Cause: it scores above
	Effect: we let the TTS system process it in its own way

CASE: 44
Stag: 129 
	Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
	sentTXT: Of course , at test time , we will not know whether an OOV is an abbreviation or not , so we also looked at the performance on the rest of the collected data , to see how often it erroneously suggests an expansion from that set
	Cause: Of course , at test time , we will not know whether an OOV is an abbreviation or not
	Effect: we also looked at the performance on the rest of the collected data , to see how often it erroneously suggests an expansion from that set

CASE: 45
Stag: 129 130 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Of course , at test time , we will not know whether an OOV is an abbreviation or not , so we also looked at the performance on the rest of the collected data , to see how often it erroneously suggests an expansion from that set Of the 11,157 examples that were hand-labeled as non-abbreviations , our SVM u ' \ u2229 ' N-gram system expanded 45 items , which is a false positive rate of 0.4 % under the assumption that none of them should be expanded
	Cause: non-abbreviations , our SVM u ' \ u2229 ' N-gram system expanded 45 items , which is a false positive rate of 0.4 % under the assumption that none of them should be expanded
	Effect: Of course , at test time , we will not know whether an OOV is an abbreviation or not , so we also looked at the performance on the rest of the collected data , to see how often it erroneously suggests an expansion from that set Of the 11,157 examples that were hand-labeled

CASE: 46
Stag: 132 
	Pattern: 0 [['based', 'on']]---- [['&R', '(,)', '(&ADV)'], ['&V-ing/&NP@C@', '(&Clause@C@)']]
	sentTXT: We also experimented with a number of alternative high precision approaches that space precludes our presenting in detail here , including pruning the number of expansion candidates based on the pair LM score ; only allowing abbreviation expansion when at least one extracted n-gram context is present for that expansion in that context ; and CART tree -LSB- -RSB- training with real valued scores
	Cause: the pair LM score ; only allowing abbreviation expansion when at least one extracted n-gram context is present for that expansion in that context ; and CART tree -LSB- -RSB- training with real valued scores
	Effect: We also experimented with a number of alternative high precision approaches that space precludes our presenting in detail here , including pruning the number of expansion candidates

CASE: 47
Stag: 134 
	Pattern: 23 [['since']]---- [['&R@NCTime@', '(,)'], ['&C@NCTime@']]
	sentTXT: We found that , for use in combination with the baseline TTS system , large overall reductions in FP rate were achieved by using an initial system with substantially higher TP and somewhat higher FP rates , since far fewer abbreviations were then passed along unexpanded to the baseline system , with its relatively high 3 % FP rate
	Cause: far fewer abbreviations were then passed along unexpanded to the baseline system , with its relatively high 3 % FP rate
	Effect: system , large overall reductions in FP rate were achieved by using an initial system with substantially higher TP and somewhat higher FP rates

CASE: 48
Stag: 134 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: system , large overall reductions in FP rate were achieved by using an initial system with substantially higher TP and somewhat higher FP rates
	Cause: using an initial system with substantially higher TP and somewhat higher FP rates
	Effect: system , large overall reductions in FP rate were achieved

CASE: 49
Stag: 137 
	Pattern: 45 [['so', 'that']]---- [['&C'], ['&R']]
	sentTXT: Most notably , the TTS baseline system has a much lower true positive rate ; yet we find our systems achieve performance very close to that for the development set , so that our final combination with the TTS baseline was actually slighly better than the numbers on the development set
	Cause: Most notably , the TTS baseline system has a much lower true positive rate ; yet we find our systems achieve performance very close to that for the development set ,
	Effect: our final combination with the TTS baseline was actually slighly better than the numbers on the development set

CASE: 50
Stag: 140 
	Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
	sentTXT: Since the SVM features relate to general properties of abbreviations , expansions and contexts , the classifier parameters will likely carry over to new -LRB- English -RRB- domains
	Cause: the SVM features relate to general properties of abbreviations
	Effect: expansions and contexts , the classifier parameters will likely carry over to new -LRB- English -RRB- domains


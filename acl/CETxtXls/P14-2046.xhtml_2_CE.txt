************************************************************
P14-2046.xhtml_2_CE.txt: Cause-Effect links
************************************************************

CASE: 0
Stag: 0 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: We develop a system that lets people overcome language barriers by letting them speak a language they do not know
	Cause: letting them speak a language they do not know
	Effect: We develop a system that lets people overcome language barriers

CASE: 1
Stag: 6 
	Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
	sentTXT: Since the speaker may not be able to pronounce the foreign-language orthography , phrasebooks additionally provide phonetic spellings that approximate the sounds of the foreign phrase
	Cause: the speaker may not be able to pronounce the foreign-language orthography
	Effect: phrasebooks additionally provide phonetic spellings that approximate the sounds of the foreign phrase

CASE: 2
Stag: 10 
	Pattern: 0 [[['if', 'once']], [',']]---- [[], ['&C@Complete@'], ['&R@Complete@']]
	sentTXT: If the Franglish is well designed , an English speaker can pronounce it and be understood by a French listener
	Cause: the Franglish is well designed
	Effect: an English speaker can pronounce it and be understood by a French listener

CASE: 3
Stag: 12 
	Pattern: 0 [[['if', 'once']], [',']]---- [[], ['&C@Complete@'], ['&R@Complete@']]
	sentTXT: If a Chinese speaker wants to say u ' \ u2018 ' u ' \ u2018 ' -LCB- CJK -RCB- UTF8gkai u ' \ u975e ' u ' \ u5e38 ' u ' \ u611f ' u ' \ u8c22 ' u ' \ u4f60 ' u ' \ u8fd9 ' u ' \ u987f ' u ' \ u7f8e ' u ' \ u9910 ' u ' \ u2019 ' u ' \ u2019 ' , she need only read off the Chinglish u ' \ u201c ' -LCB- CJK -RCB- UTF8gkai u ' \ u4e09 ' u ' \ u53ef ' u ' \ u6cb9 ' u ' \ u5426 ' u ' \ u70ed ' u ' \ u65af ' u ' \ u5f2f ' u ' \ u5fb7 ' u ' \ u5426 ' u ' \ u7c73 ' u ' \ u6b27 ' u ' \ u201d ' , which approximates the sounds of u ' \ u201c ' Thank you for this wonderful meal u ' \ u201d ' using Chinese characters
	Cause: a Chinese speaker wants to say u ' \ u2018 ' u ' \ u2018 ' -LCB- CJK -RCB- UTF8gkai u ' \ u975e ' u ' \ u5e38 ' u ' \ u611f ' u ' \ u8c22 ' u ' \ u4f60 ' u ' \ u8fd9 ' u ' \ u987f ' u ' \ u7f8e ' u ' \ u9910 ' u ' \ u2019 ' u ' \ u2019 '
	Effect: she need only read off the Chinglish u ' \ u201c ' -LCB- CJK -RCB- UTF8gkai u ' \ u4e09 ' u ' \ u53ef ' u ' \ u6cb9 ' u ' \ u5426 ' u ' \ u70ed ' u ' \ u65af ' u ' \ u5f2f ' u ' \ u5fb7 ' u ' \ u5426 ' u ' \ u7c73 ' u ' \ u6b27 ' u ' \ u201d ' , which approximates the sounds of u ' \ u201c ' Thank you for this wonderful meal u ' \ u201d ' using Chinese characters

CASE: 4
Stag: 15 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: In this paper , we lift this restriction by designing and evaluating a software program with the following
	Cause: designing and evaluating a software program with the following
	Effect: In this paper , we lift this restriction

CASE: 5
Stag: 20 
	Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
	sentTXT: The main challenge is that different languages have different orthographies , different phoneme inventories , and different phonotactic constraints , so mismatches are inevitable
	Cause: The main challenge is that different languages have different orthographies , different phoneme inventories , and different phonotactic constraints
	Effect: mismatches are inevitable

CASE: 6
Stag: 36 
	Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
	sentTXT: We seek to imitate phonetic transformations found in phrasebooks , so phrasebooks themselves are a good source of training data
	Cause: We seek to imitate phonetic transformations found in phrasebooks
	Effect: phrasebooks themselves are a good source of training

CASE: 7
Stag: 41 
	Pattern: 18 [['because'], [',']]---- [[], ['&C'], ['&R']]
	sentTXT: First , because Chinglish and Chinese are written with the same characters , they render the same inventory of 416 distinct syllables
	Cause: Chinglish and Chinese are written with the same characters
	Effect: they render the same inventory of 416 distinct syllables

CASE: 8
Stag: 43 
	Pattern: 18 [['because'], [',']]---- [[], ['&C'], ['&R']]
	sentTXT: Syllables u ' \ u2018 ' u ' \ u2018 ' si u ' \ u2019 ' u ' \ u2019 ' and u ' \ u2018 ' u ' \ u2018 ' te u ' \ u2019 ' u ' \ u2019 ' are very popular , because while consonant clusters like English u ' \ u2018 ' u ' \ u2018 ' st u ' \ u2019 ' u ' \ u2019 ' are impossible to reproduce exactly , the particular vowels in u ' \ u2018 ' u ' \ u2018 ' si u ' \ u2019 ' u ' \ u2019 ' and u ' \ u2018 ' u ' \ u2018 ' te u ' \ u2019 ' u ' \ u2019 ' are fortunately very weak
	Cause: while consonant clusters like English u ' \ u2018 ' u ' \ u2018 ' st u ' \ u2019 ' u ' \ u2019 ' are impossible to reproduce exactly
	Effect: the particular vowels in u ' \ u2018 ' u ' \ u2018 ' si u ' \ u2019 ' u ' \ u2019 ' and u ' \ u2018 ' u ' \ u2018 ' te u ' \ u2019 ' u ' \ u2019 ' are fortunately very weak

CASE: 9
Stag: 46 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: It is reasonable for u ' \ u2018 ' u ' \ u2018 ' can I u ' \ u2019 ' u ' \ u2019 ' to be rendered as u ' \ u2018 ' u ' \ u2018 ' kan nai u ' \ u2019 ' u ' \ u2019 ' , with u ' \ u2018 ' u ' \ u2018 ' nai u ' \ u2019 ' u ' \ u2019 ' spanning both English words , but this is rare
	Cause: u ' \ u2018 ' u ' \ u2018 ' kan nai u ' \ u2019 ' u ' \ u2019 ' , with u ' \ u2018 ' u ' \ u2018 ' nai u ' \ u2019 ' u ' \ u2019 ' spanning both English words , but this
	Effect: It is reasonable for u ' \ u2018 ' u ' \ u2018 ' can I u ' \ u2019 ' u ' \ u2019 ' to be rendered

CASE: 10
Stag: 55 56 
	Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
	sentTXT: FSTs A , C , and D are unweighted , and remain so throughout this paper We must now estimate the values of FST B parameters , such as P -LRB- s i
	Cause: FSTs A , C , and D are unweighted , and remain
	Effect: throughout this paper We must now estimate the values of FST B parameters , such as P -LRB- s

CASE: 11
Stag: 58 
	Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
	sentTXT: To do this , we first take our phrasebook triples and construct sample string pairs Epron , Pinyin-split by pronouncing the phrasebook English with FST A , and by pronouncing the phrasebook Chinglish with FSTs D and C
	Cause: pronouncing the phrasebook English with FST A
	Effect: , and

CASE: 12
Stag: 61 62 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: For example , when we decode English u ' \ u2018 ' u ' \ u2018 ' grandmother u ' \ u2019 ' u ' \ u2019 ' , we get where as the reference Pinyin-split sequence is
	Cause: the reference Pinyin-split sequence is
	Effect: example , when we decode English u ' \ u2018 ' u ' \ u2018 ' grandmother u ' \ u2019 ' u ' \ u2019 ' , we get where

CASE: 13
Stag: 64 
	Pattern: 30 []---- [['&V-ing@C@', '(,)', '&R@Complete@']]
	sentTXT: Following phrase-based methods in statistical machine translation -LSB- 4 -RSB- and machine transliteration -LSB- 1 -RSB- , we model substitution of longer sequences
	Cause: Following phrase-based methods in statistical machine translation
	Effect: -LSB- 4 -RSB- and machine transliteration -LSB- 1 -RSB- ,

CASE: 14
Stag: 71 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: We create English , Pinyin training pairs from our phrasebook simply by pronouncing the Chinglish with FST D
	Cause: pronouncing the Chinglish with FST D
	Effect: We create English , Pinyin training pairs from our phrasebook simply

CASE: 15
Stag: 74 
	Pattern: 0 [['due', 'to']]---- [[], ['&NP@C@', '(,)', '&R']]
	sentTXT: Notice that this model makes alignment errors due to sparser data -LRB- e.g. , , the word u ' \ u2018 ' u ' \ u2018 ' tips u ' \ u2019 ' u ' \ u2019 ' and u ' \ u2018 ' u ' \ u2018 ' ti pu si u ' \ u2019 ' u ' \ u2019 ' only appear once each in the training data
	Cause: sparser data -LRB- e.g. ,
	Effect: the word u ' \ u2018 ' u ' \ u2018 ' tips u ' \ u2019 ' u ' \ u2019 ' and u ' \ u2018 ' u ' \ u2018 ' ti pu si u ' \ u2019 ' u ' \ u2019 ' only appear once each in the training data

CASE: 16
Stag: 79 
	Pattern: 407 [['because']]---- [['&R', '(,)', '(&ADV)'], ['&C']]
	sentTXT: The word-based model can only decode 29 of the 65 test utterances , because wFST E fails if an utterance contains a new English word type , previously unseen in training
	Cause: wFST E fails if an utterance contains a new English word type , previously unseen in training
	Effect: The word-based model can only decode 29 of the 65 test utterances

CASE: 17
Stag: 79 
	Pattern: 0 [['if']]---- [['&R@Complete@'], ['&C@Complete@']]
	sentTXT: wFST E fails if an utterance contains a new English word type , previously unseen in training
	Cause: an utterance contains a new English word type , previously unseen in training
	Effect: wFST E fails

CASE: 18
Stag: 83 
	Pattern: 23 [['since']]---- [['&R@NCTime@', '(,)'], ['&C@NCTime@']]
	sentTXT: Here , we start with reference English and measure the accuracy of Pinyin syllable production , since the choice of Chinglish character does not affect the Chinglish pronunciation
	Cause: the choice of Chinglish character does not affect the Chinglish pronunciation
	Effect: Here , we start with reference English and measure the accuracy of Pinyin syllable production

CASE: 19
Stag: 86 
	Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
	sentTXT: As Table 6 shows , the ratio of unseen English word tokens is small , thus large portion of tokens are transformed using word-based method
	Cause: As Table 6 shows , the ratio of unseen English word tokens is small
	Effect: large portion of tokens are transformed using word-based method

CASE: 20
Stag: 94 
	Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
	sentTXT: Speech recognition is more fragile than human transcription , so edit distances are greater
	Cause: Speech recognition is more fragile than human transcription
	Effect: edit distances are greater

CASE: 21
Stag: 96 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: Our work aims to help people speak foreign languages they don u ' \ u2019 ' t know , by providing native phonetic spellings that approximate the sounds of foreign phrases
	Cause: providing native phonetic spellings that approximate the sounds of foreign phrases
	Effect: Our work aims to help people speak foreign languages they don u ' \ u2019 ' t know ,

CASE: 22
Stag: 98 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: We improve the model by adding phrases , word boundary constraints , and improved alignment
	Cause: adding phrases , word boundary constraints , and improved alignment
	Effect: We improve the model


************************************************************
P14-2092.xhtml_1_CE.txt: Cause-Effect links
************************************************************

CASE: 0
Stag: 0 1 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Current Statistical Machine Translation (SMT) approaches model the translation problem as a process of generating a derivation of atomic translation units, assuming that every unit is drawn out of the same model The simplest of these is the phrase-based approach [ Och et al.1999 , Koehn et al.2003 ] which employs a global model to process any sub-strings of the input sentence
	Cause: [(0, 13), (1, 17)]
	Effect: [(0, 0), (0, 11)]

CASE: 1
Stag: 7 8 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Some of them developed syntax-based models on complete syntactic trees with Treebank annotations [ Liu et al.2006 , Huang et al.2006 , Zhang et al.2008 ] , and others used source-language syntax as soft constraints [ Marton and Resnik2008 , Chiang2010 ] However, these approaches suffer from the same problem as the phrase-based counterpart and use the single global model to handle different translation units, no matter they are from the skeleton of the input tree/sentence or other not-so-important sub-structures
	Cause: [(0, 36), (1, 38)]
	Effect: [(0, 4), (0, 34)]

CASE: 2
Stag: 17 
	Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
	sentTXT: Here we choose a simple and straightforward method a skeleton is obtained by dropping all unimportant words in the original sentence, while preserving the grammaticality
	Cause: [(0, 13), (0, 20)]
	Effect: [(0, 21), (0, 25)]

CASE: 3
Stag: 40 41 
	Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
	sentTXT: Obviously the skeleton used in this work can be viewed as a simplified sentence Thus the problem is in principle the same as sentence simplification/compression
	Cause: [(0, 2), (0, 13)]
	Effect: [(1, 1), (1, 9)]

CASE: 4
Stag: 42 43 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: The motivations of defining the problem in this way are two-fold First, as the skeleton is a well-formed (but simple) sentence, all current MT approaches are applicable to the skeleton translation problem
	Cause: [(1, 3), (1, 24)]
	Effect: [(0, 1), (1, 0)]

CASE: 5
Stag: 46 
	Pattern: 0 [['due', 'to']]---- [[], ['&NP@C@', '(,)', '&R']]
	sentTXT: Due to the lack of space, we do not go deep into this problem
	Cause: [(0, 2), (0, 5)]
	Effect: [(0, 7), (0, 14)]

CASE: 6
Stag: 50 51 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Then we define skeleton-based translation as a task of searching for the best target string t ^ given the source string and its skeleton u'\u03a4' As is standard in SMT, we further assume that 1) the translation process can be decomposed into a derivation of phrase-pairs (for phrase-based models) or translation rules (for syntax-based models); 2) and a linear function g u'\u2062' ( u'\u22c5' ) is used to assign a model score to each derivation
	Cause: [(1, 1), (1, 65)]
	Effect: [(0, 13), (0, 28)]

CASE: 7
Stag: 65 
	Pattern: 0 [['due', 'to']]---- [[], ['&NP@C@', '(,)', '&R']]
	sentTXT: E.g., one may introduce syntactic features into g s u'\u2062' k u'\u2062' e u'\u2062' l u'\u2062' ( d ) due to their good ability in capturing structural information; and employ a standard phrase-based model for g f u'\u2062' u u'\u2062' l u'\u2062' l u'\u2062' ( d ) in which not all segments of the sentence need to respect syntactic constraints
	Cause: [(0, 38), (0, 44)]
	Effect: [(0, 45), (0, 93)]

CASE: 8
Stag: 173 
	Pattern: 0 [['if']]---- [['&R@Complete@'], ['&C@Complete@']]
	sentTXT: A derivation d is skeleton-consistent if no phrases in d cross skeleton boundaries (e.g.,, a phrase where two of the source words are in the skeleton and one is outside
	Cause: [(0, 6), (0, 32)]
	Effect: [(0, 0), (0, 4)]

CASE: 9
Stag: 176 177 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Then, we can simply define g s u'\u2062' k u'\u2062' e u'\u2062' l u'\u2062' ( d ) and g f u'\u2062' u u'\u2062' l u'\u2062' l u'\u2062' ( d ) as the model scores of d u'\u03a4' and d This model makes the skeleton translation and full translation much simpler because they perform in the same way of string translation in phrase-based MT
	Cause: [(0, 64), (1, 22)]
	Effect: [(0, 0), (0, 62)]

CASE: 10
Stag: 177 
	Pattern: 407 [['because']]---- [['&R', '(,)', '(&ADV)'], ['&C']]
	sentTXT: This model makes the skeleton translation and full translation much simpler because they perform in the same way of string translation in phrase-based MT
	Cause: [(0, 12), (0, 23)]
	Effect: [(0, 0), (0, 10)]

CASE: 11
Stag: 201 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: For our skeletal language model, we trained a 5-gram language model on the target-side of the bilingual data by generalizing non-skeleton segments to Xs
	Cause: [(0, 20), (0, 24)]
	Effect: [(0, 0), (0, 18)]

CASE: 12
Stag: 202 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: We used the newswire portion of the NIST MT06 evaluation data as our development set, and used the evaluation data of MT04 and MT05 as our test sets
	Cause: [(0, 12), (0, 28)]
	Effect: [(0, 0), (0, 10)]

CASE: 13
Stag: 203 
	Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
	sentTXT: We chose the default feature set of the NiuTrans.Phrase engine for building the baseline, including phrase translation probabilities, lexical weights, a 5-gram language model, word and phrase bonuses, a ME-based lexicalized reordering model
	Cause: [(0, 11), (0, 37)]
	Effect: [(0, 0), (0, 9)]

CASE: 14
Stag: 206 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: We used the NEU Chinese sentence simplification (NEUCSS) corpus as our training data [ Zhang et al.2013 ]
	Cause: [(0, 12), (0, 18)]
	Effect: [(0, 0), (0, 10)]

CASE: 15
Stag: 209 
	Pattern: 0 [['according', 'to']]---- [['&R', '(,)'], ['&NP@C@']]
	sentTXT: For comparison, we also manually annotated the MT development and test data with skeleton information according to the annotation standard provided within NEUCSS
	Cause: [(0, 18), (0, 23)]
	Effect: [(0, 0), (0, 15)]

CASE: 16
Stag: 213 
	Pattern: 0 [['due', 'to']]---- [['&R'], ['&NP@C@']]
	sentTXT: However, using different skeleton identification results for training and inference (row 3) does not show big improvements due to the data inconsistency problem
	Cause: [(0, 22), (0, 25)]
	Effect: [(0, 0), (0, 19)]

CASE: 17
Stag: 223 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Further, we regarded skeleton-consistent derivations as an indicator feature and introduced it into the baseline system
	Cause: [(0, 7), (0, 16)]
	Effect: [(0, 0), (0, 5)]

CASE: 18
Stag: 224 225 
	Pattern: 0 [[['imply', 'implies', 'implied', 'indicate', 'indicates', 'indicated']]]---- [['&C', '(,/./;/--)', '&this', '(&adj)', '(&N)', '(&CAN/have/has/had)', '(&ADV)'], ['(that)', '&R@Complete@']]
	sentTXT: Seen from row s-feat., this feature does not show promising improvements These results indicate that the real improvements are due to the skeleton-based model/features used in this work, rather than the u'\u201d' well-formed u'\u201d' derivations
	Cause: [(0, 0), (0, 11)]
	Effect: [(1, 4), (1, 32)]

CASE: 19
Stag: 228 229 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: In contrast, we define sentence skeleton as the key segments of a sentence and develop a new MT approach based on this information There are some previous studies on the use of sentence skeleton or related information in MT [ Mellebeek et al.2006a , Mellebeek et al.2006b , Owczarzak et al.2006 ]
	Cause: [(0, 8), (1, 27)]
	Effect: [(0, 0), (0, 6)]


************************************************************
P14-1010.xhtml_2_CE.txt: Cause-Effect links
************************************************************

CASE: 0
Stag: 2 
	Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
	sentTXT: In this paper , we expand our translation options by desegmenting n - best lists or lattices
	Cause: desegmenting n
	Effect: - best lists or lattices

CASE: 1
Stag: 6 
	Pattern: 0 [[['lead', 'leads', 'led'], 'to']]---- [['&V-ing/&NP@C@', '(&CAN/have/has/had)'], ['&NP@R@', '(&Clause@R@)']]
	sentTXT: Morphological complexity leads to much higher type to token ratios than English , which can create sparsity problems during translation model estimation
	Cause: Morphological complexity
	Effect: much higher type to token ratios than English , which can create sparsity problems during translation model estimation

CASE: 2
Stag: 7 
	Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
	sentTXT: Morphological segmentation addresses this issue by splitting surface forms into meaningful morphemes , while also performing orthographic transformations to further reduce sparsity
	Cause: splitting surface forms into meaningful morphemes
	Effect: , while also performing orthographic transformations to further reduce sparsity

CASE: 3
Stag: 8 9 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: For example , the Arabic noun laldwl lldwl u ' \ u201c ' to the countries u ' \ u201d ' is segmented as l + u ' \ u201c ' to u ' \ u201d ' Aldwl u ' \ u201c ' the countries u ' \ u201d ' When translating from Arabic , this segmentation process is performed as input preprocessing and is otherwise transparent to the translation system
	Cause: l + u ' \ u201c ' to u ' \ u201d ' Aldwl u ' \ u201c ' the countries u ' \ u201d ' When translating from Arabic , this segmentation
	Effect: For example , the Arabic noun laldwl lldwl u ' \ u201c ' to the countries u ' \ u201d ' is segmented

CASE: 4
Stag: 9 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: When translating from Arabic , this segmentation process is performed as input preprocessing and is otherwise transparent to the translation system
	Cause: input preprocessing and is
	Effect: translating from Arabic , this segmentation process is performed

CASE: 5
Stag: 9 
	Pattern: 30 []---- [['&V-ing@C@', '(,)', '&R@Complete@']]
	sentTXT: translating from Arabic , this segmentation process is performed
	Cause: translating from Arabic
	Effect: this segmentation process is performed

CASE: 6
Stag: 12 13 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Desegmentation is typically performed as a post-processing step that is independent from the decoding process While this division of labor is useful , the pipeline approach may prevent the desegmenter from recovering from errors made by the decoder
	Cause: a post-processing step that is independent from the decoding process While this division of labor is useful , the pipeline approach may prevent the desegmenter from recovering from errors made
	Effect: Desegmentation is typically performed

CASE: 7
Stag: 18 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: We demonstrate that significant improvements in translation quality can be achieved by training a linear model to re-rank this transformed translation space
	Cause: training a linear model to re-rank this transformed translation space
	Effect: We demonstrate that significant improvements in translation quality can be achieved

CASE: 8
Stag: 20 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: Most techniques approach the problem by transforming the target language in some manner before training the translation model
	Cause: transforming the target language in some manner before training the translation model
	Effect: Most techniques approach the problem

CASE: 9
Stag: 25 26 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Other approaches train an SMT system to predict lemmas instead of surface forms , and then inflect the SMT output as a post-processing step -LSB- 21 , 7 , 11 , 10 -RSB- Alternatively , one can reparameterize existing phrase tables as exponential models , so that translation probabilities account for source context and morphological features -LSB- 16 , 30 -RSB-
	Cause: a post-processing step -LSB- 21 , 7 , 11 , 10 -RSB- Alternatively , one can reparameterize existing phrase tables as exponential models , so that translation probabilities account for source context and morphological features -LSB- 16 , 30
	Effect: Other approaches train an SMT system to predict lemmas instead of surface forms , and then inflect the SMT output

CASE: 10
Stag: 26 
	Pattern: 45 [['so', 'that']]---- [['&C'], ['&R']]
	sentTXT: Alternatively , one can reparameterize existing phrase tables as exponential models , so that translation probabilities account for source context and morphological features -LSB- 16 , 30 -RSB-
	Cause: Alternatively , one can reparameterize existing phrase tables as exponential models ,
	Effect: translation probabilities account for source context and morphological features -LSB- 16 , 30 -RSB-

CASE: 11
Stag: 30 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: Instead of producing an abstract feature layer , morphological segmentation transforms the target sentence by segmenting relevant morphemes , which are then handled as regular tokens during alignment and translation
	Cause: segmenting relevant morphemes , which are then handled as regular tokens during alignment and translation
	Effect: Instead of producing an abstract feature layer , morphological segmentation transforms the target sentence

CASE: 12
Stag: 32 33 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Such a segmentation can be produced as a byproduct of analysis -LSB- 24 , 2 , 9 -RSB- , or may be produced using an unsupervised morphological segmenter such as Morfessor -LSB- 20 , 7 -RSB- Work on target language morphological segmentation for SMT can be divided into three subproblems segmentation , desegmentation and integration
	Cause: a byproduct of analysis -LSB- 24 , 2 , 9 -RSB- , or may be produced using an unsupervised morphological segmenter such as Morfessor -LSB- 20 , 7 -RSB- Work on target language morphological segmentation for SMT can be divided into three subproblems segmentation , desegmentation and integration
	Effect: Such a segmentation can be produced

CASE: 13
Stag: 36 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: If a morphological feature does not manifest itself as a separate token in the source , then it may be best to leave its corresponding segment attached to the stem
	Cause: a separate token in the source , then it may be best to leave its corresponding segment attached to the
	Effect: a morphological feature does not manifest itself

CASE: 14
Stag: 38 
	Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
	sentTXT: Since our focus here is on integrating segmentation into the decoding process , we simply adopt the segmentation strategies recommended by previous work the Penn Arabic Treebank scheme for English-Arabic -LSB- 9 -RSB- , and an unsupervised scheme for English-Finnish -LSB- 7 -RSB-
	Cause: our focus here is on integrating segmentation into the decoding process
	Effect: we simply adopt the segmentation strategies recommended by previous work the Penn Arabic Treebank scheme for English-Arabic -LSB- 9 -RSB- , and an unsupervised scheme for English-Finnish -LSB- 7 -RSB-

CASE: 15
Stag: 49 
	Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
	sentTXT: Work on integration attempts to improve SMT performance for morphologically complex target languages by going beyond simple pre - and post-processing
	Cause: going beyond simple pre
	Effect: - and

CASE: 16
Stag: 66 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: We approach this problem by augmenting an SMT system built over target segments with features that reflect the desegmented target words
	Cause: augmenting an SMT system built over target segments with features that reflect the desegmented target words
	Effect: We approach this problem

CASE: 17
Stag: 67 
	Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
	sentTXT: In this section , we describe our various strategies for desegmenting the SMT system u ' \ u2019 ' s output space , along with the features that we add to take advantage of this desegmented view
	Cause: desegmenting the SMT system u ' \ u2019 ' s output space
	Effect: In this section , we describe our various strategies

CASE: 18
Stag: 76 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: The one-best approach can be extended easily by desegmenting n - best lists of segmented decoder output
	Cause: desegmenting n
	Effect: The one-best approach can be extended easily

CASE: 19
Stag: 76 77 
	Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
	sentTXT: The one-best approach can be extended easily by desegmenting n - best lists of segmented decoder output Doing so enables the inclusion of an unsegmented target language model , and with a small amount of bookkeeping , it also allows the inclusion of features related to the operations performed during desegmentation -LRB- see Section 3.4
	Cause: one-best approach can be extended easily by desegmenting n - best lists of segmented decoder output Doing
	Effect: enables the inclusion of an unsegmented target language model , and with a small amount of bookkeeping , it also allows the inclusion of features related to the operations performed during desegmentation -LRB- see Section 3.4

CASE: 20
Stag: 80 81 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Once n - best lists have been desegmented , we can tune on unsegmented references as a side-benefit This could improve translation quality , as it brings our training scenario closer to our test scenario -LRB- test BLEU is always measured on unsegmented references
	Cause: a side-benefit This could improve translation quality ,
	Effect: Once n - best lists have been desegmented , we can tune on unsegmented references

CASE: 21
Stag: 81 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: This could improve translation quality , as it brings our training scenario closer to our test scenario -LRB- test BLEU is always measured on unsegmented references
	Cause: it brings our training scenario closer to our test scenario -LRB- test BLEU is always measured on unsegmented references
	Effect: This could improve translation quality

CASE: 22
Stag: 89 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: The search graph of a phrase-based decoder can be interpreted as a lattice , which can be interpreted as a finite state acceptor over target strings
	Cause: a lattice , which can be interpreted as a finite state acceptor over
	Effect: The search graph of a phrase-based decoder can be interpreted

CASE: 23
Stag: 91 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: This is sometimes referred to as a word graph -LSB- 32 -RSB- , although in our case the segmented phrase table also produces tokens that correspond to morphemes
	Cause: a word graph -LSB- 32 -RSB- , although in our case the segmented phrase table also produces tokens that correspond to morphemes
	Effect: This is sometimes referred to

CASE: 24
Stag: 92 
	Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
	sentTXT: Our goal is to desegment the decoder u ' \ u2019 ' s output lattice , and in doing so , gain access to a compact , desegmented view of a large portion of the translation search space
	Cause: goal is to desegment the decoder u ' \ u2019 ' s output lattice , and in doing
	Effect: gain access to a compact , desegmented view of a large portion of the translation search space

CASE: 25
Stag: 93 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: This can be accomplished by composing the lattice with a desegmenting transducer that consumes morphemes and outputs desegmented words
	Cause: composing the lattice with a desegmenting transducer that consumes morphemes and outputs desegmented words
	Effect: This can be accomplished

CASE: 26
Stag: 97 98 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: 3 3 Throughout this paper , we use u ' \ u201c ' + u ' \ u201d ' to mark morphemes as prefixes or suffixes , as in w + or + h In Equation 1 only , we overload u ' \ u201c ' + u ' \ u201d ' as the Kleene cross
	Cause: prefixes or suffixes , as in w + or + h In Equation 1 only , we overload u ' \ u201c ' + u ' \ u201d ' as the Kleene
	Effect: 3 3 Throughout this paper , we use u ' \ u201c ' + u ' \ u201d ' to mark morphemes

CASE: 27
Stag: 98 99 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: In Equation 1 only , we overload u ' \ u201c ' + u ' \ u201d ' as the Kleene cross X + = = X X *
	Cause: the Kleene cross X + = = X X
	Effect: In Equation 1 only , we overload u ' \ u201c ' + u ' \ u201d '

CASE: 28
Stag: 101 102 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Equation 1 may need to be modified for other languages or segmentation schemes , but our techniques generalize to any definition that can be written as a regular expression A desegmenting transducer can be constructed by first encoding our desegmenter as a table that maps morpheme sequences to words
	Cause: a regular expression A desegmenting transducer can be constructed by first encoding our desegmenter as a table that maps morpheme sequences to
	Effect: but our techniques generalize to any definition that can be written

CASE: 29
Stag: 102 103 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: A desegmenting transducer can be constructed by first encoding our desegmenter as a table that maps morpheme sequences to words Regardless of whether the original desegmenter was based on concatenation , rules or table-lookup , it can be encoded as a lattice-specific table by applying it to an enumeration of all words found in the lattice
	Cause: a table that maps morpheme sequences to words Regardless of whether the original desegmenter was based on concatenation , rules or table-lookup , it can be encoded as a lattice-specific table by applying it to an enumeration of all words found in the
	Effect: A desegmenting transducer can be constructed by first encoding our desegmenter

CASE: 30
Stag: 103 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Regardless of whether the original desegmenter was based on concatenation , rules or table-lookup , it can be encoded as a lattice-specific table by applying it to an enumeration of all words found in the lattice
	Cause: a lattice-specific table by applying it to an enumeration of all words found in
	Effect: Regardless of whether the original desegmenter was based on concatenation , rules or table-lookup , it can be encoded

CASE: 31
Stag: 103 
	Pattern: 0 [['based', 'on'], [',']]---- [[], ['&V-ing/&NP@C@', '(&Clause@C@)'], ['&R']]
	sentTXT: Regardless of whether the original desegmenter was based on concatenation , rules or table-lookup , it can be encoded
	Cause: concatenation
	Effect: rules or table-lookup , it can be encoded

CASE: 32
Stag: 105 
	Pattern: 45 [['so', 'that']]---- [['&C'], ['&R']]
	sentTXT: Finally , we take the closure of this transducer , so that the resulting machine can transduce any sequence of words
	Cause: Finally , we take the closure of this transducer ,
	Effect: the resulting machine can transduce any sequence of words

CASE: 33
Stag: 108 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: The lattice -LRB- Figure 1 a -RRB- can then be desegmented by composing it with the transducer -LRB- 1 b -RRB- , producing a desegmented lattice -LRB- 1 c
	Cause: composing it with the transducer -LRB- 1 b -RRB- , producing a desegmented lattice -LRB- 1 c
	Effect: The lattice -LRB- Figure 1 a -RRB- can then be desegmented

CASE: 34
Stag: 112 
	Pattern: 0 [[['if', 'once']], [',']]---- [[], ['&C@Complete@'], ['&R@Complete@']]
	sentTXT: If this property does not hold , then nodes must be split until it does
	Cause: this property does not hold
	Effect: then nodes must be split until it does

CASE: 35
Stag: 116 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: Fortunately , LM annotation as well as any necessary lattice modifications can be performed simultaneously by composing the desegmented lattice with a finite state acceptor encoding the LM -LSB- 26 -RSB-
	Cause: composing the desegmented lattice with a finite state acceptor encoding the LM -LSB- 26 -RSB-
	Effect: Fortunately , LM annotation as well as any necessary lattice modifications can be performed simultaneously

CASE: 36
Stag: 117 118 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: In summary , we are given a segmented lattice , which encodes the decoder u ' \ u2019 ' s translation space as an acceptor over morphemes We compose this acceptor with a desegmenting transducer , and then with an unsegmented LM acceptor , producing a fully annotated , desegmented lattice
	Cause: an acceptor over morphemes We compose this acceptor with a desegmenting transducer , and then with an unsegmented LM acceptor , producing a fully annotated , desegmented
	Effect: In summary , we are given a segmented lattice , which encodes the decoder u ' \ u2019 ' s translation space

CASE: 37
Stag: 134 
	Pattern: 0 [['if']]---- [['&R@Complete@'], ['&C@Complete@']]
	sentTXT: A chain is valid if it emits the beginning of a word as defined by the regular expression in Equation 1
	Cause: it emits the beginning of a word as defined by the regular expression in Equation 1
	Effect: A chain is valid

CASE: 38
Stag: 135 
	Pattern: 0 [['if']]---- [['&R@Complete@'], ['&C@Complete@']]
	sentTXT: A valid chain is complete if its edges form an entire word , and if it is part of a path through the lattice that consists only of words
	Cause: its edges form an entire word , and if it is part of a path through the lattice that
	Effect: A valid chain is complete

CASE: 39
Stag: 138 
	Pattern: 2 [['for', 'the', 'sake', 'of']]---- [['&R'], ['&V-ing/&NP@C@']]
	sentTXT: 5 5 Sentence-initial suffix morphemes and sentence-final prefix morphemes represent a special case that we omit for the sake of brevity
	Cause: brevity
	Effect: 5 5 Sentence-initial suffix morphemes and sentence-final prefix morphemes represent a special case that we omit

CASE: 40
Stag: 139 
	Pattern: 30 []---- [['&V-ing@C@', '(,)', '&R@Complete@']]
	sentTXT: Lacking stems , they are left segmented
	Cause: Lacking stems
	Effect: they are left segmented

CASE: 41
Stag: 140 
	Pattern: 0 [[['if', 'once']], [',']]---- [[], ['&C@Complete@'], ['&R@Complete@']]
	sentTXT: For example , if we removed the edge 2 u ' \ u2192 ' 3 -LRB- AlTfl -RRB- from Figure 1 a , then -LSB- 0 u ' \ u2192 ' 2 -RSB- -LRB- -LSB- b + lEbp -RSB- -RRB- would cease to be a complete chain , but it would still be a valid chain
	Cause: we removed the edge 2 u ' \ u2192 ' 3 -LRB- AlTfl -RRB- from Figure 1
	Effect: then -LSB- 0 u ' \ u2192 ' 2 -RSB- -LRB- -LSB- b + lEbp -RSB- -RRB- would cease to be a complete chain ,

CASE: 42
Stag: 144 
	Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
	sentTXT: The search recognizes the valid chain c to be complete by finding an edge e such that c + e forms a chain , but not a valid one
	Cause: finding an edge
	Effect: e such that c + e forms a chain , but not a valid

CASE: 43
Stag: 146 147 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: The chains found by this search are desegmented and then added to the output lattice as edges The nodes at end points of these chains are added to the work list , as they lie at word boundaries by definition
	Cause: edges The nodes at end points of these chains are added to the work list ,
	Effect: The chains found by this search are desegmented and then added to the output lattice

CASE: 44
Stag: 147 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: The nodes at end points of these chains are added to the work list , as they lie at word boundaries by definition
	Cause: they lie at word boundaries by definition
	Effect: The nodes at end points of these chains are added to the work list

CASE: 45
Stag: 156 
	Pattern: 0 [['based', 'on']]---- [['&R', '(,)', '(&ADV)'], ['&V-ing/&NP@C@', '(&Clause@C@)']]
	sentTXT: We use a table-based desegmentation method for Arabic , which is based on segmenting an Arabic training corpus and memorizing the observed transformations to reverse them later
	Cause: segmenting an Arabic training corpus and memorizing the observed transformations to reverse them later
	Effect: We use a table-based desegmentation method for Arabic , which is

CASE: 46
Stag: 157 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Finnish does not require a table , as all words can be desegmented with simple concatenation
	Cause: all words can be desegmented with simple concatenation
	Effect: Finnish does not require a table

CASE: 47
Stag: 160 
	Pattern: 2 [['for', 'the', 'sake', 'of'], [',']]---- [[], ['&V-ing/&NP@C@'], ['&R']]
	sentTXT: For the sake of symmetry with the unambiguous Finnish case , we augment Arabic n - best lists or lattices with only the most frequent desegmentation Y
	Cause: symmetry with the unambiguous Finnish case
	Effect: we augment Arabic n - best lists or lattices with only the most frequent desegmentation Y

CASE: 48
Stag: 162 163 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: We provide the desegmentation score log p -LRB- Y X -RRB- = log u ' \ u2061 ' -LRB- count of X u ' \ u2192 ' Y count of X -RRB- as a feature , to indicate the entry u ' \ u2019 ' s ambiguity in the training data
	Cause: a feature , to indicate the entry u ' \ u2019 ' s ambiguity in the training data
	Effect: We provide the desegmentation score log p -LRB- Y X -RRB- = log u ' \ u2061 ' -LRB- count of X u ' \ u2192 ' Y count of X -RRB-

CASE: 49
Stag: 164 165 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: 7 7 We also experimented on log p -LRB- X Y -RRB- as an additional feature , but observed no improvement in translation quality
	Cause: an additional feature , but observed no improvement in translation quality
	Effect: We also experimented on log p -LRB- X Y -RRB-

CASE: 50
Stag: 169 170 
	Pattern: 0 [[['imply', 'implies', 'implied', 'indicate', 'indicates', 'indicated']]]---- [['&C', '(,/./;/--)', '&this', '(&adj)', '(&N)', '(&CAN/have/has/had)', '(&ADV)'], ['(that)', '&R@Complete@']]
	sentTXT: In order to maintain some control over this powerful capability , we create three binary features that indicate the contiguity of a desegmentation The first feature indicates that the desegmented morphemes were translated from contiguous source words
	Cause: In order to maintain some control over this powerful capability , we create three binary features
	Effect: the contiguity of a desegmentation The first feature indicates that the desegmented morphemes were translated from contiguous source

CASE: 51
Stag: 171 172 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: The second indicates that the source words contained a single discontiguity , as in a word-by-word translation of the u ' \ u201c ' with his blue car u ' \ u201d ' example from Section 2.2 The third indicates two or more discontiguities
	Cause: in a word-by-word translation of the u ' \ u201c ' with his blue car u ' \ u201d ' example from Section 2.2 The third indicates two or more
	Effect: The second indicates that the source words contained a single discontiguity

CASE: 52
Stag: 172 
	Pattern: 0 [[['indicate', 'indicates', 'indicated', 'realize', 'realizes', 'realized', 'ensure', 'ensures', 'ensured', 'imply', 'implies', 'implied']]]---- [['&NP@C@', '(&Clause@C@)'], ['&NP@R@', '(&Clause@R@)']]
	sentTXT: The third indicates two or more discontiguities
	Cause: The third
	Effect: two or more discontiguities

CASE: 53
Stag: 176 177 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: We tune on the NIST 2004 evaluation set -LRB- 1353 sentences -RRB- and evaluate on NIST 2005 -LRB- 1056 sentences As these evaluation sets are intended for Arabic-to-English translation , we select the first English reference to use as our source text
	Cause: these evaluation sets are intended for Arabic-to-English translation , we select the first English reference to use as our source text
	Effect: We tune on the NIST 2004 evaluation set -LRB- 1353 sentences -RRB- and evaluate on NIST 2005 -LRB- 1056 sentences

CASE: 54
Stag: 182 
	Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
	sentTXT: For both segmented and unsegmented Arabic , we further normalize the script by converting different forms of Alif a u ' \ u2019 ' A u ' \ u2019 ' a u ' \ u2019 ' i and Ya y _ A to bare Alif a and dotless Ya _ A
	Cause: converting different forms of Alif a u ' \ u2019 ' A u ' \ u2019 ' a u ' \ u2019 ' i and Ya y _ A to bare Alif a
	Effect: and dotless Ya _ A

CASE: 55
Stag: 186 
	Pattern: 0 [['according', 'to']]---- [['&R', '(,)'], ['&NP@C@']]
	sentTXT: To improve coverage , words are further segmented according to their longest matching suffix from the list
	Cause: their longest matching suffix from the list
	Effect: To improve coverage , words are further segmented

CASE: 56
Stag: 186 187 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: To improve coverage , words are further segmented according to their longest matching suffix from the list As Morfessor does not perform any orthographic normalizations , it can be desegmented with simple concatenation
	Cause: Morfessor does not perform any orthographic normalizations , it can be desegmented with simple concatenation
	Effect: To improve coverage , words are further segmented according to their longest matching suffix from the list

CASE: 57
Stag: 198 
	Pattern: 407 [['because']]---- [['&R', '(,)', '(&ADV)'], ['&C']]
	sentTXT: MIRA was selected over MERT because we have an in-house implementation that can tune on lattices very quickly
	Cause: we have an in-house implementation that can tune on lattices very quickly
	Effect: MIRA was selected over MERT

CASE: 58
Stag: 209 
	Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
	sentTXT: 8 8 Development experiments on a small-data English-to-Arabic scenario indicated that the Desegmentation Score was not particularly useful , so we exclude it from the main comparison , but include it in the ablation experiments
	Cause: 8 8 Development experiments on a small-data English-to-Arabic scenario indicated that the Desegmentation Score was not particularly useful
	Effect: we exclude it from the main comparison , but include it in the ablation experiments

CASE: 59
Stag: 212 213 
	Pattern: 0 [[['imply', 'implies', 'implied', 'mean', 'means', 'indicate', 'indicates', 'indicated']]]---- [['&C', '(,/./;/--)', '&this', '(&adj)', '(&N)', '(&CAN/have/has/had)', '(&ADV)'], ['&NP@R@']]
	sentTXT: 2011 -RRB- , we report average scores over five random tuning replications to account for optimizer instability For the baselines , this means 5 runs of decoder tuning
	Cause: 2011 -RRB- , we report average scores over five random tuning replications to account for optimizer instability For the baselines
	Effect: 5 runs of decoder tuning

CASE: 60
Stag: 213 214 
	Pattern: 0 [[['imply', 'implies', 'implied', 'mean', 'means', 'indicate', 'indicates', 'indicated']]]---- [['&C', '(,/./;/--)', '&this', '(&adj)', '(&N)', '(&CAN/have/has/had)', '(&ADV)'], ['&NP@R@']]
	sentTXT: For the baselines , this means 5 runs of decoder tuning For the desegmenting re-rankers , this means 5 runs of re-ranker tuning , each working on n - best lists or lattices produced by the same -LRB- representative -RRB- decoder weights
	Cause: the baselines , this means 5 runs of decoder tuning For the desegmenting re-rankers
	Effect: 5 runs of re-ranker tuning

CASE: 61
Stag: 225 226 
	Pattern: 23 [['since']]---- [['&R@NCTime@', '(,)'], ['&C@NCTime@']]
	sentTXT: As we attempted to replicate the approach of Clifton and Sarkar -LRB- 2011 -RRB- exactly by working with their segmented data , this difference is likely due to changes in Moses since the publication of their result Nonetheless , the 1000-best and lattice desegmenters both produce significant improvements over the 1-best desegmentation baseline , with Lattice Deseg achieving a 1-point improvement in TER
	Cause: the publication of their result Nonetheless , the 1000-best and lattice desegmenters both produce significant improvements over the 1-best desegmentation baseline , with Lattice Deseg achieving a 1-point improvement in
	Effect: As we attempted to replicate the approach of Clifton and Sarkar -LRB- 2011 -RRB- exactly by working with their segmented data , this difference is likely due to changes in Moses

CASE: 62
Stag: 228 229 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: We also tried a similar Morfessor-based segmentation for Arabic , which has an unsegmented test set BLEU of 32.7 As in Finnish , the 1-best desegmentation using Morfessor did not surpass the unsegmented baseline , producing a test BLEU of only 31.4 -LRB- not shown in Table 1
	Cause: in Finnish , the 1-best desegmentation using Morfessor did not surpass the unsegmented baseline , producing a test BLEU of only 31.4 -LRB- not shown in Table 1
	Effect: We also tried a similar Morfessor-based segmentation for Arabic , which has an unsegmented test set BLEU of 32.7

CASE: 63
Stag: 244 
	Pattern: 0 [['if']]---- [['&R@Complete@'], ['&C@Complete@']]
	sentTXT: We consider a phrase to be correct only if it can be found in the reference
	Cause: it can be found in the reference
	Effect: We consider a phrase to be correct only

CASE: 64
Stag: 245 
	Pattern: 0 [['according', 'to']]---- [['&R', '(,)'], ['&NP@C@']]
	sentTXT: Table 4 breaks down per-phrase accuracy according to four manually-assigned categories
	Cause: four manually-assigned categories
	Effect: Table 4 breaks down per-phrase accuracy

CASE: 65
Stag: 246 
	Pattern: 0 [['due', 'to']]---- [[], ['&NP@C@', '(,)', '&R']]
	sentTXT: 1 -RRB- clitical u ' \ u2013 ' the two systems agree on a stem , but at least one clitic , often a prefix denoting a preposition or determiner , was dropped , added or replaced ; -LRB- 2 -RRB- lexical u ' \ u2013 ' a word was changed to a morphologically unrelated word with a similar meaning ; -LRB- 3 -RRB- inflectional u ' \ u2013 ' the words have the same stem , but different inflection due to a change in gender , number or verb tense ; -LRB- 4 -RRB- part-of-speech u ' \ u2013 ' the two systems agree on the lemma , but have selected different parts of speech
	Cause: a change in gender , number or verb tense ; -LRB- 4 -RRB- part-of-speech u ' \ u2013
	Effect: ' the two systems agree on the lemma , but have selected different parts of speech

CASE: 66
Stag: 250 
	Pattern: 407 [['because']]---- [['&R', '(,)', '(&ADV)'], ['&C']]
	sentTXT: This category is challenging for the decoder because English prepositions tend to correspond to multiple possible forms when translated into Arabic
	Cause: English prepositions tend to correspond to multiple possible forms when translated into Arabic
	Effect: This category is challenging for the decoder


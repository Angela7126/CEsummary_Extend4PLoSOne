************************************************************
P14-1096.xhtml_1_CE.txt: Cause-Effect links
************************************************************

CASE: 0
Stag: 6 
	Pattern: 47 [['so'], ['that']]---- [['&C'], ['&adj/&adv@C@'], ['&R']]
	sentTXT: However, another equally important aspect that has not been so far well investigated corresponds to one or more changes that a word might undergo in its sense
	Cause: [(0, 0), (0, 12)]
	Effect: [(0, 21), (0, 27)]

CASE: 1
Stag: 7 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: This particular aspect is getting increasingly attainable as more and more time-varying text data become available in the form of millions of digitized books [ Goldberg and Orwant2013 ] gathered over the last centuries
	Cause: [(0, 8), (0, 31)]
	Effect: [(0, 0), (0, 6)]

CASE: 2
Stag: 7 8 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: This particular aspect is getting increasingly attainable as more and more time-varying text data become available in the form of millions of digitized books [ Goldberg and Orwant2013 ] gathered over the last centuries As a motivating example one could consider the word u'\u201c' sick u'\u201d' u'\u2013' while according to the standard English dictionaries the word is normally used to refer to some sort of illness, a new meaning of u'\u201c' sick u'\u201d' referring to something that is u'\u201c' crazy u'\u201d' or u'\u201c' cool u'\u201d' is currently getting popular in the English vernacular
	Cause: [(1, 1), (1, 95)]
	Effect: [(0, 0), (0, 33)]

CASE: 3
Stag: 9 
	Pattern: 407 [['because']]---- [['&R', '(,)', '(&ADV)'], ['&C']]
	sentTXT: This change is further interesting because while traditionally u'\u201c' sick u'\u201d' has been associated to something negative in general, the current meaning associates positivity with it
	Cause: [(0, 6), (0, 34)]
	Effect: [(0, 0), (0, 4)]

CASE: 4
Stag: 14 
	Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
	sentTXT: Toward this objective we make the following contributions a) devise a time-varying graph clustering based sense induction algorithm, (b) use the time-varying sense clusters to develop a split-join based approach for identifying new senses of a word, and (c) evaluate the performance of the algorithms on various datasets using different suitable approaches along with a detailed error analysis
	Cause: [(0, 35), (0, 40)]
	Effect: [(0, 0), (0, 33)]

CASE: 5
Stag: 15 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Remarkably, comparison with the English WordNet indicates that in 44% cases, as identified by our algorithm, there has been a birth of a completely novel sense, in 46% cases a new sense has split off from an older sense and in 43% cases two or more older senses have merged in to form a new sense
	Cause: [(0, 15), (0, 54)]
	Effect: [(0, 0), (0, 12)]

CASE: 6
Stag: 19 
	Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
	sentTXT: In Section 4 we present an approach based on graph clustering to identify the time-varying sense clusters and in Section 5 we present the split-merge based approach for tracking word sense changes
	Cause: [(0, 28), (0, 31)]
	Effect: [(0, 0), (0, 26)]

CASE: 7
Stag: 19 
	Pattern: 0 [['based', 'on']]---- [['&R', '(,)', '(&ADV)'], ['&V-ing/&NP@C@', '(&Clause@C@)']]
	sentTXT: In Section 4 we present an approach based on graph clustering to identify the time-varying sense clusters and in Section 5 we present the split-merge based approach for tracking word sense changes
	Cause: [(0, 9), (0, 26)]
	Effect: [(0, 0), (0, 6)]

CASE: 8
Stag: 24 25 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Some of the first attempts to automatic word sense discovery were made by Karen Spärck Jones [ Jones1986 ] ; later in lexicography, it has been extensively used as a pre-processing step for preparing mono- and multi-lingual dictionaries [ Kilgarriff and Tugwell2001 , Kilgarriff2004 ] However, as we have already pointed out that none of these works consider the temporal aspect of the problem
	Cause: [(0, 31), (1, 18)]
	Effect: [(0, 1), (0, 29)]

CASE: 9
Stag: 24 25 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Some of the first attempts to automatic word sense discovery were made by Karen Spärck Jones [ Jones1986 ] ; later in lexicography, it has been extensively used as a pre-processing step for preparing mono- and multi-lingual dictionaries [ Kilgarriff and Tugwell2001 , Kilgarriff2004 ] However, as we have already pointed out that none of these works consider the temporal aspect of the problem
	Cause: [(1, 3), (1, 19)]
	Effect: [(0, 1), (1, 0)]

CASE: 10
Stag: 28 
	Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
	sentTXT: Opinion formation deals with the self-organisation and emergence of shared vocabularies whereas our work focuses on how the different senses of these vocabulary words change over time and thus become u'\u201c' out-of-vocabulary u'\u201d'
	Cause: [(0, 0), (0, 26)]
	Effect: [(0, 29), (0, 40)]

CASE: 11
Stag: 29 
	Pattern: 3 [['as', 'a'], ['result']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(&ADJ)'], ['(,)', '&R']]
	sentTXT: Topic detection involves detecting the occurrence of a new event such as a plane crash, a murder, a jury trial result, or a political scandal in a stream of news stories from multiple sources and tracking is the process of monitoring a stream of news stories to find those that track (or discuss) the same event
	Cause: [(0, 0), (0, 10)]
	Effect: [(0, 24), (0, 60)]

CASE: 12
Stag: 30 31 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: This is done on shorter timescales (hours, days), whereas our study focuses on larger timescales (decades, centuries) and we are interested in common nouns, verbs and adjectives as opposed to events that are characterized mostly by named entities Other similar works on dynamic topic modelling can be found in [ Blei and Lafferty2006 , Wang and McCallum2006 ]
	Cause: [(0, 36), (1, 19)]
	Effect: [(0, 0), (0, 34)]

CASE: 13
Stag: 33 34 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: It only reports frequency of word usage over the years, but does not give any correlation among them as e.g.,, in [ Heyer et al.2009 ] , and does not analyze their senses A few approaches suggested by [ Bond et al.2009 , Pääkkö and Lindén2012 ] attempt to augment WordNet synsets primarily using methods of annotation
	Cause: [(0, 20), (1, 10)]
	Effect: [(0, 0), (0, 18)]

CASE: 14
Stag: 36 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: [ Cook et al.2013 ] attempts to induce word senses and then identify novel senses by comparing two different corpora the u'\u201c' focus corpora u'\u201d' (i.e.,, a recent version of the corpora) and the u'\u201c' reference corpora u'\u201d' (older version of the corpora
	Cause: [(0, 17), (0, 64)]
	Effect: [(0, 0), (0, 15)]

CASE: 15
Stag: 37 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: However, this method is limited as it only considers two time points to identify sense changes as opposed to our approach which is over a much larger timescale, thereby, effectively allowing us to track the points of change and the underlying causes
	Cause: [(0, 7), (0, 44)]
	Effect: [(0, 0), (0, 5)]

CASE: 16
Stag: 49 50 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: In this approach, we first extract each word and a set of its context features, which are formed by labeled and directed dependency parse edges as provided in the dataset Following this, we compute the frequencies of the word, the context and the words along with their context
	Cause: [(0, 28), (1, 19)]
	Effect: [(0, 0), (0, 26)]

CASE: 17
Stag: 54 
	Pattern: 0 [[['if', 'once']], [',']]---- [[], ['&C@Complete@'], ['&R@Complete@']]
	sentTXT: If a word undergoes a sense change, this can be detected by comparing its senses obtained from two different time periods
	Cause: [(0, 1), (0, 6)]
	Effect: [(0, 8), (0, 21)]

CASE: 18
Stag: 54 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: If a word undergoes a sense change, this can be detected by comparing its senses obtained from two different time periods
	Cause: [(0, 5), (0, 13)]
	Effect: [(0, 0), (0, 3)]

CASE: 19
Stag: 55 
	Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
	sentTXT: Since we aim to detect this change automatically, we require distributional representations corresponding to word senses for different time periods
	Cause: [(0, 1), (0, 7)]
	Effect: [(0, 9), (0, 18)]

CASE: 20
Stag: 55 56 
	Pattern: 62 [['therefore']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(,)', '&R']]
	sentTXT: Since we aim to detect this change automatically, we require distributional representations corresponding to word senses for different time periods We, therefore, utilize the basic hypothesis of unsupervised sense induction to induce the sense clusters over various time periods and then compare these clusters to detect sense change
	Cause: [(0, 1), (1, 0)]
	Effect: [(1, 4), (1, 29)]

CASE: 21
Stag: 62 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: The algorithm, in particular, produces a set of clusters for each target word by decomposing its open neighborhood
	Cause: [(0, 16), (0, 19)]
	Effect: [(0, 0), (0, 14)]

CASE: 22
Stag: 65 
	Pattern: 0 [[['if', 'once']], [',']]---- [[], ['&C@Complete@'], ['&R@Complete@']]
	sentTXT: If a word undergoes sense change, this can be detected by comparing the sense clusters obtained from two different time periods by the algorithm outlined above
	Cause: [(0, 1), (0, 5)]
	Effect: [(0, 7), (0, 26)]

CASE: 23
Stag: 65 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: If a word undergoes sense change, this can be detected by comparing the sense clusters obtained from two different time periods by the algorithm outlined above
	Cause: [(0, 5), (0, 19)]
	Effect: [(0, 0), (0, 3)]

CASE: 24
Stag: 71 
	Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
	sentTXT: We next describe our algorithm for detecting sense change from these sets of sense clusters
	Cause: [(0, 6), (0, 14)]
	Effect: [(0, 0), (0, 4)]

CASE: 25
Stag: 72 73 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: We hypothesize that word w can undergo sense change from one time interval ( t u'\u2062' v i ) to another ( t u'\u2062' v j ) as per one of the following scenarios A sense cluster s i u'\u2062' z in t u'\u2062' v i splits into two (or more) sense clusters, s j u'\u2062' p 1 and s j u'\u2062' p 2 in t u'\u2062' v j
	Cause: [(0, 36), (1, 55)]
	Effect: [(0, 0), (0, 34)]

CASE: 26
Stag: 79 80 
	Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
	sentTXT: We append an additional row and column to capture the fraction of words, which did not show up in any of the sense clusters in another time interval So, an element I k u'\u2062' l of the matrix
	Cause: [(0, 0), (0, 28)]
	Effect: [(1, 2), (1, 14)]

CASE: 27
Stag: 83 84 
	Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
	sentTXT: 1 u'\u2264' k u'\u2264' m , l = n + 1 denotes the fraction of words in the sense cluster s i u'\u2062' k , that did not show up in any of the n clusters in t u'\u2062' v j Thus, the matrix I captures all the four possible scenarios for sense change
	Cause: [(0, 0), (0, 56)]
	Effect: [(1, 1), (1, 13)]

CASE: 28
Stag: 84 85 
	Pattern: 23 [['since']]---- [['&R@NCTime@', '(,)'], ['&C@NCTime@']]
	sentTXT: Thus, the matrix I captures all the four possible scenarios for sense change Since we can not expect a perfect split, birth etc., we used certain threshold values to detect if a candidate word is undergoing sense change via one of these four cases
	Cause: [(1, 1), (1, 8)]
	Effect: [(0, 0), (0, 13)]

CASE: 29
Stag: 85 86 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Since we can not expect a perfect split, birth etc., we used certain threshold values to detect if a candidate word is undergoing sense change via one of these four cases In Figure 1 , as an example, we illustrate the birth of a new sense for the word u'\u2018' compiler u'\u2019'
	Cause: [(1, 5), (1, 29)]
	Effect: [(0, 1), (1, 2)]

CASE: 30
Stag: 92 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: From the above list, we retain only those candidate words, which have a part-of-speech tag u'\u2018' NN u'\u2019' or u'\u2018' NNS u'\u2019' , as we focus on nouns for this work
	Cause: [(0, 42), (0, 48)]
	Effect: [(0, 0), (0, 39)]

CASE: 31
Stag: 93 94 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: We sort the candidate list obtained in Stage 2 as per their occurrence in the first time period Then, we remove the top 20 u'\u2062' % and the bottom 20 u'\u2062' % words from this list
	Cause: [(0, 10), (1, 25)]
	Effect: [(0, 0), (0, 8)]

CASE: 32
Stag: 94 95 
	Pattern: 62 [['therefore']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(,)', '&R']]
	sentTXT: Then, we remove the top 20 u'\u2062' % and the bottom 20 u'\u2062' % words from this list Therefore, we consider the torso of the frequency distribution which is the most informative part for this type of an analysis
	Cause: [(0, 0), (0, 26)]
	Effect: [(1, 2), (1, 21)]

CASE: 33
Stag: 112 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: An element of the table shows the number of candidate words obtained by comparing the corresponding source and target time periods
	Cause: [(0, 13), (0, 20)]
	Effect: [(0, 0), (0, 11)]

CASE: 34
Stag: 114 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: For most of the cases, the number of candidate birth senses tends to increase as we go from left to right
	Cause: [(0, 16), (0, 21)]
	Effect: [(0, 0), (0, 14)]

CASE: 35
Stag: 115 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Similarly, this number decreases as we go down in the table
	Cause: [(0, 6), (0, 11)]
	Effect: [(0, 0), (0, 4)]

CASE: 36
Stag: 116 117 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: This is quite intuitive since going from left to right corresponds to increasing the gap between two time periods while going down corresponds to decreasing this gap As the gap increases (decreases), one would expect more (less) new senses coming in
	Cause: [(1, 1), (1, 18)]
	Effect: [(0, 0), (0, 26)]

CASE: 37
Stag: 118 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Even while moving diagonally, the candidate words tend to decrease as we move downwards
	Cause: [(0, 12), (0, 14)]
	Effect: [(0, 0), (0, 10)]

CASE: 38
Stag: 119 
	Pattern: 62 [['therefore']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(,)', '&R']]
	sentTXT: This corresponds to the fact that the number of years in the time periods decreases as we move downwards, and therefore, the gap also decreases
	Cause: [(0, 0), (0, 18)]
	Effect: [(0, 23), (0, 26)]

CASE: 39
Stag: 119 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: This corresponds to the fact that the number of years in the time periods decreases as we move downwards, and therefore, the gap also decreases
	Cause: [(0, 16), (0, 18)]
	Effect: [(0, 0), (0, 14)]

CASE: 40
Stag: 120 
	Pattern: 0 [['if']]---- [['&R@Complete@'], ['&C@Complete@']]
	sentTXT: Formally, we consider a sense change from t u'\u2062' v i to t u'\u2062' v j stable if it was also detected while comparing t u'\u2062' v i with the following time periods t u'\u2062' v k s
	Cause: [(0, 27), (0, 54)]
	Effect: [(0, 0), (0, 25)]

CASE: 41
Stag: 122 
	Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
	sentTXT: Similarly, for a candidate sense change from t u'\u2062' v i to t u'\u2062' v j , we say that the location of the sense change is t u'\u2062' v j if and only if that sense change does not get detected by comparing t u'\u2062' v i with any time interval t u'\u2062' v k , intermediate between t u'\u2062' v i and t u'\u2062' v j
	Cause: [(0, 56), (0, 69)]
	Effect: [(0, 70), (0, 96)]

CASE: 42
Stag: 124 125 
	Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
	sentTXT: However, not all the candidate words were stable Thus, it was important to prune these results using stability analysis
	Cause: [(0, 0), (0, 8)]
	Effect: [(1, 1), (1, 11)]

CASE: 43
Stag: 127 
	Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
	sentTXT: For instance, among the 4238 candidate birth sense detected by comparing T 1 and T 6 , many of these new senses might have come up in between T 2 to T 5 as well
	Cause: [(0, 11), (0, 16)]
	Effect: [(0, 17), (0, 35)]

CASE: 44
Stag: 128 
	Pattern: 0 [['based', 'on'], [',']]---- [[], ['&V-ing/&NP@C@', '(&Clause@C@)'], ['&R']]
	sentTXT: We prune these lists further based on the stability of the sense, as well as to locate the approximate time interval, in which the sense change might have occurred
	Cause: [(0, 7), (0, 11)]
	Effect: [(0, 13), (0, 30)]

CASE: 45
Stag: 131 
	Pattern: 0 [[['if', 'once']], [',']]---- [[], ['&C@Complete@'], ['&R@Complete@']]
	sentTXT: Once we were able to locate the senses as well as to find the age of the senses, we attempted to select some representative words and plotted them on a timeline as per the birth period and their age in Figure 2
	Cause: [(0, 1), (0, 17)]
	Effect: [(0, 19), (0, 42)]

CASE: 46
Stag: 133 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: During evaluation, we considered the clusters obtained using the 1909-1953 time-slice as our reference and attempted to track sense change by comparing these with the clusters obtained for 2002-2005
	Cause: [(0, 13), (0, 29)]
	Effect: [(0, 0), (0, 11)]

CASE: 47
Stag: 133 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: During evaluation, we considered the clusters obtained using the 1909-1953 time-slice as our reference and attempted to track sense change by comparing these with the clusters obtained for 2002-2005
	Cause: [(0, 9), (0, 16)]
	Effect: [(0, 0), (0, 7)]

CASE: 48
Stag: 137 
	Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
	sentTXT: Since it was difficult to go through all the candidate sense changes for all the comparisons manually, we decided to randomly select some candidate words, which were flagged by our algorithm as undergoing sense change, while comparing 1909-1953 and 2002-2005 DT
	Cause: [(0, 1), (0, 16)]
	Effect: [(0, 18), (0, 43)]

CASE: 49
Stag: 137 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Since it was difficult to go through all the candidate sense changes for all the comparisons manually, we decided to randomly select some candidate words, which were flagged by our algorithm as undergoing sense change, while comparing 1909-1953 and 2002-2005 DT
	Cause: [(0, 16), (0, 19)]
	Effect: [(0, 0), (0, 14)]

CASE: 50
Stag: 139 140 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: One of the authors annotated each of the birth cases identifying whether or not the algorithm signalled a true sense change while another author did the same task for the split/join cases The accuracy as per manual evaluation was found to be 60.4% for the birth cases and 57% for the split/join cases
	Cause: [(1, 3), (1, 19)]
	Effect: [(0, 7), (1, 1)]

CASE: 51
Stag: 141 
	Pattern: 0 [['due', 'to']]---- [['&R'], ['&NP@C@']]
	sentTXT: Table 3 shows the evaluation results for a few candidate words, flagged due to birth
	Cause: [(0, 15), (0, 15)]
	Effect: [(0, 0), (0, 12)]

CASE: 52
Stag: 142 
	Pattern: 4 [['result'], ['is']]---- [['&C', '(,/./;/--)', '&ONE', '(&adj)'], ['(of &THIS (&NP))'], ['&NP@R@', '(&Clause@R@)']]
	sentTXT: Columns correspond to the candidate words, words obtained in the cluster of each candidate word (we will use the term u'\u2018' birth cluster u'\u2019' for these words, henceforth), which indicated a new sense, the results of manual evaluation as well as the possible sense this birth cluster denotes
	Cause: [(0, 0), (0, 45)]
	Effect: [(0, 59), (0, 61)]

CASE: 53
Stag: 144 
	Pattern: 0 [['due', 'to']]---- [[], ['&NP@C@', '(,)', '&R']]
	sentTXT: A further analysis of the words marked due to birth in the random samples indicates that there are 22 technology-related words, 2 slangs, 3 economics related words and 2 general words
	Cause: [(0, 9), (0, 13)]
	Effect: [(0, 14), (0, 32)]

CASE: 54
Stag: 145 146 
	Pattern: 62 [['therefore']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(,)', '&R']]
	sentTXT: For the split-join case we found that there are 3 technology-related words while the rest of the words are general Therefore one of the key observations is that most of the technology related words (where the neighborhood is completely new) could be extracted from our birth results
	Cause: [(0, 0), (0, 19)]
	Effect: [(1, 1), (1, 28)]

CASE: 55
Stag: 147 
	Pattern: 23 [['since']]---- [['&R@NCTime@', '(,)'], ['&C@NCTime@']]
	sentTXT: In contrast, for the split-join instances most of the results are from the general category since the neighborhood did not change much here; it either got split or merged from what it was earlier
	Cause: [(0, 17), (0, 35)]
	Effect: [(0, 0), (0, 15)]

CASE: 56
Stag: 149 
	Pattern: 407 [['because']]---- [['&R', '(,)', '(&ADV)'], ['&C']]
	sentTXT: We chose WordNet for automated evaluation because not only does it have a wide coverage of word senses but also it is being maintained and updated regularly to incorporate new senses
	Cause: [(0, 7), (0, 30)]
	Effect: [(0, 0), (0, 5)]

CASE: 57
Stag: 150 
	Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
	sentTXT: We did this evaluation for the candidate birth, join and split sense clusters obtained by comparing 1909-1953 time period with respect to 2002-2005
	Cause: [(0, 16), (0, 23)]
	Effect: [(0, 0), (0, 14)]

CASE: 58
Stag: 153 154 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: The CW cluster is then aligned to WordNet synsets by comparing the clusters with WordNet graph and the synset with the maximum alignment score is returned as the output In summary, the aligner tool takes as input the CW cluster and returns a WordNet synset id that corresponds to the cluster words
	Cause: [(0, 27), (1, 22)]
	Effect: [(0, 0), (0, 25)]

CASE: 59
Stag: 156 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: For a candidate word flagged as birth, we first find out the set of all WordNet synset ids for its CW clusters in the source time period (1909-1953 in this case
	Cause: [(0, 6), (0, 32)]
	Effect: [(0, 1), (0, 4)]

CASE: 60
Stag: 159 160 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: Then, if s n u'\u2062' e u'\u2062' w u'\u2209' S i u'\u2062' n u'\u2062' i u'\u2062' t , it implies that this is a new sense that was not present in the source clusters and we call it a u'\u2018' success u'\u2019' as per WordNet For the join case, we find WordNet synset ids s 1 and s 2 for the clusters obtained in the source time period and s n u'\u2062' e u'\u2062' w for the join cluster in the target time period
	Cause: [(0, 76), (1, 46)]
	Effect: [(0, 0), (0, 74)]

CASE: 61
Stag: 166 
	Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
	sentTXT: We then manually verified some of the words that were deemed as successes, as well as investigated WordNet sense they were mapped to
	Cause: [(0, 12), (0, 23)]
	Effect: [(0, 0), (0, 10)]

CASE: 62
Stag: 170 171 
	Pattern: 62 [['therefore']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(,)', '&R']]
	sentTXT: New slang words come up every now and then, and this plays an integral part in the phenomena of sense change We therefore decided to perform an evaluation as to how many slang words were being detected by our candidate birth clusters
	Cause: [(0, 1), (1, 0)]
	Effect: [(1, 2), (1, 20)]

CASE: 63
Stag: 177 
	Pattern: 407 [['because']]---- [['&R', '(,)', '(&ADV)'], ['&C']]
	sentTXT: Much of our evaluation was focussed on the birth sense clusters, mainly because these are more interesting from a lexicographic perspective
	Cause: [(0, 14), (0, 21)]
	Effect: [(0, 0), (0, 12)]

CASE: 64
Stag: 179 
	Pattern: 0 [['if']]---- [['&R@Complete@'], ['&C@Complete@']]
	sentTXT: To detect a true death of a sense, persistence analysis was required, that is, to verify if the sense was persisting earlier and vanished after a certain time period
	Cause: [(0, 20), (0, 31)]
	Effect: [(0, 0), (0, 18)]

CASE: 65
Stag: 183 
	Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
	sentTXT: AM would like to thank DAAD for supporting the faculty exchange programme to TU Darmstadt
	Cause: [(0, 7), (0, 14)]
	Effect: [(0, 0), (0, 5)]

CASE: 66
Stag: 184 
	Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
	sentTXT: PG would like to thank Google India Private Ltd for extending travel support to attend the conference
	Cause: [(0, 10), (0, 16)]
	Effect: [(0, 0), (0, 8)]


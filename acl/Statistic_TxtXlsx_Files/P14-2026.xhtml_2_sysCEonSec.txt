Current File: P14-2026.xhtml_2 P14-2026.xhtml

Section 0:  Abstract
	SentNum: 5
	CENum: 3
	SentCovered: 3
	Covered_Rate: 60.0000%

Section 1:  1 Introduction
	SentNum: 31
	CENum: 13
	SentCovered: 12
	Covered_Rate: 38.7097%

Section 2:  2 Dependency-based Pre-ordering Rule Set
	SentNum: 55
	CENum: 17
	SentCovered: 23
	Covered_Rate: 41.8182%

Section 3:  3 Experiments
	SentNum: 37
	CENum: 9
	SentCovered: 10
	Covered_Rate: 27.0270%

Section 4:  4 Conclusion
	SentNum: 7
	CENum: 5
	SentCovered: 5
	Covered_Rate: 71.4286%

#-------------------------------------------------

####################### CE links on each Section #########################

P14-2026.xhtml_2's CE cases

Section 0:  Abstract has 3 CE cases
	CASE: 1
	Stag: 0 
		Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
		sentTXT: In statistical machine translation (SMT), syntax-based pre-ordering of the source language is an effective method for dealing with language pairs where there are great differences in their respective word orders. 
		Cause: [(0, 19), (0, 32)]
		Effect: [(0, 0), (0, 17)]

	CASE: 2
	Stag: 1 
		Pattern: 0 [['based', 'on']]---- [['&R', '(,)', '(&ADV)'], ['&V-ing/&NP@C@', '(&Clause@C@)']]
		sentTXT: This paper introduces a novel pre-ordering approach based on dependency parsing for Chinese-English SMT. 
		Cause: [(0, 9), (0, 13)]
		Effect: [(0, 0), (0, 6)]

	CASE: 3
	Stag: 3 
		Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
		sentTXT: We also investigate the accuracy of the rule set by conducting human evaluations. 
		Cause: [(0, 10), (0, 12)]
		Effect: [(0, 3), (0, 8)]

Section 1:  1 Introduction has 13 CE cases
	CASE: 1
	Stag: 5 6 
		Pattern: 1 [['reason'], [['that', 'because']]]---- [['&R', '(,/./;/--)', '&ONE', '(&ADJ)'], ['(for &THIS (&NP))', '&BE'], ['&C']]
		sentTXT: SMT systems have difficulties translating between distant language pairs such as Chinese and English. The reason for this is that there are great differences in their word orders. 
		Cause: [(1, 6), (1, 13)]
		Effect: [(0, 0), (0, 13)]

	CASE: 2
	Stag: 6 7 
		Pattern: 62 [['therefore']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(,)', '&R']]
		sentTXT: The reason for this is that there are great differences in their word orders. Reordering therefore becomes a key issue in SMT systems between distant language pairs. 
		Cause: [(0, 1), (1, 0)]
		Effect: [(1, 2), (1, 12)]

	CASE: 3
	Stag: 8 
		Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
		sentTXT: Previous work has shown that the approaches tackling the problem by introducing a pre-ordering procedure into phrase-based SMT (PBSMT) were effective. 
		Cause: [(0, 11), (0, 20)]
		Effect: [(0, 21), (0, 22)]

	CASE: 4
	Stag: 11 
		Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
		sentTXT: Syntax-based pre-ordering by employing constituent parsing have demonstrated effectiveness in many language pairs, such as English-French [ 2004 ] , German-English [ 2005 ] , Chinese-English [ 2007 , 2008 ] , and English-Japanese [ 2010 ]. 
		Cause: [(0, 3), (0, 5)]
		Effect: [(0, 6), (0, 37)]

	CASE: 5
	Stag: 11 12 
		Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
		sentTXT: Syntax-based pre-ordering by employing constituent parsing have demonstrated effectiveness in many language pairs, such as English-French [ 2004 ] , German-English [ 2005 ] , Chinese-English [ 2007 , 2008 ] , and English-Japanese [ 2010 ]. As a kind of constituent structure, HPSG [ 1994 ] parsing-based pre-ordering showed improvements in SVO-SOV translations, such as English-Japanese [ 2010 , 2011 ] and Chinese-Japanese [ 2012 ]. 
		Cause: [(1, 1), (1, 31)]
		Effect: [(0, 0), (0, 37)]

	CASE: 6
	Stag: 13 
		Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
		sentTXT: Since dependency parsing is more concise than constituent parsing in describing sentences, some research has used dependency parsing in pre-ordering approaches for language pairs such as Arabic-English [ 2007 ] , and English-SOV languages [ 2009 , 2011 ]. 
		Cause: [(0, 1), (0, 11)]
		Effect: [(0, 13), (0, 39)]

	CASE: 7
	Stag: 15 
		Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
		sentTXT: The purpose of this paper is to introduce a novel dependency-based pre-ordering approach through creating a pre-ordering rule set and applying it to the Chinese-English PBSMT system. 
		Cause: [(0, 14), (0, 26)]
		Effect: [(0, 0), (0, 12)]

	CASE: 8
	Stag: 28 
		Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
		sentTXT: By applying our rules and Wang et al u'\u2019' s rules, one can use both dependency and constituency parsers for pre-ordering in Chinese-English PBSMT. 
		Cause: [(0, 1), (0, 14)]
		Effect: [(0, 15), (0, 28)]

	CASE: 9
	Stag: 29 
		Pattern: 407 [['because']]---- [['&R', '(,)', '(&ADV)'], ['&C']]
		sentTXT: This is especially important on the point of the system combination of PBSMT systems, because the diversity of outputs from machine translation systems is important for system combination [ 2013 ]. 
		Cause: [(0, 16), (0, 31)]
		Effect: [(0, 0), (0, 13)]

	CASE: 10
	Stag: 30 
		Pattern: 407 [['because']]---- [['&R', '(,)', '(&ADV)'], ['&C']]
		sentTXT: By using both our rules and Wang et al u'\u2019' s rules, one can obtain diverse machine translation results because the pre-ordering results of these two rule sets are generally different. 
		Cause: [(0, 25), (0, 35)]
		Effect: [(0, 0), (0, 23)]

	CASE: 11
	Stag: 30 
		Pattern: 0 [[['by', 'through']]]---- [[], ['&V-ing@C@', '&R']]
		sentTXT: By using both our rules and Wang et al u'\u2019' s rules, one can obtain diverse machine translation results because the pre-ordering results of these two rule sets are generally different. 
		Cause: [(0, 1), (0, 15)]
		Effect: [(0, 16), (0, 23)]

	CASE: 12
	Stag: 35 
		Pattern: 18 [['because'], [',']]---- [[], ['&C'], ['&R']]
		sentTXT: Because there are a lot of language specific decisions that reflect specific aspects of the source language and the language pair combination, our rule set provides a valuable resource for pre-ordering in Chinese-English PBSMT. 
		Cause: [(0, 1), (0, 21)]
		Effect: [(0, 23), (0, 34)]

	CASE: 13
	Stag: 35 
		Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
		sentTXT: Because there are a lot of language specific decisions that reflect specific aspects of the source language and the language pair combination, our rule set provides a valuable resource for pre-ordering in Chinese-English PBSMT. 
		Cause: [(0, 8), (0, 11)]
		Effect: [(0, 0), (0, 6)]

Section 2:  2 Dependency-based Pre-ordering Rule Set has 17 CE cases
	CASE: 1
	Stag: 39 
		Pattern: 18 [['because'], [',']]---- [[], ['&C'], ['&R']]
		sentTXT: Because dependency parse trees are generally more concise than the constituent ones, they can conduct long-distance reorderings in a finer way. 
		Cause: [(0, 1), (0, 11)]
		Effect: [(0, 13), (0, 21)]

	CASE: 2
	Stag: 39 40 
		Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
		sentTXT: Because dependency parse trees are generally more concise than the constituent ones, they can conduct long-distance reorderings in a finer way. Thus, we attempted to conduct pre-ordering based on dependency parsing. 
		Cause: [(0, 0), (0, 21)]
		Effect: [(1, 1), (1, 10)]

	CASE: 3
	Stag: 42 43 
		Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
		sentTXT: For Chinese, there are 45 types of grammatical relations for Stanford typed dependencies [ 2009 ] and 25 for CoNLL typed dependencies. As we thought that Stanford typed dependencies could describe language phenomena more meticulously owing to more types of grammatical relations, we preferred to use it for searching candidate pre-ordering rules. 
		Cause: [(1, 1), (1, 30)]
		Effect: [(0, 0), (0, 22)]

	CASE: 4
	Stag: 48 49 
		Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
		sentTXT: Here, both x and y are dependency relations (e.g.,, plmod or lobj in Figure 2. We define the dependency structure of a dependency relation as the structure containing the dependent word (e.g.,, the word directly indicated by plmod, or u'\u201c' å u'\u201d' in Figure 2) and the whole subtree under the dependency relation (all of the words that directly or indirectly depend on the dependent word, or the words under u'\u201c' å u'\u201d' in Figure 2. 
		Cause: [(1, 10), (1, 38)]
		Effect: [(0, 0), (1, 8)]

	CASE: 5
	Stag: 50 51 
		Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
		sentTXT: Further, we define X and Y as the corresponding dependency structures of the dependency relations x and y , respectively. We define X \ Y as structure X except Y. 
		Cause: [(0, 8), (1, 8)]
		Effect: [(0, 0), (0, 6)]

	CASE: 6
	Stag: 59 
		Pattern: 0 [['according', 'to']]---- [['&R', '(,)'], ['&NP@C@']]
		sentTXT: Search the Chinese dependency parse trees in the corpus and rank all of the structures matching the two types of rules respectively according to their frequencies. 
		Cause: [(0, 24), (0, 25)]
		Effect: [(0, 0), (0, 21)]

	CASE: 7
	Stag: 63 64 
		Pattern: 265 [['so']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(-far)', '(,)', '&R']]
		sentTXT: 2) Filter out the structures from which it was almost impossible to derive candidate pre-ordering rules because x or y was an u'\u201c' irrespective u'\u201d' dependency relation, for example, root, conj, cc and so on. Investigate the remaining structures. 
		Cause: [(0, 0), (0, 44)]
		Effect: [(0, 35), (1, 3)]

	CASE: 8
	Stag: 65 
		Pattern: 0 [['according', 'to']]---- [['&R', '(,)'], ['&NP@C@']]
		sentTXT: For each kind of structure, we selected some of the sample dependency parse trees that contained it, tried to restructure the parse trees according to the matched rule and judged the reordered Chinese phrases. 
		Cause: [(0, 27), (0, 29)]
		Effect: [(0, 0), (0, 24)]

	CASE: 9
	Stag: 66 
		Pattern: 0 [[['if', 'once']], [',']]---- [[], ['&C@Complete@'], ['&R@Complete@']]
		sentTXT: If the reordering produced a Chinese phrase that had a closer word order to that of the English one, this structure would be a candidate pre-ordering rule. 
		Cause: [(0, 1), (0, 18)]
		Effect: [(0, 20), (0, 27)]

	CASE: 10
	Stag: 66 67 
		Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
		sentTXT: If the reordering produced a Chinese phrase that had a closer word order to that of the English one, this structure would be a candidate pre-ordering rule. Conduct primary experiments which used the same training set and development set as the experiments described in Section 3. 
		Cause: [(1, 13), (1, 17)]
		Effect: [(0, 0), (1, 11)]

	CASE: 11
	Stag: 68 
		Pattern: 0 [['based', 'on']]---- [['&R', '(,)', '(&ADV)'], ['&V-ing/&NP@C@', '(&Clause@C@)']]
		sentTXT: In the primary experiments, we tested the effectiveness of the candidate rules and filtered the ones that did not work based on the BLEU scores on the development set. 
		Cause: [(0, 23), (0, 29)]
		Effect: [(0, 0), (0, 20)]

	CASE: 12
	Stag: 68 69 
		Pattern: 3 [['as', 'a'], ['result']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(&ADJ)'], ['(,)', '&R']]
		sentTXT: In the primary experiments, we tested the effectiveness of the candidate rules and filtered the ones that did not work based on the BLEU scores on the development set. As a result, we obtained eight pre-ordering rules in total, which can be divided into three dependency relation categories. 
		Cause: [(0, 0), (0, 29)]
		Effect: [(1, 4), (1, 20)]

	CASE: 13
	Stag: 74 75 
		Pattern: 62 [['therefore']]---- [['&C', '(,/;/./--)', '(&AND)'], ['(,)', '&R']]
		sentTXT: However, in English, this kind of word (e.g.,, u'\u201c' front u'\u201d' in the caption of Figure 2) always occur directly after prepositions, which is to say, in the second position in a prepositional phrase. Therefore, we applied a rule plmod lobj (localizer object) to reposition the dependent word of the plmod relation (e.g.,, u'\u201c' å u'\u201d' in Figure 2) to the position before the lobj structure (e.g.,, u'\u201c' ç¾å½ å¤§ä½¿é¦ u'\u201d' in Figure 2. 
		Cause: [(0, 0), (0, 49)]
		Effect: [(1, 2), (1, 62)]

	CASE: 14
	Stag: 79 80 
		Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
		sentTXT: Here u'\u201c' mw u'\u201d' means u'\u201c' measure word u'\u201d'. As shown in the figure, relative clause modifiers in Chinese (e.g.,, u'\u201c' æ¥è¿ å¤é ç u'\u201d' in Figure 3) occurs before the noun being modified, which is in contrast to English (e.g.,, u'\u201c' close to Sharon u'\u201d' in the caption of Figure 3), where they come after. 
		Cause: [(1, 1), (1, 67)]
		Effect: [(0, 10), (0, 24)]

	CASE: 15
	Stag: 80 81 
		Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
		sentTXT: As shown in the figure, relative clause modifiers in Chinese (e.g.,, u'\u201c' æ¥è¿ å¤é ç u'\u201d' in Figure 3) occurs before the noun being modified, which is in contrast to English (e.g.,, u'\u201c' close to Sharon u'\u201d' in the caption of Figure 3), where they come after. Thus, we introduced a series of rules NOUN rcmod to restructure rcmod structures so that the noun is moved to the head. 
		Cause: [(0, 0), (0, 70)]
		Effect: [(1, 1), (1, 22)]

	CASE: 16
	Stag: 83 
		Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
		sentTXT: Since a noun can be nsubj, dobj (direct object), pobj (prepositional object. 
		Cause: [(0, 1), (0, 5)]
		Effect: [(0, 7), (0, 16)]

	CASE: 17
	Stag: 89 
		Pattern: 30 []---- [['&V-ing@C@', '(,)', '&R@Complete@']]
		sentTXT: Recognizing that prep structures occur before the verb in Chinese (e.g.,, u'\u201c' å¨ æ­¤ å° u'\u201d' in Figure 5) but after the verb in English (usually in the last position of a verb phrase, e.g.,, u'\u201c' here u'\u201d' in the caption of Figure 5), we applied a rule prep - dobj to reposition prep structures after their sibling dobj structures. 
		Cause: [(0, 0), (0, 65)]
		Effect: [(0, 67), (0, 74)]

Section 3:  3 Experiments has 9 CE cases
	CASE: 1
	Stag: 100 
		Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
		sentTXT: The Berkeley Parser [ 2006 ] was employed for parsing the Chinese sentences. 
		Cause: [(0, 9), (0, 12)]
		Effect: [(0, 0), (0, 7)]

	CASE: 2
	Stag: 103 
		Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
		sentTXT: First, we converted the constituent parse trees in the results of the Berkeley Parser into dependency parse trees by employing a tool in the Stanford Parser [ 2003 ]. 
		Cause: [(0, 20), (0, 29)]
		Effect: [(0, 0), (0, 18)]

	CASE: 3
	Stag: 104 105 
		Pattern: 35 [['thus']]---- [['&C', '(,/;/./--)', '(&AND)'], ['&R']]
		sentTXT: For the Mate Parser, POS tagged inputs are required both in training and in inference. Thus, we then extracted the POS information from the results of the Berkeley Parser and used these as the pre-specified POS tags for the Mate Parser. 
		Cause: [(0, 0), (0, 15)]
		Effect: [(1, 1), (1, 26)]

	CASE: 4
	Stag: 110 111 
		Pattern: 1 [['reason'], [['that', 'because']]]---- [['&R', '(,/./;/--)', '&ONE', '(&ADJ)'], ['(for &THIS (&NP))', '&BE'], ['&C']]
		sentTXT: However, both of them substantially decreased the total times about 60% (or 1,600,000) for pre-ordering rule applications on the training set, compared with WR07. In our opinion, the reason for the great decrease was that the dependency parse trees were more concise than the constituent parse trees in describing sentences and they could also describe the reordering at the sentence level in a finer way. 
		Cause: [(1, 12), (1, 41)]
		Effect: [(0, 1), (1, 2)]

	CASE: 5
	Stag: 113 
		Pattern: 45 [['so', 'that']]---- [['&C'], ['&R']]
		sentTXT: In this case, the affect of the performance of the constituent parsers on pre-ordering is larger than that of the dependency ones so that the constituent parsers are likely to bring about more incorrect pre-orderings. 
		Cause: [(0, 0), (0, 22)]
		Effect: [(0, 25), (0, 35)]

	CASE: 6
	Stag: 115 
		Pattern: 30 []---- [['&V-ing@C@', '(,)', '&R@Complete@']]
		sentTXT: [ 2007 ] , we carried out human evaluations to assess the accuracy of our dependency-based pre-ordering rules by employing the system u'\u201c' OUR DEP 2 u'\u201d' in Table 1. 
		Cause: [(0, 0), (0, 2)]
		Effect: [(0, 4), (0, 37)]

	CASE: 7
	Stag: 115 
		Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
		sentTXT: [ 2007 ] , we carried out human evaluations to assess the accuracy of our dependency-based pre-ordering rules by employing the system u'\u201c' OUR DEP 2 u'\u201d' in Table 1. 
		Cause: [(0, 15), (0, 33)]
		Effect: [(0, 0), (0, 13)]

	CASE: 8
	Stag: 118 
		Pattern: 15 [['since'], [',']]---- [[], ['&C@NCTime@'], ['&R@NCTime@']]
		sentTXT: Since the accuracy check for dependency parse trees took great deal of time, we did not try to select error free (100% accurately parsed) sentences. 
		Cause: [(0, 1), (0, 11)]
		Effect: [(0, 14), (0, 28)]

	CASE: 9
	Stag: 121 
		Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
		sentTXT: The overall accuracy of this rule set is 60.0%, which is almost at the same level as the WR07 rule set (62.1%), according to the similar evaluation (200 sentences and one annotator) conducted in Wang et al. 
		Cause: [(0, 19), (0, 43)]
		Effect: [(0, 0), (0, 17)]

Section 4:  4 Conclusion has 5 CE cases
	CASE: 1
	Stag: 128 
		Pattern: 0 [['based', 'on']]---- [['&R', '(,)', '(&ADV)'], ['&V-ing/&NP@C@', '(&Clause@C@)']]
		sentTXT: In this paper, we introduced a novel pre-ordering approach based on dependency parsing for a Chinese-English PBSMT system. 
		Cause: [(0, 12), (0, 18)]
		Effect: [(0, 0), (0, 9)]

	CASE: 2
	Stag: 130 
		Pattern: 25 [['for']]---- [['&R'], ['&V-ing@C@']]
		sentTXT: Moreover, our dependency-based pre-ordering rule set substantially decreased the time for applying pre-ordering rules about 60% compared with WR07, on the training set of 1M sentences pairs. 
		Cause: [(0, 12), (0, 17)]
		Effect: [(0, 0), (0, 10)]

	CASE: 3
	Stag: 131 
		Pattern: 26 [['as']]---- [['&R@Complete@', '(,)', '(-such/-same/-seem/-regard/-regards/-regarded/-view/-views/-viewed/-denote/-denoted/-denotes)'], ['(-if/-follow/-follows/-&adv)', '&C@Complete@']]
		sentTXT: The overall accuracy of our rule set is 60.0%, which is almost at the same level as the WR07 rule set. 
		Cause: [(0, 19), (0, 22)]
		Effect: [(0, 0), (0, 17)]

	CASE: 4
	Stag: 131 132 
		Pattern: 0 [[['imply', 'implies', 'implied', 'indicate', 'indicates', 'indicated']]]---- [['&C', '(,/./;/--)', '&this', '(&adj)', '(&N)', '(&CAN/have/has/had)', '(&ADV)'], ['(that)', '&R@Complete@']]
		sentTXT: The overall accuracy of our rule set is 60.0%, which is almost at the same level as the WR07 rule set. These results indicated that dependency parsing is more effective for conducting pre-ordering for Chinese-English PBSMT. 
		Cause: [(0, 0), (0, 22)]
		Effect: [(1, 4), (1, 14)]

	CASE: 5
	Stag: 134 
		Pattern: 0 [[['by', 'through']]]---- [['&R@Complete@'], ['&V-ing@C@']]
		sentTXT: In the future, we attempt to create more efficient pre-ordering rules by exploiting the rich information in dependency structures. 
		Cause: [(0, 13), (0, 19)]
		Effect: [(0, 0), (0, 11)]

#-------------------------------------------------


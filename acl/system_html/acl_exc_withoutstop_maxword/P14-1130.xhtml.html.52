<html>
<head>
<title>P14-1130.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>From a computational perspective, adding non-sparse vectors directly as features, including their combinations, can significantly increase the number of active features for scoring syntactic structures (e.g.,, dependency arc</a>
<a name="1">[1]</a> <a href="#1" id=1>This framework enables us to learn new syntactically guided embeddings while also leveraging separately estimated word vectors as starting features, leading to improved parsing performance</a>
<a name="2">[2]</a> <a href="#2" id=2>Following standard machine learning practices, these algorithms iteratively select a subset of features by optimizing parsing performance on a development set</a>
<a name="3">[3]</a> <a href="#3" id=3>Tensors are increasingly used as tools in spectral estimation [ 15 ] , including in parsing [ 6 ] and other NLP problems [ 10 ] , where the goal is to avoid local optima in maximum likelihood estimation</a>
<a name="4">[4]</a> <a href="#4" id=4>This low dimensional syntactic abstraction can be thought of as a proxy to manually constructed POS tags</a>
<a name="5">[5]</a> <a href="#5" id=5>By automatically selecting a small number of dimensions useful for parsing, we can leverage a wide array of (correlated) features</a>
<a name="6">[6]</a> <a href="#6" id=6>The resulting embedding is therefore tied to the syntactic roles of the words (and arcs), and learned in order to perform well in parsing</a>
<a name="7">[7]</a> <a href="#7" id=7>As the evaluation measure, we use</a>
</body>
</html>
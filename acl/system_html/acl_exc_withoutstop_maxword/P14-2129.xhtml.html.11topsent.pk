(lp0
VSegmentation accuracy is reported as an F1-score of unlabeled segment bracketing
p1
aVAfter applying such a transform to a treebank, we can induce grammars and modify parsing to search as needed to recover just these constituents
p2
aVSpace constraints preclude inclusion of trials with this method, but the net result is a severe degradation in accuracy (tens of points of F-measure) versus standard parsing
p3
aVFinally, Figure 3 shows the speed of inference, labeled precision and labeled recall of annotating hedge constituents on the test set as a function of the maximum span parameter L , versus the baseline parser
p4
aVGiven a set of labeled pairs ( S , H ) where S is a sentence of n words w 1 u'\u005cu2062' u'\u005cu2026' u'\u005cu2062' w n and H is its hedge parse tree, word w b belongs to B if there is a hedge constituent spanning w b u'\u005cu2062' u'\u005cu2026' u'\u005cu2062' w e for some e u'\u005cu2265' b and w b belongs to B ¯ otherwise
p5
aVIn this paper, we propose several methods to parse hedge constituents and examine their accuracy/efficiency tradeoffs
p6
aVWe use hedge segmentation as a finite-state pre-processing step for hedge context-free parsing
p7
aVA unique property of hedge constituents compared to constituents in the original parse trees is that they are sequentially connected to the top-most node
p8
aVOur task is to learn which words can begin ( B ) a hedge constituent
p9
aVWe restrict the
p10
a.
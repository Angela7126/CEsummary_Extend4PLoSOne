<html>
<head>
<title>P14-2052.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Our method jointly utilizes relations between sentences and relations between words, and extracts a rooted document subtree from a document tree whose nodes are arbitrary subtrees of the sentence tree</a>
<a name="1">[1]</a> <a href="#1" id=1>The sentence tree is a tree that has words as nodes and head modifier relationships between words obtained by the dependency parser as edges</a>
<a name="2">[2]</a> <a href="#2" id=2>Subtree selection selected a root in both examples that differed from the parser u'\u2019' s root</a>
<a name="3">[3]</a> <a href="#3" id=3>We can build the nested tree by regarding each node of the document tree as a sentence tree</a>
<a name="4">[4]</a> <a href="#4" id=4>Rooted sentence subtree only selects rooted sentence subtrees 2 2 We achieved this by making R c u'\u2062' ( i ) only return the parser u'\u2019' s root node in Figure 7</a>
<a name="5">[5]</a> <a href="#5" id=5>The document tree is a tree that has sentences as nodes and head modifier relationships between sentences obtained by RST as edges</a>
<a name="6">[6]</a> <a href="#6" id=6>First, we represent a document as a nested tree , which is composed of two types of tree structures a document tree and a sentence tree</a>
<a name="7">[7]</a> <a href="#7" id=7>We can set the candidate for the root node of the subtree by using constraint ( 7</a>
<a name="8">[8]</a> <a href="#8" id=8>Constraints ( 2 ) and ( 3 ) are tree constraints for a document tree and sentence trees r i u'\u2062' j in Constraint ( 3 ) allows the system to extract non-rooted sentence subtrees,</a>
</body>
</html>
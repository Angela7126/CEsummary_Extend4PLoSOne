(lp0
VBased on abstract denotations, we briefly describe our process to apply DCS to textual inference
p1
aVWe built an inference engine to perform logical inference on abstract denotations as above
p2
aVSince meanings of sentences are represented by statements on abstract denotations, logical inference among sentences is reduced to deriving new relations among abstract denotations
p3
aVOn-the-fly knowledge is generated by aligning paths in DCS trees
p4
aVAbstract denotations and statements are convenient for representing semantics of various types of expressions and linguistic knowledge
p5
aVAs described below, we represent meanings of sentences with abstract denotations , and logical relations among sentences are computed as relations among their abstract denotations
p6
aVAccepted aligned paths are converted into statements, which are used as new knowledge
p7
aVMost of the problems do not require lexical knowledge, so we use our primary textual inference system without on-the-fly knowledge nor WordNet, to test the performance of the DCS framework as formal semantics
p8
aVOn PASCAL RTE datasets, strict logical inference is known to have very low recall [] , so on-the-fly knowledge is crucial in this setting
p9
aVTwo paths are aligned if the joined germs are aligned, and we impose constraints on aligned germs to inhibit meaningless alignments, as described below
p10
aVThe transparent syntax-to-semantics interface of DCS enables us to back off to NLP techniques during inference for catching up the lack of knowledge
p11
aVThe logical clue to align germs is if there exists an abstract denotation, other than W , that is a superset of both abstract denotations of two germs, then the two germs can be aligned
p12
aVThe conversion is done by first performing a DCS tree transformation according to the aligned paths, and then declare a subsumption relation between the denotations of aligned germs
p13
aVTo formulate the database querying process defined by a DCS tree, we provide formal semantics to DCS trees by employing relational algebra [] for representing the query
p14
aVMoreover, to compensate the lack of background knowledge in practical inference, we combine our framework with the idea of tree transformation [] , to propose a way of generating knowledge in logical representation from entailment rules [] , which are by now typically considered as syntactic rewriting rules
p15
aVIn this logical system, we treat abstract denotations as terms and statements as atomic sentences , which are far more easier to handle than first order predicate logic (FOL) formulas
p16
aVWe test our system on FraCaS [] and PASCAL RTE datasets []
p17
aVHowever, this method does not work for real-world datasets such as PASCAL RTE [] , because of the knowledge bottleneck it is often the case that the lack of sufficient linguistic knowledge causes failure of inference, thus the system outputs u'\u005cu201c' no entailment u'\u005cu201d' for almost all pairs []
p18
aVThe threshold for accepted path alignments is set to 0.4 , based on pre-experiments on RTE development sets
p19
aVHence, the process can also be used to generate knowledge from context sensitive rules [] , which are known to have higher quality []
p20
aVTechnically, each germ in a DCS tree indicates a variable when the DCS tree is translated to a FOL formula, and the abstract denotation of the germ corresponds to the set of consistent values [] of that variable
p21
aVFor example, Figure 5 shows DCS trees of the following sentences (a simplified pair from RTE2-dev
p22
aVA path is considered as joining two germs in a DCS tree, where a germ is defined as a specific semantic role of a node
p23
aVObviously this is unrealistic for logical inference on unrestricted texts, because we cannot prepare a database for everything in the world
p24
aVFurthermore, since the on-the-fly knowledge is generated by transformed pairs of DCS trees, all contexts are preserved in Figure 6 , though the tree transformation can be seen as generated from the entailment rule u'\u005cu201c' X is blamed for death u'\u005cu2192' X causes loss of life u'\u005cu201d' , the generated on-the-fly knowledge, as shown above the trees, only fires with the additional condition that X is a tropical storm and is
p25
a.
(lp0
VAs the semantics of DCS trees is formulated by abstract denotations, the meanings of declarative sentences are represented by statements on abstract denotations
p1
aVIn this section we describe the idea of representing natural language semantics by DCS trees, and achieving inference by computing logical relations among the corresponding abstract denotations
p2
aVThe strict semantics of DCS trees brings us the idea of applying DCS to logical inference
p3
aVTo formulate the database querying process defined by a DCS tree, we provide formal semantics to DCS trees by employing relational algebra [] for representing the query
p4
aVSince meanings of sentences are represented by statements on abstract denotations, logical inference among sentences is reduced to deriving new relations among abstract denotations
p5
aVAs described below, we represent meanings of sentences with abstract denotations , and logical relations among sentences are computed as relations among their abstract denotations
p6
aVWe obtain DCS trees from dependency trees, to bypass the need of a concrete database
p7
aVThis formulation keeps the simpleness and computability of DCS trees mostly unaffected; for example, our semantic calculation for DCS trees is parallel to the denotation computation in original DCS
p8
aVThe idea is to borrow a minimal set of operators from relational algebra [] , which is already able to formulate the calculation in DCS and define abstract denotation , which is an abstraction of the computation of denotations guided by DCS trees
p9
aVPerform rule-based conversion from dependency parses to DCS trees, which are translated to statements on abstract denotations
p10
aVOn-the-fly knowledge is generated by aligning paths in DCS trees
p11
aVDCS trees has been proposed to represent natural language semantics with a structure similar to dependency trees [] (Figure 1
p12
aVMeanings of sentences then can be represented by primary relations among abstract denotations
p13
aVBased on abstract denotations, we briefly describe our process to apply DCS to textual inference
p14
aVWe built an inference engine to perform logical inference on abstract denotations as above
p15
aVMost of the problems do not require lexical knowledge, so we use our primary textual inference system without on-the-fly knowledge nor WordNet, to test the performance of the DCS framework as formal semantics
p16
aVAs a comparison, studied the proportion of proven pairs and precision by applying DIRT rules to tree skeletons in RTE2 and RTE3 data
p17
aV6 6 In [] DCS trees are learned from QA pairs and database entries
p18
aVTo obtain DCS trees from natural language, we use Stanford CoreNLP 5 5 http://nlp.stanford.edu/software/corenlp.shtml for dependency parsing [] , and convert Stanford dependencies to DCS trees by pattern matching on POS tags and dependency labels
p19
aVAn inference engine is built to handle inference on abstract denotations
p20
aVConvert accepted path alignments into statements on abstract denotations, use them in logical inference as new knowledge, and try to prove H again
p21
aVOur solution is to redefine DCS trees without the aid of any databases, by considering each node of a DCS tree as a content word in a sentence (but may no longer be a table in a specific database), while each edge represents semantic relations between two words
p22
aVFor example, Figure 5 shows DCS trees of the following sentences (a simplified pair from RTE2-dev
p23
aVAbstract denotations and statements are convenient for representing semantics of various types of expressions and linguistic knowledge
p24
aVApplied by our logical system, the noisy on-the-fly knowledge can achieve a precision comparable to higher quality resources such as DIRT
p25
aVIf H is not proven, compare DCS trees of T and H , and generate path alignments
p26
aVSumming up test data from RTE2 to RTE5, Figure 7 shows the proportion of all proven pairs and their precision
p27
aVStatements are declarations of some relations among abstract denotations, for which we consider the following set relations
p28
aVAbstract denotation of a DCS tree can be calculated in a bottom-up manner
p29
aVIn this logical system, we treat abstract denotations as terms and statements as atomic sentences , which are far more easier to handle than first order predicate logic (FOL) formulas
p30
aVMacCartney08 [] uses natural logic to calculate inference
p31
a.
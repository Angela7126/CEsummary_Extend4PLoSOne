<html>
<head>
<title>P14-1063.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Most traditional models are linear models, in the sense that both the features of the data and model parameters are represented as vectors in a vector space</a>
<a name="1">[1]</a> <a href="#1" id=1>A linear tensor model represents both features and weights in tensor-space, hence the weight tensor can be factorized and approximated by a linear sum of rank-1 tensors</a>
<a name="2">[2]</a> <a href="#2" id=2>This also makes training the model parameters a challenging problem, since the amount of labeled training data is usually small compared to the size of feature sets the feature weights cannot be estimated reliably</a>
<a name="3">[3]</a> <a href="#3" id=3>In general, if V features are defined for a learning problem, and we (i) organize the feature set as a tensor u'\ud835' u'\udebd' u'\u2208' u'\u211d' n 1 n 2 u'\u2026' u'\u2062' n D and (ii) use H component rank-1 tensors to approximate the corresponding target weight tensor</a>
<a name="4">[4]</a> <a href="#4" id=4>The linear tensor model is illustrated in Figure 1</a>
<a name="5">[5]</a> <a href="#5" id=5>However if we use a 2 nd order tensor model, organize the features into a 1000 1000 matrix u'\ud835' u'\udebd' , and use just one rank-1 matrix to approximate the weight tensor, then the linear model becomes</a>
<a name="6">[6]</a> <a href="#6" id=6>As mentioned in Section 2.1 , a tensor model has many more degrees of u'\u201c' design freedom u'\u201d' than a vector model, which makes the problem of finding</a>
</body>
</html>
<html>
<head>
<title>P14-2060.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>In this paper we concentrate on abbreviations, which we define as alphabetic NSWs that it would be normal to pronounce as their expansion</a>
<a name="1">[1]</a> <a href="#1" id=1>Then a small amount of annotated data is used to build models to determine whether to accept a candidate expansion of an abbreviation based on these features</a>
<a name="2">[2]</a> <a href="#2" id=2>We present methods for learning abbreviation expansion models that favor high precision (incorrect expansions 2 u'\u2062' %</a>
<a name="3">[3]</a> <a href="#3" id=3>Perhaps the most demanding such application is text-to-speech synthesis (TTS) since, while for parsing, machine translation and information retrieval it may be acceptable to leave such things as numbers and abbreviations unexpanded, for TTS all tokens need to be read , and for that it is necessary to know how to pronounce them</a>
<a name="4">[4]</a> <a href="#4" id=4>Our abbreviation model is a pair character language model (LM), also known as a joint multi-gram model [] , whereby aligned symbols are</a>
</body>
</html>
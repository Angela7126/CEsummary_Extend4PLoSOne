<html>
<head>
<title>P14-1043.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>The reason may be that dependency parsing models are prone to amplify previous mistakes during training on self-parsed unlabeled data apply a variant of co-training to dependency parsing and report positive results on out-of-domain text combine tri-training and parser ensemble to boost parsing accuracy</a>
<a name="1">[1]</a> <a href="#1" id=1>The first three experiments combine 1-best outputs of two parsers to compose parse forest on unlabeled data u'\u201c' Unlabeled u'\u2190' B+(Z u'\u2229' G) u'\u201d' means that the parse forest is initialized with the Berkeley parse and augmented with the intersection of dependencies of the 1-best outputs of ZPar and GParser</a>
<a name="2">[2]</a> <a href="#2" id=2>Combining the outputs of Berkeley Parser and GParser ( u'\u201c' Unlabeled u'\u2190' B+G u'\u201d' ), we get higher oracle score (96.37% on English and 89.72% on Chinese) and higher syntactic divergence (1.085 candidate heads per word on English, and 1.188 on Chinese) than u'\u201c' Unlabeled u'\u2190' Z+G u'\u201d' , which verifies our earlier discussion that Berkeley Parser produces more different structures than ZPar</a>
<a name="3">[3]</a> <a href="#3" id=3>Previous work on graph-based dependency parsing mostly adopts linear models and perceptron based training procedures, which lack probabilistic explanations of dependency trees and do not need to compute likelihood of labeled training data</a>
<a name="4">[4]</a> <a href="#4" id=4>When the parse forests of the unlabeled data are the union of the outputs of GParser and ZPar, denoted as u'\u201c' Unlabeled u'\u2190' Z+G u'\u201d' , each word has 1.053 candidate heads on English and 1.136 on Chinese, and the oracle accuracy is higher than using 1-best</a>
</body>
</html>
(lp0
V[t] New word detection algorithm \u005cKwIn u'\u005cud835' u'\u005cudc9f' a large set of POS tagged posts u'\u005cud835' u'\u005cudcb2' s a set of seed words k p the number of patterns chosen at each iteration k c the number of patterns in the candidate pattern set k w the number of words added at each iteration K the number of words returned \u005cKwOut A list of ranked new words u'\u005cud835' u'\u005cudcb2' Obtain all lexical patterns using regular expressions on u'\u005cud835' u'\u005cudc9f' u'\u005cu2004' Count the frequency of each lexical pattern and extract words matched by each pattern u'\u005cu2004' Obtain top k c frequent patterns as candidate pattern set u'\u005cud835' u'\u005cudcab' c and top 5,000 frequent words as candidate word set u'\u005cud835' u'\u005cudcb2' c u'\u005cu2004' u'\u005cud835' u'\u005cudcab' = u'\u005cu03a6' ; u'\u005cud835' u'\u005cudcb2' = u'\u005cud835' u'\u005cudcb2' s ; t = 0 u'\u005cu2004' \u005cFor u'\u005cud835' u'\u005cudcb2'
p1
aVStarting from very few seed words (for example, just one seed word), we can extract lexical patterns that have strong statistical association with the seed words; the extracted lexical patterns can be further used in finding
p2
a.
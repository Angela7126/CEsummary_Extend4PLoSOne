<html>
<head>
<title>P14-2071.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>If the last sentiment word found in the tweet is positive (or negative), this feature is set to 1 (or -1</a>
<a name="1">[1]</a> <a href="#1" id=1>Cluster data in D based on the topic distributions from Step 5 and train a separate sentiment model for each cluster</a>
<a name="2">[2]</a> <a href="#2" id=2>If none of the words in the tweet is sentiment word, it is set to 0 by default</a>
<a name="3">[3]</a> <a href="#3" id=3>The first row shows the performance of the universal sentiment model as a baseline</a>
<a name="4">[4]</a> <a href="#4" id=4>As shown in the third column in Table 3 , surprisingly, the model with topic information inferred from the newswire data works well on the Twitter domain</a>
<a name="5">[5]</a> <a href="#5" id=5>Similar to the universal model,</a>
</body>
</html>
(lp0
VThe abstract denotation of a germ is defined in a top-down manner for the root node u'\u005cu03a1' of a DCS tree u'\u005cud835' u'\u005cudcaf' , we define its denotation [[ u'\u005cu03a1' ]] u'\u005cud835' u'\u005cudcaf' as the denotation of the entire tree [[ u'\u005cud835' u'\u005cudcaf' ]] ; for a non-root node u'\u005cu03a4' and its parent node u'\u005cu03a3' , let the edge ( u'\u005cu03a3' , u'\u005cu03a4' ) be labeled by semantic roles ( r , r u'\u005cu2032' ) , then define
p1
aVFurthermore, since the on-the-fly knowledge is generated by transformed pairs of DCS trees, all contexts are preserved in Figure 6 , though the tree transformation can be seen as generated from the entailment rule u'\u005cu201c' X is blamed for death u'\u005cu2192' X causes loss of life u'\u005cu201d' , the generated on-the-fly knowledge, as shown above the trees, only fires with the additional condition that X is a tropical storm and is Debby
p2
aVOur solution is to redefine DCS trees without the aid of any databases, by considering each node of a DCS tree as a content word in a sentence (but may no longer be a table in a specific database), while each edge represents semantic relations between two words
p3
aVMost of the problems do not require lexical knowledge, so we use our primary textual inference system without on-the-fly knowledge nor WordNet, to test the performance of the DCS framework as formal semantics
p4
aVTo formulate the database querying process defined by a DCS tree, we provide formal semantics to DCS trees by employing relational algebra [] for representing the query
p5
aVMoreover, to compensate the lack of background knowledge in practical inference, we combine our framework with the idea of tree transformation [] , to propose a way of generating knowledge in logical representation from entailment rules [] , which are by now typically considered as syntactic rewriting rules
p6
aVTechnically, each germ in a DCS tree indicates a variable when the DCS tree is translated to a FOL formula, and the abstract denotation of the germ corresponds to the set of consistent values [] of that variable
p7
aVSince meanings of sentences are represented by statements on abstract denotations, logical inference among sentences is reduced to deriving new relations among abstract denotations
p8
aVA DCS tree u'\u005cud835' u'\u005cudcaf' = ( u'\u005cud835' u'\u005cudca9' , u'\u005cu2130' ) is defined as a rooted tree, where each node u'\u005cu03a3' u'\u005cu2208' u'\u005cud835' u'\u005cudca9' is labeled with a content word w u'\u005cu2062' ( u'\u005cu03a3' ) and each edge ( u'\u005cu03a3' , u'\u005cu03a3' u'\u005cu2032' ) u'\u005cu2208' u'\u005cu2130' u'\u005cu2282' u'\u005cud835' u'\u005cudca9' × u'\u005cud835' u'\u005cudca9' is labeled with a pair of semantic roles ( r , r u'\u005cu2032' ) 7 7 The definition differs slightly from the original , mainly for the sake of simplicity and clarity
p9
aVFor example, the similarity score of the path alignment u'\u005cu201c' OBJ ( blame ) IOBJ - ARG ( death ) u'\u005cu2248' SUBJ ( cause ) OBJ - ARG ( loss ) MOD - ARG ( life ) u'\u005cu201d' is calculated as the cosine similarity of vectors blame + death and cause + loss + life
p10
aVAs described below, we represent meanings of sentences with abstract denotations , and logical relations among sentences are computed as relations among their abstract denotations
p11
aVHowever, this method does not work for real-world datasets such as PASCAL RTE [] , because of the knowledge bottleneck it is often the case that the lack of sufficient linguistic knowledge causes failure of inference, thus the system outputs u'\u005cu201c' no entailment u'\u005cu201d' for almost all pairs []
p12
aVIf a node u'\u005cu03a3' in a DCS tree u'\u005cud835' u'\u005cudcaf' belongs to a mention cluster m , we take the abstract denotation [[ u'\u005cud835' u'\u005cudcaf' u'\u005cu03a3' ]] and make a selection s m u'\u005cu2062' ([[ u'\u005cud835' u'\u005cudcaf' u'\u005cu03a3' ]]) , which is regarded as the abstract denotation of that mention
p13
aVA path is considered as joining two germs in a DCS tree, where a germ is defined as a specific semantic role of a node
p14
aVUsing disjointness we implemented two types of
p15
a.
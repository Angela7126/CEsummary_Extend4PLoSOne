<html>
<head>
<title>P14-2129.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Finally, Figure 3 shows the speed of inference, labeled precision and labeled recall of annotating hedge constituents on the test set as a function of the maximum span parameter L , versus the baseline parser</a>
<a name="1">[1]</a> <a href="#1" id=1>To automatically predict the class of each word position, we train a multi-class classifier from labeled training data using a discriminative linear model, learning the model parameters with the averaged perceptron algorithm [ 4 ]</a>
<a name="2">[2]</a> <a href="#2" id=2>Table 1 presents hedge parsing accuracy on the development set for the full parsing baseline, where the output of regular PCFG parsing is transformed to hedges and evaluated, versus parsing with a hedgebank grammar, with no segmentation of the strings</a>
<a name="3">[3]</a> <a href="#3" id=3>Figure 2 plots the percentage of constituents from the original WSJ Penn treebank (sections 2-21) retained in the transformed version, as we vary the maximum span length parameter L</a>
<a name="4">[4]</a> <a href="#4" id=4>Space constraints preclude inclusion of trials with this method, but the net result is a severe degradation in accuracy (tens of points of F-measure) versus standard parsing</a>
<a name="5">[5]</a> <a href="#5" id=5>We investigate pre-segmenting the sentences with a finite-state model prior to hedge parsing, and achieve large speedups relative to hedge parsing the whole string, though at a loss in accuracy due to cascading segmentation errors</a>
<a name="6">[6]</a> <a href="#6" id=6>Parsing full hierarchical syntactic structures is costly, and some NLP applications that could benefit from parses instead substitute shallow proxies such as NP chunks</a>
<a name="7">[7]</a> <a href="#7" id=7>One way to provide local hierarchical syntactic structures without</a>
</body>
</html>
<html>
<head>
<title>P14-1077.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Most existing knowledge bases represent their knowledge facts in the form of ( subject, relation, object ) triple, which can be seen as relational facts between entity tuples</a>
<a name="1">[1]</a> <a href="#1" id=1>Specifically, the joint inference framework operates on the output of a sentence level relation extractor as input, derives 5 types of constraints from an existing KB to implicitly capture the expected type and cardinality requirements for a relation u'\u2019' s arguments, and jointly resolve the disagreements among candidate predictions</a>
<a name="2">[2]</a> <a href="#2" id=2>In this paper, we will address how to derive and exploit two categories of these clues the expected types and the cardinality requirements of a relation u'\u2019' s arguments, in the scenario of relation extraction</a>
<a name="3">[3]</a> <a href="#3" id=3>In contrast, our approach learn implicit clues from existing KBs, and jointly optimize local predictions among different entity tuples to capture both relation argument type clues and cardinality clues</a>
<a name="4">[4]</a> <a href="#4" id=4>The previous categories of disagreements are all based on the implicit type information of the relations u'\u2019' arguments, Now we make use of the clues of argument cardinality requirements</a>
<a name="5">[5]</a> <a href="#5" id=5>For a candidate relation r u'\u2208' R t and a tuple t</a>
</body>
</html>
<html>
<head>
<title>P14-1119.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>In the Ben Johnson example, many keyphrase extractors fail to identify 100-meter dash and gold medal as keyphrases, resulting in infrequency errors</a>
<a name="1">[1]</a> <a href="#1" id=1>Like TPR, CommunityCluster gives more weight to more important topics, but unlike TPR, it extracts all candidate keyphrases from an important topic, assuming that a candidate that receives little focus in the text should still be extracted as a keyphrase as long as it is related to an important topic</a>
<a name="2">[2]</a> <a href="#2" id=2>Overgeneration errors occur when a system correctly predicts a candidate as a keyphrase because it contains a word that appears frequently in the associated document, but at the same time erroneously outputs other candidates as keyphrases because they contain the same word</a>
<a name="3">[3]</a> <a href="#3" id=3>Automatic keyphrase extraction concerns u'\u201c' the automatic selection of important and topical phrases from the body of a document u'\u201d' [ 50 ]</a>
<a name="4">[4]</a> <a href="#4" id=4>2009 ) propose a ranking approach to keyphrase extraction, where the goal is to learn a ranker to rank two</a>
</body>
</html>
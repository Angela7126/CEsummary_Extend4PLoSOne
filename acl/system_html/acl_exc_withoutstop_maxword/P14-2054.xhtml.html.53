<html>
<head>
<title>P14-2054.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>We drop the signature of the virtual arc number from each span, and thus obtain an O u'\u2062' ( n 4 ) time algorithm</a>
<a name="1">[1]</a> <a href="#1" id=1>For any compressed sentence, we could augment its dependency tree by adding a virtual arc i - 1 u'\u2192' i for each deleted word x i</a>
<a name="2">[2]</a> <a href="#2" id=2>Hence, the first part of the objective function is the total score of the kept words, the second and third parts are the scores of the parse tree and bigrams of the compressed sentence, z i u'\u2062' z j u'\u2062' u'\u220f' i k j ( 1 - z k ) = 1 indicates both x i and x j are kept, and are adjacent after compression</a>
<a name="3">[3]</a> <a href="#3" id=3>The two complete spans must be single words, as the length of the virtual arc is 1</a>
<a name="4">[4]</a> <a href="#4" id=4>Our method extends Eisner u'\u2019' s cubic time parsing algorithm by adding signatures to each span, which indicate the number of deleted words and the rightmost kept word within the span, resulting in O u'\u2062' ( n 6 ) time complexity and O u'\u2062' (</a>
</body>
</html>
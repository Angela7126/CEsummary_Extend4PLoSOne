<html>
<head>
<title>P14-1009.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Baroni and Zamparelli ( 2010 ) propose a practical and empirically effective way to estimate matrices representing adjectival modifiers of nouns by linear regression from corpus-extracted examples of noun and adjective-noun vectors</a>
<a name="1">[1]</a> <a href="#1" id=1>A related approach [ 24 ] assumes richer lexical representations where each word is represented with a vector and a matrix that encodes its interaction with its syntactic sister</a>
<a name="2">[2]</a> <a href="#2" id=2>In lf, arguments are vectors and functions taking arguments (e.g.,, adjectives that combine with nouns) are tensors, with the number of arguments (n) determining the order of tensor (n+1</a>
<a name="3">[3]</a> <a href="#3" id=3>If distributional vectors encode certain aspects of word meaning, it is natural to expect that similar aspects of sentence meaning can also receive vector representations, obtained compositionally from word vectors</a>
<a name="4">[4]</a> <a href="#4" id=4>The lf model can be seen as a projection of the symbolic Montagovian approach to semantic composition in natural language onto the domain of vector spaces and linear operations on them [ 3 ]</a>
<a name="5">[5]</a> <a href="#5" id=5>Tensor by vector multiplication formalizes function application and serves as the general composition method</a>
<a name="6">[6]</a> <a href="#6" id=6>For instance, symmetric operations like vector addition are insensitive to syntactic structure, therefore meaning differences encoded in word order are lost in composition pandas eat bamboo is identical to bamboo eats pandas</a>
<a name="7">[7]</a> <a href="#7" id=7>Since predicate arity is encoded in the order of the corresponding tensor, eat and the like have to be assigned different representations (matrix or tensor) depending on the context</a>
<a name="8">[8]</a> <a href="#8" id=8>Training plf (practical lexical function) proceeds similarly, but we also build preposition matrices (from u'\u27e8' noun , preposition-noun u'\u27e9' vector pairs),</a>
</body>
</html>
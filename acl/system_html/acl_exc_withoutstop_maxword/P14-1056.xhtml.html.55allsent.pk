(lp0
VSince we truncate penalties at 0, this suggests that we will learn a penalty of 0 for constraints in three categories constraints that do not hold in the ground truth, constraints that hold in the ground truth but are satisfied in practice by performing inference in the base CRF model, and constraints that are satisfied in practice as a side-effect of imposing non-zero penalties on some other constraints
p1
aVThe algorithms we present in later sections for handling soft global constraints and for learning the penalties of these constraints can be applied to general structured linear models, not just CRFs, provided we have an available algorithm for performing MAP inference
p2
aVHowever, there are a number of learned constraints that are often violated on the ground truth but are still useful as soft constraints
p3
aVFor 11.99% of the examples, the Soft-DD algorithm satisfies constraints that were not satisfied during unconstrained inference, while in the remaining 11.72% Soft-DD converges with some constraints left unsatisfied, which is possible since we are imposing them as soft constraints
p4
aVSoft constraints can be implemented inefficiently using hard constraints and dual decomposition u'\u005cu2014' by introducing copies of output variables and an auxiliary graphical model, as in Rush et al
p5
aVOne consideration when using soft v.s hard constraints is that soft constraints present a new training problem, since we need to choose the vector c , the penalties for violating the constraints
p6
aVThe importance score of a constraint provides information about how often it is violated by the CRF, but holds in the ground truth, and a non-zero penalty implies we enforce it as a soft constraint at test time
p7
aVRather than enforcing these constraints using dual decomposition, they can be enforced directly when performing MAP inference in the CRF by modifying the dynamic program of the Viterbi algorithm to only allow valid pairs of adjacent labels
p8
aVThe only one author constraint is particularly useful for correctly labeling editor segments in cases where unconstrained inference mislabels them as author segments
p9
aVTake, for example, the constraint that the number of number segments does not exceed the number of booktitle segments, as well as the constraint that it does not exceed the number of journal segments
p10
aVThe above example constraints are almost always satisfied on the ground truth, and would be useful to enforce as hard constraints
p11
aVThis both improves performance of the underlying model when used without global constraints, as well as ensures the validity of the global constraints we impose, since they operate only on B labels
p12
aVBecause our learning method drives many penalties to zero, it allows practitioners to perform u'\u005cu2018' constraint selection, u'\u005cu2019' in which a large number of automatically-generated candidate global constraints can be considered and automatically culled to a smaller set of useful constraints, which can be run quickly at test time
p13
aVWe also propose a method for learning the penalties the prediction problem incurs for violating these soft constraints
p14
aVWhen hard constraints can be encoded as linear equations on the output variables, and the underlying model u'\u005cu2019' s inference task can be posed as linear optimization, one can formulate this constrained inference problem as an integer linear program (ILP) [ 15 ]
p15
aVThis paper introduces a novel method for imposing soft constraints via dual decomposition
p16
aVHowever, we are using them as soft constraints, so these constraints will not necessarily be satisfied by the output of the model, which eliminates concern over enforcing logically impossible outputs
p17
aVWe could have enforced these constraints as hard constraints rather than soft ones
p18
aVNote that when performing MAP subject to soft constraints, optimal solutions might not satisfy some constraints, since doing so would reduce the model u'\u005cu2019' s score by too much
p19
aVOn the other hand, recent work has demonstrated improvements in citation field extraction by imposing soft constraints [ 4 ]
p20
aVFor this underlying model, we employ a chain-structured conditional random field (CRF), since CRFs have been shown to perform better than other simple unconstrained models like hidden markov models for citation extraction [ 14 ]
p21
aVFurthermore, since the dataset is so small, learning the penalties for our large collection of constraints is difficult, and test set results are unreliable
p22
aVSince performing inference in the CRF is by far the most computationally intensive step in the iterative algorithm, this means our procedure requires approximately twice as much work as running the baseline CRF on the dataset
p23
aVWe then use the development set to learn the penalties for the soft constraints, using the perceptron algorithm described in section 3.1
p24
aVSoft-DD converges, and thus solves the constrained inference problem exactly, for all test set examples after at most 41 iterations
p25
aVHowever, this only amounts to 1.24 times as much work as running the baseline CRF on the dataset, since the constraints are satisfied immediately for many examples
p26
aVDual Decomposition is a popular method for performing MAP inference in this scenario, since it leverages known algorithms for MAP in the base problem where these extra constraints have not been added [ 11 , 20 , 18 ]
p27
aVUsing our new method, we are able to incorporate not only all the soft global constraints of Chang et al
p28
aVIntuitively, the perceptron update increases the penalty for a constraint if it is satisfied in the ground truth and not in an inferred prediction, and decreases the penalty if the constraint is satisfied in the prediction and not the ground truth
p29
aVAll we need to employ the structured perceptron algorithm [ 6 ] or the structured SVM algorithm [ 23 ] is a black-box procedure for performing MAP inference in the structured linear model given an arbitrary cost vector
p30
aVThis penalization leads allows the constrained inference to correctly label the booktitle segment as a title segment
p31
aVNote that it may make sense to consider a constraint that is sometimes violated in the ground truth, as the penalty learning algorithm can learn a small penalty for it, which will allow it to be violated some of the time
p32
aVIt is still useful to impose these soft constraints, as strong evidence from the CRF allows us to violate them, and they can guide the model to good predictions when the CRF is unconfident
p33
aVIn other words, the dual problem can not penalize the violation of a constraint more than the soft constraint model in the primal would penalize you if you violated it
p34
aVThis is problematic because the size of some constraint families we consider grows quadratically with the number of candidate labels, and there are about 100 in the UMass dataset
p35
aVWe found it beneficial, though it is not theoretically necessary, to learn the constraints on a held-out development set, separately from the other model parameters, as during training most constraints are satisfied due to overfitting, which leads to an underestimation of the relevant penalties
p36
aVThe MAP inference task in a CRF be can expressed as an optimization problem with a linear objective [ 21 , 20 ]
p37
aVNote these constraints are all linear, since they depend only on the counts of each possible conditional random field label
p38
aVIn the all-constraints settings, 32.96% of the constraints have a learned parameter of 0 , and therefore only 421 constraints are active
p39
aVThe two singleton constraints with highest importance score are that there should only be at most one title segment in a citation and that there should be at most one author segment in a citation
p40
aVWe produce a prediction by performing MAP inference [ 10 ]
p41
aVFurthermore the copying of variables doubles the number of iterations needed for information to flow between output variables, and thus slows convergence
p42
aVFurthermore, in section 3.1 we described how our procedure for learning penalties will drive some penalties to 0, which effectively removes them from our set of constraints we consider
p43
aVBelief propagation is prohibitively expensive in our model due to the high cardinalities of the output variables and of the global factors, which involve all output variables simultaneously
p44
aVTherefore, we can view learning the values of the penalties not just as parameter tuning, but as a means to perform u'\u005cu2018' constraint selection, u'\u005cu2019' since constraints that have a penalty of 0 can be ignored
p45
aVThis is necessary because u'\u005cu039b' is a vector of dual variables for inequality constraints
p46
aV[ 4 ] via results on CORA, we apply their constraints on the UMass data using Soft-DD and demonstrate accuracy gains, as discussed above
p47
aVIf we could enforce the global constraint that there should be only one author section, accuracy could be improved
p48
aVIn our formulation, a soft-constrained model imposes a penalty for each unsatisfied constraint, proportional to the amount by which it is violated
p49
aVWhile the techniques from section 3.1 can easily cope with a large numbers of constraints at training time, this can be computationally costly, specially if one is considering very large constraint families
p50
aVThere are multiple previous examples of augmenting chain-structured sequence models with terms capturing global relationships by expanding the chain to a more complex graphical model with non-local dependencies between the outputs
p51
aVAn important property of problem ( 5 ) in the previous section is that it corresponds to a structured linear model over y and z
p52
aVWe train and evaluate on the UMass dataset instead of CORA, because it is significantly larger, has a useful finer-grained labeling schema, and its annotation is more consistent
p53
aVA value of i u'\u005cu2062' m u'\u005cu2062' p u'\u005cu2062' ( c ) above 1 implies that the constraint is more violated on the predicted examples than on the ground truth, and hence that we might want to keep it
p54
aVRecently, dual decomposition has become a popular method for solving complex structured prediction problems in NLP [ 12 , 17 , 18 , 13 , 5 ]
p55
aVTherefore, we can apply known training algorithms for estimating the parameters of structured linear models to choose c
p56
aVWhile Gibbs sampling has been shown to work well tasks such as named entity recognition [ 8 ] , our previous experiments show that it does not work well for citation extraction, where it found only low-quality solutions in practice because the sampling did not mix well, even on a simple chain-structured CRF
p57
aVAs can be seen in Table 3 , editor fields are among the most improved with our new method, largely due to this constraint
p58
aVwhere [[ y ]] c is 1 if the constraint is violated on output y and 0 otherwise
p59
aVSince linear-chain models are unable to capture more than Markov dependencies, the models sometimes mislabel the editor as a second author
p60
aVThis approach is limited in its use of an HMM as an underlying model, as it has been shown that CRFs perform significantly better, achieving 95.37 token-level accuracy on CORA [ 14 ]
p61
aVTherefore, quickly pruning bad constraints can save a substantial amount of training time, and can lead to better generalization
p62
aVFor any u'\u005cu039b' , we can evaluate the dual objective D u'\u005cu2062' ( u'\u005cu039b' ) , since the maximization in ( 4 ) is of the same form as the original problem ( 1 ), and we assumed we had a method for performing MAP in this
p63
aVIn addition, we use a rule-based segmenter that segments the citation string based on punctuation as well as probable start or end segment words (e.g., u'\u005cu2018' in u'\u005cu2019' and u'\u005cu2018' volume u'\u005cu2019'
p64
aVSince the log probability of some y in the CRF is proportional to sum of the scores of all the factors, we can concatenate the indicator variables as a vector y and the scores as a vector w and write the MAP problem as
p65
aVWe find that a large portion of our gain in accuracy can be obtained when we allow ourselves as few as 2 dual decomposition iterations
p66
aVThis final feature improves the F1 score on the cleaned test set from 94.0 F1 to 94.44 F1, which we use as a baseline score
p67
aVRegrouping terms and maximizing over the primal variables, we have the dual problem
p68
aVTherefore, implementing soft-constrained dual decomposition is as easy as implementing hard-constrained dual decomposition, and the per-iteration complexity is the same
p69
aVTo do so, we calculate a score that estimates how useful each constraint is expected to be
p70
aVSuch a family consists of constraints that the sum of the counts of two different label types has to be bounded (a useful example is that there can u'\u005cu2019' t be more than one out of u'\u005cu201c' phd thesis u'\u005cu201d' and u'\u005cu201c' journal u'\u005cu201d'
p71
aVThe algorithm has converged when each constraint is either satisfied by y ( t ) with equality or its corresponding component of u'\u005cu039b' is 0, due to complimentary slackness [ 2 ]
p72
aVMoreover, since our labels are BIO-encoded, it is possible, by counting B tags, to count how often each citation tag itself appears in a sentence
p73
aVAutomated citation field extraction needs further research because it has not yet reached a level of accuracy at which it can be practically deployed in real-world systems
p74
aVTherefore, we pay a cost c i times the degree to which the i th constraint is violated, which mirrors how slack variables are used to represent the hinge loss for SVMs
p75
aVSince this Lagrangian has the same form as equation ( 3 ), we can also derive a dual problem, which is the same as in equation ( 4 ), with the additional constraint that each u'\u005cu039b' i can not be bigger than its cost c i
p76
aVHere, we define a binary indicator variable for each candidate setting of each factor in the graphical model
p77
aVA similar analysis holds for the structured SVM approach
p78
aVThis task is important because citation data is often provided only in plain text; however, having an accurate structured database of bibliographic information is necessary for many scientometric tasks, such as mapping scientific sub-communities, discovering research trends, and analyzing networks of researchers
p79
aVNow, we check for the KKT conditions of ( 5 ), where for every constraint i , either the constraint is satisfied with equality, u'\u005cu039b' i = 0 , or u'\u005cu039b' i = c i
p80
aVThe optimality constraints with respect to z tell us that - c - u'\u005cu039b' - u'\u005cu039c' = 0 , hence u'\u005cu039c' = - c - u'\u005cu039b'
p81
aVWe use the same features as Anzaroot and McCallum [ 1 ] , which include word type, capitalization, binned location in citation, regular expression matches, and matches into lexicons
p82
aVWe prune constraints by picking a cutoff value for i u'\u005cu2062' m u'\u005cu2062' p u'\u005cu2062' ( c
p83
aVHere, y k represents an output tag of the CRF, so if [ [ y k = i ] ] = 1, then we have that y k was given a label with index i
p84
aVWe define C u'\u005cu2062' ( x , i ) as the function that returns 1 if the output x contains the label i in the hierarchy and 0 otherwise
p85
aVThere are various methods for exploiting the combinatorial structure of these factors, but performance would still have higher complexity than our method
p86
aVTherefore, our derivation parallels how soft-margin SVMs are derived from hard-margin SVMs by introducing auxiliary slack variables [ 7 ]
p87
aVThis experiment is shown in the last row of Table 1 , where F1 only improves to 94.6
p88
aVNote that c i has to be positive, otherwise this linear program is unbounded and an optimal value can be obtained by setting z i to infinity
p89
aVUsing a similar construction as in section 2.2 we write the Lagrangian as
p90
aVFurthermore, a subgradient of D u'\u005cu2062' ( u'\u005cu039b' ) is A u'\u005cu2062' y * - b , for an y * which maximizes this inner optimization problem
p91
aVTherefore, we can minimize D u'\u005cu2062' ( u'\u005cu039b' ) with the projected subgradient method [ 2 ] , and the optimal y can be obtained when evaluating D u'\u005cu2062' ( u'\u005cu039b' *
p92
aVFor positive c i , it is clear that an optimal z i will be equal to the degree to which a i T u'\u005cu2062' y u'\u005cu2264' b i is violated
p93
aVWe denote [ [ y k = i ] ] as the function that outputs 1 if y k has a 1 at index i and 0 otherwise
p94
aVSubstituting, we have
p95
a.
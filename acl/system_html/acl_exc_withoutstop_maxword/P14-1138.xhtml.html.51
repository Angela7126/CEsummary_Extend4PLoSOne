<html>
<head>
<title>P14-1138.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Next, the hidden layer receives the output of the lookup layer ( x j ) and that of the previous hidden layer ( y j - 1</a>
<a name="1">[1]</a> <a href="#1" id=1>In the lookup layer, each of these words is converted to its word embedding, and then the concatenation of the two embeddings ( x j ) is fed to the hidden layer in the same manner as the FFNN-based model</a>
<a name="2">[2]</a> <a href="#2" id=2>The proposed RNN produces a single score that is constructed in the hidden layer by employing the distance-dependent weight matrices</a>
<a name="3">[3]</a> <a href="#3" id=3>As described above, the RNN-based model has a hidden layer with recurrent connections</a>
<a name="4">[4]</a> <a href="#4" id=4>Under the recurrence, the proposed model compactly encodes the entire history of previous alignments in the hidden layer configuration y i</a>
<a name="5">[5]</a> <a href="#5" id=5>For the FFNN-based model, we set the word embedding length M to 30, the number of units of a hidden layer z 1 to 100, and the window size of contexts to 5</a>
<a name="6">[6]</a> <a href="#6" id=6>For the RNN-based models, we set M to 30 and the number of units of each recurrent hidden layer y j to 100</a>
<a name="7">[7]</a> <a href="#7" id=7>The Viterbi alignment is determined using the Viterbi algorithm, similar to the FFNN-based model, where the model is sequentially applied from f</a>
</body>
</html>
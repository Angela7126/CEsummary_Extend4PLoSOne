<html>
<head>
<title>P14-1052.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>The u'\u201c' STRUCT_initial u'\u201d' curve shows the time taken by STRUCT to come up with the first complete sentence, which partially solves the goal and which (at least) could be output if generation was interrupted and no better alternative was found</a>
<a name="1">[1]</a> <a href="#1" id=1>Based on these state and action definitions, the transition function takes a mapping between a partial sentence / action pair and the partial sentences which can result from one particular PLTAG adjoin / substitution, and returns the probability of that rule in the grammar</a>
<a name="2">[2]</a> <a href="#2" id=2>Because of the structure restriction above (substitution before adjoin), STRUCT generates a valid sentence quickly</a>
<a name="3">[3]</a> <a href="#3" id=3>The immediate value of a state, intuitively, describes closeness of an arbitrary partial sentence to our communicative goal</a>
<a name="4">[4]</a> <a href="#4" id=4>Thus we use as a reward a measure of the match between the semantic annotation of the partial tree and the communicative goal</a>
<a name="5">[5]</a> <a href="#5" id=5>The problem is restricted because in our work, we do not consider the issue of how to fragment a complex goal into multiple sentences (discourse planning</a>
<a name="6">[6]</a> <a href="#6" id=6>This setting allows us to address the limitations outlined above it is naturally probabilistic, and handles probabilistic grammars; we are able to specify complex communicative goals and general criteria through a suitably-defined reward function; and, as we show in</a>
</body>
</html>
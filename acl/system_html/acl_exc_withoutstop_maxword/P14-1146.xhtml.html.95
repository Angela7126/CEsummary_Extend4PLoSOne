<html>
<head>
<title>P14-1146.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>We compare sentiment-specific word embedding (SSWE h , SSWE r , SSWE u ) with baseline embedding learning algorithms by only using word embedding as features for Twitter sentiment classification</a>
<a name="1">[1]</a> <a href="#1" id=1>An intuitive solution to integrate the sentiment information is predicting the sentiment distribution of text based on input ngram</a>
<a name="2">[2]</a> <a href="#2" id=2>We apply SSWE as features in a supervised learning framework for Twitter sentiment classification, and evaluate it on the benchmark dataset in SemEval 2013</a>
<a name="3">[3]</a> <a href="#3" id=3>SSWE outperforms MVSA and ReEmb by exploiting more context information of words and sentiment information of sentences, respectively</a>
<a name="4">[4]</a> <a href="#4" id=4>When such word embeddings are fed as features to a Twitter sentiment classifier, the discriminative ability of sentiment words are weakened thus the classification performance is affected</a>
<a name="5">[5]</a> <a href="#5" id=5>We apply sentiment-specific word embedding for Twitter sentiment classification under a supervised learning framework as in previous work [ 33 ]</a>
<a name="6">[6]</a> <a href="#6" id=6>We also directly evaluate the effectiveness of the SSWE by measuring the word similarity in the embedding space for sentiment lexicons</a>
<a name="7">[7]</a> <a href="#7" id=7>We conduct experiments to evaluate SSWE by incorporating it into a supervised learning framework for Twitter sentiment classification</a>
<a name="8">[8]</a> <a href="#8" id=8>The quality of SSWE is also directly evaluated by measuring the word similarity in the embedding space for sentiment lexicons</a>
<a name="9">[9]</a> <a href="#9" id=9>Following the traditional C W model [ 9 ] , we incorporate the sentiment information into the neural network to learn</a>
</body>
</html>
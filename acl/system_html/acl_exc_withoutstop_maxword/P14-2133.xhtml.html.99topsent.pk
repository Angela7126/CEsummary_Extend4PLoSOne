(lp0
VTo evaluate the embedding structure hypothesis, we take the Maryland featured parser, and replace the set of lexical template features used by that parser with a set of indicator features on a discretized version of the embedding
p1
aVThis paper investigates a variety of ways in which word embeddings might augment a constituency parser with a discrete state space
p2
aVThis ensures that our model continues to include the original Berkeley parser model as a limiting case
p3
aVWord embeddings are useful for handling out-of-vocabulary words, because they automatically ensure that unknown words are treated the same way as known words with similar representations
p4
aVWhile word embeddings can be constructed directly from surface distributional statistics, as in LSA, more sophisticated tools for unsupervised extraction of word representations have recently gained popularity [ 3 , 10 ]
p5
aVWord embeddings are useful for handling in-vocabulary words, by making it possible to pool statistics for related words
p6
aVWord embeddings u'\u005cu2014' representations of lexical items as points in a real vector space u'\u005cu2014' have a long history in natural language processing, going back at least as far as work on latent semantic analysis (LSA) for information retrieval [ 4 ]
p7
aVAs described above, the full featured model adds indicator features on the bucketed value of each dimension of the word embedding
p8
aVWe use the Maryland implementation of the Berkeley parser as our baseline for the kernel-smoothed lexicon, and the Maryland featured parser as our baseline for the embedding-featured lexicon
p9
a.
<html>
<head>
<title>P14-1118.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>For each of the lexicons, we use the number of words found in the comment that have positive and negative sentiment as a feature</a>
<a name="1">[1]</a> <a href="#1" id=1>One of the challenging aspects of sentiment analysis of YouTube data is that the comments may express the sentiment not only towards the product shown in the video, but also the video itself, i.e.,, users may post positive comments to the video while being generally negative about the product and vice versa</a>
<a name="2">[2]</a> <a href="#2" id=2>The comment contains a product name xoom and some negative expressions, thus, a bag-of-words model would derive a negative polarity for this product</a>
<a name="3">[3]</a> <a href="#3" id=3>When using AUTO as a source domain, STRUCT model provides additional 1-3% of absolute improvement, except for the sentiment task</a>
<a name="4">[4]</a> <a href="#4" id=4>We go beyond traditional feature vectors by employing structural models ( STRUCT ), which encode each comment into a shallow syntactic tree</a>
<a name="5">[5]</a> <a href="#5" id=5>We treat each comment as expressing positive , negative or neutral sentiment</a>
<a name="6">[6]</a> <a href="#6" id=6>Given that the main goal of sentiment analysis is to select sentiment-bearing comments and identify their polarity, distinguishing between off-topic and spam</a>
</body>
</html>
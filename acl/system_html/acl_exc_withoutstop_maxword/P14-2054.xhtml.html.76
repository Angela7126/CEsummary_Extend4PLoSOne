<html>
<head>
<title>P14-2054.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>There are two rules for merging spans one merges two complete spans into an incomplete span, the other merges an incomplete span and a complete span into a large complete span</a>
<a name="1">[1]</a> <a href="#1" id=1>We can reversely get the the compressed parse tree by removing all virtual arcs from the full parse tree</a>
<a name="2">[2]</a> <a href="#2" id=2>A span is a subtree over a number of consecutive words, with the leftmost or the rightmost word as its root</a>
<a name="3">[3]</a> <a href="#3" id=3>For any compressed sentence, we could augment its dependency tree by adding a virtual arc i - 1 u'\u2192' i for each deleted word x i</a>
<a name="4">[4]</a> <a href="#4" id=4>Recent studies used a subtree deletion model for compression [ 1 , 13 , 15 ] , which deletes a word only if its modifier in the parse tree is deleted</a>
<a name="5">[5]</a> <a href="#5" id=5>Suppose x j is removed, there must be a virtual arc j - 1 u'\u2192' j which is a conflict with the fact that x j is the leftmost word</a>
<a name="6">[6]</a> <a href="#6" id=6>Our method extends Eisner u'\u2019' s cubic time parsing algorithm by adding signatures to each span, which indicate the number</a>
</body>
</html>
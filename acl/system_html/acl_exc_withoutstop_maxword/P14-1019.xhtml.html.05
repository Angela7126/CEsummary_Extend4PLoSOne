<html>
<head>
<title>P14-1019.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>We first compare our model to the Turbo parser using the Turbo parser feature set</a>
<a name="1">[1]</a> <a href="#1" id=1>Baselines We compare our model with the Turbo parser and the MST parser</a>
<a name="2">[2]</a> <a href="#2" id=2>Starting with an initial candidate tree, our inference procedure climbs the scoring function in small (cheap) stochastic steps towards a high scoring parse</a>
<a name="3">[3]</a> <a href="#3" id=3>Because the number of alternatives is small, the scoring function could in principle involve arbitrary (global) features of parse trees</a>
<a name="4">[4]</a> <a href="#4" id=4>Joint Parsing and POS Correction Table 3 shows the results of joint parsing and POS correction on the CATiB dataset, for our model and state-of-the-art systems</a>
<a name="5">[5]</a> <a href="#5" id=5>We extend our model such that it jointly learns how to predict a parse tree and also correct the predicted POS tags for a better parsing performance</a>
<a name="6">[6]</a> <a href="#6" id=6>The reranker uses the same</a>
</body>
</html>
<html>
<head>
<title>P14-2133.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>We take the best-performing combination of all of these models (based on development experiments, a combination of the lexical pooling model with u'\u0392' = 0.3 , and OOV, both using c w word embeddings), and evaluate this on the WSJ test set (Table 2</a>
<a name="1">[1]</a> <a href="#1" id=1>This paper investigates a variety of ways in which word embeddings might augment a constituency parser with a discrete state space</a>
<a name="2">[2]</a> <a href="#2" id=2>Each u'\u0391' t , w is learned in the same way as its corresponding probability in the original parser model u'\u2014' during each M step of the training procedure, u'\u0391' w , t is set to the expected number of times the word w appears under the refined tag t</a>
<a name="3">[3]</a> <a href="#3" id=3>Word embeddings are useful for handling out-of-vocabulary words, because they automatically ensure that unknown words are treated the same way as known words with similar representations</a>
<a name="4">[4]</a> <a href="#4" id=4>As described above, the full featured model adds indicator features on the bucketed value of each dimension of the word embedding</a>
<a name="5">[5]</a> <a href="#5" id=5>Word embeddings are useful for handling in-vocabulary words, by making it possible to pool statistics for related words</a>
<a name="6">[6]</a> <a href="#6" id=6>In the other direction, access to a syntactic parse has been shown to be useful for constructing word embeddings for phrases compositionally [ 7 , 1 ]</a>
<a name="7">[7]</a> <a href="#7" id=7>To evaluate the embedding structure hypothesis, we take the Maryland featured parser, and replace the set of lexical template features used by that parser with a set of indicator features on a discretized version of</a>
</body>
</html>
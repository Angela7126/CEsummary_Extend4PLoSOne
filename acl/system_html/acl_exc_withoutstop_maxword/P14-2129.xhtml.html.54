<html>
<head>
<title>P14-2129.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>It is possible to parse with a standardly induced PCFG using this sort of hedge constrained parsing that only considers a subset of the chart cells, and speedups are achieved, however this is clearly non-optimal, since the model is ill-suited to combining hedges into flat structures at the root of the tree</a>
<a name="1">[1]</a> <a href="#1" id=1>Finally, Figure 3 shows the speed of inference, labeled precision and labeled recall of annotating hedge constituents on the test set as a function of the maximum span parameter L , versus the baseline parser</a>
<a name="2">[2]</a> <a href="#2" id=2>Given a set of labeled pairs ( S , H ) where S is a sentence of n words w 1 u'\u2062' u'\u2026' u'\u2062' w n and H is its hedge parse tree, word w b belongs to B if there is a hedge constituent spanning w b u'\u2062' u'\u2026' u'\u2062' w e for some e u'\u2265' b and w b belongs to B otherwise</a>
<a name="3">[3]</a> <a href="#3" id=3>A unique property of hedge constituents compared to constituents in the original parse trees is that they are sequentially connected to the top-most node</a>
<a name="4">[4]</a> <a href="#4" id=4>We use hedge segmentation as a finite-state pre-processing step for hedge context-free parsing</a>
<a name="5">[5]</a> <a href="#5" id=5>Further, if the binarization systematically groups the leftmost or the rightmost children under these new non-terminals (the most common strategy), then constituents with span greater than L will either begin at the first word (leftmost grouping) or end at the last word (rightmost), further</a>
</body>
</html>
<html>
<head>
<title>P14-2054.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Suppose x j is removed, there must be a virtual arc j - 1 u'\u2192' j which is a conflict with the fact that x j is the leftmost word</a>
<a name="1">[1]</a> <a href="#1" id=1>Hence, the first part of the objective function is the total score of the kept words, the second and third parts are the scores of the parse tree and bigrams of the compressed sentence, z i u'\u2062' z j u'\u2062' u'\u220f' i k j ( 1 - z k ) = 1 indicates both x i and x j are kept, and are adjacent after compression</a>
<a name="2">[2]</a> <a href="#2" id=2>For any compressed sentence, we could augment its dependency tree by adding a virtual arc i - 1 u'\u2192' i for each deleted word x i</a>
<a name="3">[3]</a> <a href="#3" id=3>Recent studies used a subtree deletion model for compression [ 1 , 13 , 15 ] , which deletes a word only if its modifier in the parse tree is deleted</a>
<a name="4">[4]</a> <a href="#4" id=4>where u'\ud835' u'\udc33' is a binary vector, z i indicates x i is kept or not u'\ud835' u'\udc32' is a square matrix denoting the projective</a>
</body>
</html>
<html>
<head>
<title>P14-1048.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>In particular, starting from the constituents on the bottom level (EDUs for intra-sentential parsing and sentence-level discourse trees for multi-sentential parsing), at each step of the tree-building, we greedily merge a pair of adjacent discourse constituents such that the merged constituent has the highest probability as predicted by our structure model</a>
<a name="1">[1]</a> <a href="#1" id=1>However, unlike the structure model, adjacent relation nodes do not share discourse constituents on the first layer</a>
<a name="2">[2]</a> <a href="#2" id=2>The linear-chain CRF contains a first layer of all discourse constituents U j u'\u2019' s in the sentence on level i , and a second layer of relation nodes R j u'\u2019' s to represent the relation between a pair of discourse constituents</a>
<a name="3">[3]</a> <a href="#3" id=3>First, they decomposed the problem of text-level discourse parsing into two stages intra-sentential parsing to produce a discourse tree for each sentence, followed by multi-sentential parsing to combine the sentence-level discourse trees and produce the text-level discourse tree</a>
<a name="4">[4]</a> <a href="#4" id=4>For both intra- and multi-sentential parsing, our bottom-up tree-building process adopts a similar greedy pipeline framework like the HILDA discourse parser (discussed in Section 2.1 ), to guarantee efficiency for large documents</a>
<a name="5">[5]</a> <a href="#5" id=5>Therefore, our model incorporates the strengths of both HILDA and Joty et al u'\u2019' s model, i.e.,, the efficiency of a greedy parsing algorithm, and the ability to incorporate sequential information with CRFs</a>
<a name="6">[6]</a> <a href="#6" id=6>Now we describe the local models we use to make decisions for a given pair of adjacent discourse constituents in the bottom-up tree-building</a>
</body>
</html>
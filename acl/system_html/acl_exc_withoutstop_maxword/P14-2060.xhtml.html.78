<html>
<head>
<title>P14-2060.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Then a small amount of annotated data is used to build models to determine whether to accept a candidate expansion of an abbreviation based on these features</a>
<a name="1">[1]</a> <a href="#1" id=1>In this paper we concentrate on abbreviations, which we define as alphabetic NSWs that it would be normal to pronounce as their expansion</a>
<a name="2">[2]</a> <a href="#2" id=2>We present methods for learning abbreviation expansion models that favor high precision (incorrect expansions 2 u'\u2062' %</a>
<a name="3">[3]</a> <a href="#3" id=3>Our abbreviation model is a pair character language model (LM), also known as a joint multi-gram model [] , whereby aligned symbols are treated as a single token and a smoothed n-gram model is estimated</a>
<a name="4">[4]</a> <a href="#4" id=4>First, we simply train a smoothed n-gram LM from the data</a>
<a name="5">[5]</a> <a href="#5" id=5>We also experimented with a number of alternative high precision approaches that space precludes our presenting in detail here, including pruning the number of expansion candidates based on the pair</a>
</body>
</html>
(lp0
VOn-the-fly knowledge is generated by aligning paths in DCS trees
p1
aVBased on abstract denotations, we briefly describe our process to apply DCS to textual inference
p2
aVTo formulate the database querying process defined by a DCS tree, we provide formal semantics to DCS trees by employing relational algebra [] for representing the query
p3
aVFurthermore, since the on-the-fly knowledge is generated by transformed pairs of DCS trees, all contexts are preserved in Figure 6 , though the tree transformation can be seen as generated from the entailment rule u'\u005cu201c' X is blamed for death u'\u005cu2192' X causes loss of life u'\u005cu201d' , the generated on-the-fly knowledge, as shown above the trees, only fires with the additional condition that X is a tropical storm and is Debby
p4
aVSince meanings of sentences are represented by statements on abstract denotations, logical inference among sentences is reduced to deriving new relations among abstract denotations
p5
aVA path is considered as joining two germs in a DCS tree, where a germ is defined as a specific semantic role of a node
p6
aVThe conversion is done by first performing a DCS tree transformation according to the aligned paths, and then declare a subsumption relation between the denotations of aligned germs
p7
aVWe built an inference engine to perform logical inference on abstract denotations as above
p8
aVMost of the problems do not require lexical knowledge, so we use our primary textual inference system without on-the-fly knowledge nor WordNet, to test the performance of the DCS framework as formal semantics
p9
aVTechnically, each germ in a DCS tree indicates a variable when the DCS tree is translated to a FOL formula, and the abstract denotation of the germ corresponds to the set of consistent values [] of that variable
p10
aVAbstract denotations and statements are convenient for representing semantics of various types of expressions and linguistic knowledge
p11
aVFor example, Figure 5 shows DCS trees of the following sentences (a simplified pair from RTE2-dev
p12
aVAccepted aligned paths are converted into statements, which are used as new knowledge
p13
aVOur solution is to redefine DCS trees without the aid of any databases, by considering each node of a DCS tree as a content word in a sentence (but may no longer be a table in a specific database), while each edge represents semantic relations between two words
p14
aVAs described below, we represent meanings of sentences with abstract denotations , and logical relations among sentences are computed as relations among their abstract denotations
p15
aVTwo paths are aligned if the joined germs are aligned, and we impose constraints on aligned germs to inhibit meaningless alignments, as described below
p16
aVThe logical clue to align germs is if there exists an abstract denotation, other than W , that is a superset of both abstract denotations of two germs, then the two germs can be aligned
p17
aVThe abstract denotation of a germ is defined in a top-down manner for the root node u'\u005cu03a1' of a DCS tree u'\u005cud835' u'\u005cudcaf' , we define its denotation [[ u'\u005cu03a1' ]] u'\u005cud835' u'\u005cudcaf' as the denotation of the entire tree [[ u'\u005cud835' u'\u005cudcaf' ]] ; for a non-root node u'\u005cu03a4' and its parent node u'\u005cu03a3' , let the edge ( u'\u005cu03a3' , u'\u005cu03a4' ) be labeled by semantic roles ( r , r u'\u005cu2032' ) , then define
p18
aVFor example, the similarity score of the path alignment u'\u005cu201c' OBJ ( blame ) IOBJ - ARG ( death ) u'\u005cu2248' SUBJ ( cause ) OBJ - ARG ( loss ) MOD - ARG ( life ) u'\u005cu201d' is calculated as the cosine similarity of vectors blame + death and cause + loss + life
p19
aVHowever, this method does not work for real-world datasets such as PASCAL RTE [] , because of the knowledge bottleneck it is often the case that the lack of sufficient linguistic knowledge causes failure of inference, thus the system outputs u'\u005cu201c' no entailment u'\u005cu201d' for almost all pairs []
p20
aVOn PASCAL RTE datasets, strict logical inference is known to have very low recall [] , so on-the-fly
p21
a.
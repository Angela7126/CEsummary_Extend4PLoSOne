(lp0
VTherefore, because the edit distance was widely used in this research area and produced good results, we are encouraged to employ orthographic alignment for identifying pairs of cognates, not only to compute similarity scores, as was previously done, but to use aligned subsequences as features for machine learning algorithms
p1
aVString alignment is closely related to the task of sequence alignment in computational biology
p2
aVWe investigate the performance of the method we propose in comparison to previous approaches for automatic detection of cognate pairs based on orthographic similarity
p3
aV2013 ) proposed a method for cognate production relying on statistical character-based machine translation, learning orthographic production patterns, and Mulloni ( 2007 ) introduced an algorithm for cognate production based on edit distance alignment and the identification of orthographic cues when words enter a new language
p4
aVTherefore, to align pairs of words we employ the Needleman-Wunsch global alignment algorithm [ 29 ] , which is mainly used for aligning sequences of proteins or nucleotides
p5
aVAlgorithms for string alignment were successfully used for identifying cognates based on both their forms, orthographic and phonetic
p6
aVAccording to Gusfield ( 1997 ) , an edit transcript (representing the conversion of one string to another) and an alignment are mathematically equivalent ways of describing relationships between strings
p7
aVThe algorithm uses dynamic programming and, thus, guarantees to find the optimal alignment
p8
aVFor orthographic alignment, we consider words as input sequences and we use a very simple substitution matrix, which gives equal scores to all substitutions, disregarding diacritics (e.g.,, we ensure that e and è are matched
p9
aVOur intuition is that inferring language-specific rules for aligning words will lead to better performance in the task of cognate identification
p10
aVFor measuring phonetic and orthographic proximity of cognate candidates, string similarity metrics can be applied, using the phonetic or orthographic word forms as input
p11
aVFirst, we compute the
p12
a.
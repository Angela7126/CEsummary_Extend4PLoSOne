<html>
<head>
<title>P14-1039.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>With this simple reranking strategy and each of three different Treebank parsers, we find that it is possible to improve BLEU scores on Penn Treebank development data with White Rajkumar u'\u2019' s [ 28 , 36 ] baseline generative model, but not with their averaged perceptron model</a>
<a name="1">[1]</a> <a href="#1" id=1>Simple ranking with the Berkeley parser of the generative model u'\u2019' s n -best realizations raised the BLEU score from 85.55 to 86.07, well below the averaged perceptron model u'\u2019' s BLEU score of 87.93</a>
<a name="2">[2]</a> <a href="#2" id=2>Therefore, to develop a more nuanced self-monitoring reranker that is more robust to such parsing mistakes, we trained an SVM using dependency precision and recall features for all three parses, their n -best parsing results, and per-label precision and recall for each type of dependency, together with the realizer u'\u2019' s normalized perceptron model score as a feature</a>
<a name="3">[3]</a> <a href="#3" id=3>Similarly, we conjectured that large differences in the realizer u'\u2019' s perceptron model score may more reliably reflect human fluency preferences than small ones, and thus we combined this score with features for parser accuracy in an SVM ranker</a>
<a name="4">[4]</a> <a href="#4" id=4>Using the averaged perceptron algorithm [ 8 ] , White Rajkumar [ 35 ] trained a structured prediction ranking model to combine these existing syntactic models with several n -gram language models</a>
<a name="5">[5]</a> <a href="#5" id=5>A limitation of the experiments reported in this paper is that OpenCCG u'\u2019' s input semantic dependency graphs are not the same as the Stanford dependencies used with the Treebank parsers, and thus we have had to rely on the gold parses in the PTB to derive gold dependencies for measuring accuracy of parser dependency recovery</a>
<a name="6">[6]</a> <a href="#6" id=6>Rajkumar White [ 28 , 36 ] have recently shown that some rather egregious surface realization errors u'\u2014' in the sense that the reader would likely end up with the wrong interpretation u'\u2014' can be avoided by making use of features</a>
</body>
</html>
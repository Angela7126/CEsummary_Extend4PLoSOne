<html>
<head>
<title>P14-1060.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>This would involve initializing the weights prior to the semi-supervised procedure with the weights from the supervised learning model, so as to seed the semi-supervised approach with reasonable model, and use the partially annotated data to fine-tune the supervised model</a>
<a name="1">[1]</a> <a href="#1" id=1>Supervised learning</a>
<a name="2">[2]</a> <a href="#2" id=2>We describe learning of the model parameters with fully annotated training data, as well as an approach for learning motif segmentation that requires only partial supervision</a>
<a name="3">[3]</a> <a href="#3" id=3>Semi-supervised learning</a>
<a name="4">[4]</a> <a href="#4" id=4>We briefly discuss data-driven learning of weights for features that define the motif affinity scores and penalties</a>
<a name="5">[5]</a> <a href="#5" id=5>However, the supervised learning model with subsequent annealing outperforms the supervised model in terms of both precision and recall; showing the utility of the semi-supervised method when seeded with a good initial model, and the additive value of partially labeled data</a>
<a name="6">[6]</a> <a href="#6" id=6>While the Viterbi algorithm can be used for tagging optimal state-sequences given the weights, the structured perceptron can learn optimal model weights given gold-standard sequence labels</a>
<a name="7">[7]</a> <a href="#7" id=7>This is necessary for the scenario of semi-supervised learning of weights with partially annotated sentences, as described later</a>
<a name="8">[8]</a> <a href="#8" id=8>Pseudocode of the learning algorithm for the partially labeled case is given in Algorithm 1</a>
<a name="9">[9]</a> <a href="#9" id=9>In the supervised case, optimal state sequences u'\ud835' u'\udc32' ( u'\ud835' u'\udc24' ) are fully observed for the training set</a>
<a name="10">[10]</a> <a href="#10" id=10>Implicitly, the weight learning algorithm can be seen as a gradient descent procedure minimizing the difference between the scores of highest scoring (Viterbi) state sequences, and the label state sequences</a>
<a name="11">[11]</a> <a href="#11" id=11>In the M-step, we take the decoded state-sequences in the E-step as observed, and run perceptron learning to update feature weights w i</a>
<a name="12">[12]</a> <a href="#12" id=12>Run Structured Perceptron algorithm with decoded tag-sequences to update weights w \EndFor \State return w</a>
<a name="13">[13]</a> <a href="#13" id=13>Weights w \State Initialization</a>
<a name="14">[14]</a> <a href="#14" id=14>The semi-supervised approach enables incorporation of significantly more training data</a>
<a name="15">[15]</a> <a href="#15" id=15>The algorithm proceeds as follows</a>
</body>
</html>
<html>
<head>
<title>P14-1052.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>An entire initial tree can replace a leaf node in the sentence tree whose label matches the label of the root of the initial tree in a process called u'\u201c' substitution u'\u201d' Auxiliary trees, on the other hand, encode recursive structures of language</a>
<a name="1">[1]</a> <a href="#1" id=1>The first step finds an adjoining location by searching through our sentence to find any subtree with a root whose label matches the root node of the auxiliary tree</a>
<a name="2">[2]</a> <a href="#2" id=2>In this paper, we study the restricted NLG problem given a grammar, lexicon, world and a communicative goal, output a valid English sentence that satisfies this goal</a>
<a name="3">[3]</a> <a href="#3" id=3>In the second step, the target subtree is removed from the sentence tree, and placed in the auxiliary tree as a direct replacement for the foot node</a>
<a name="4">[4]</a> <a href="#4" id=4>Finally, the modified auxiliary tree is placed back in the sentence tree in the original target location</a>
<a name="5">[5]</a> <a href="#5" id=5>In this section, we describe our approach, called Sentence Tree Realization with UCT (STRUCT</a>
<a name="6">[6]</a> <a href="#6" id=6>TAGs are tree-based grammars consisting of two sets of trees, called initial trees and auxiliary or adjoining trees</a>
<a name="7">[7]</a> <a href="#7" id=7>The foot node must be a leaf of the auxiliary tree</a>
<a name="8">[8]</a> <a href="#8" id=8>In the NLG-as-planning framework, the choice of grammar representation is crucial in treating NLG as a planning problem; the grammar</a>
</body>
</html>
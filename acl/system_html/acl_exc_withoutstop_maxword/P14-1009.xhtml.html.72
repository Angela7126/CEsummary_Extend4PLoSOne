<html>
<head>
<title>P14-1009.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>We obtain a final similarity score by weighted addition of the 3 cues, with the optimal weights determined by linear regression on separate msrvid train data that were also provided by the SemEval task organizers (before combining, we checked that the collinearity between cues was low</a>
<a name="1">[1]</a> <a href="#1" id=1>Our result stands in contrast with Blacoe and Lapata ( 2012 ) , the only study we are aware of that compared a sophisticated composition model (Socher et al u'\u2019' s 2011 model) to add and mult on realistic sentences, which attained the top performance with the simple models for both figures of merit they used</a>
<a name="2">[2]</a> <a href="#2" id=2>For instance, symmetric operations like vector addition are insensitive to syntactic structure, therefore meaning differences encoded in word order are lost in composition pandas eat bamboo is identical to bamboo eats pandas</a>
<a name="3">[3]</a> <a href="#3" id=3>In the tfds task, not surprisingly the add and mult models, lacking determiner representations and being order-insensitive, fail to distinguish between true paraphrases and foils (indeed, for the mult model foils are significantly closer to the targets than the paraphrases, probably because the latter have lower content word overlap than the foils, that often differ in word order and determiners only</a>
<a name="4">[4]</a> <a href="#4" id=4>Despite positive empirical evaluation, this approach is hardly practical for general-purpose semantic language processing, since it requires computationally expensive approximate parameter optimization techniques, and it assumes task-specific parameter learning whose results are not meant to generalize across tasks</a>
<a name="5">[5]</a> <a href="#5" id=5>At the same time, we avoid high order tensor representations, produce semantic vectors for all syntactic constituents,</a>
</body>
</html>
(lp0
VOn-the-fly knowledge is generated by aligning paths in DCS trees
p1
aVConvert accepted path alignments into statements on abstract denotations, use them in logical inference as new knowledge, and try to prove H again
p2
aVBased on abstract denotations, we briefly describe our process to apply DCS to textual inference
p3
aVIn this section we describe the idea of representing natural language semantics by DCS trees, and achieving inference by computing logical relations among the corresponding abstract denotations
p4
aVAs the semantics of DCS trees is formulated by abstract denotations, the meanings of declarative sentences are represented by statements on abstract denotations
p5
aVPerform rule-based conversion from dependency parses to DCS trees, which are translated to statements on abstract denotations
p6
aVThe strict semantics of DCS trees brings us the idea of applying DCS to logical inference
p7
aVThe conversion is done by first performing a DCS tree transformation according to the aligned paths, and then declare a subsumption relation between the denotations of aligned germs
p8
aVSince meanings of sentences are represented by statements on abstract denotations, logical inference among sentences is reduced to deriving new relations among abstract denotations
p9
aVAccepted aligned paths are converted into statements, which are used as new knowledge
p10
aVWe built an inference engine to perform logical inference on abstract denotations as above
p11
aVAbstract denotations and statements are convenient for representing semantics of various types of expressions and linguistic knowledge
p12
aVFurthermore, since the on-the-fly knowledge is generated by transformed pairs of DCS trees, all contexts are preserved in Figure 6 , though the tree transformation can be seen as generated from the entailment rule u'\u005cu201c' X is blamed for death u'\u005cu2192' X causes loss of life u'\u005cu201d' , the generated on-the-fly knowledge, as shown above the trees, only fires with the additional condition that X is a tropical storm and is Debby
p13
aVMost of the problems do not require lexical knowledge, so we use our primary textual inference system without on-the-fly knowledge nor WordNet, to test the performance of the DCS framework as formal semantics
p14
aVTo formulate the database querying process defined by a DCS tree, we provide formal semantics to DCS trees by employing relational algebra [] for representing the query
p15
aVAligned paths are evaluated by a similarity score, for which we use distributional similarity of the words that appear in the paths (§ 4.1
p16
aVIf H is not proven, compare DCS trees of T and H , and generate path alignments
p17
aVOnly path alignments with high similarity scores can be accepted
p18
aVWe extract fragments of DCS trees as paraphrase candidates, translate them back to linguistic expressions, and apply distributional similarity to judge their validity
p19
aVAn inference engine is built to handle inference on abstract denotations
p20
aVTwo paths are aligned if the joined germs are aligned, and we impose constraints on aligned germs to inhibit meaningless alignments, as described below
p21
aVDCS trees has been proposed to represent natural language semantics with a structure similar to dependency trees [] (Figure 1
p22
aVFor example, to apply the aligned path pair generated in Figure 5 , we use it to transform T into a new tree T u'\u005cu2019' (Figure 6 ), and then the aligned germs, OBJ ( blame ) in T and SUBJ ( cause ) in T u'\u005cu2019' , will generate the on-the-fly knowledge
p23
aVA path is considered as joining two germs in a DCS tree, where a germ is defined as a specific semantic role of a node
p24
aVUse statements of T and linguistic knowledge as premises, and try to prove statements of H by our inference engine
p25
aVTechnically, each germ in a DCS tree indicates a variable when the DCS tree is translated to a FOL formula, and the abstract denotation of the germ corresponds to the set of consistent values [] of that variable
p26
aVPath alignments with scores higher than a threshold are accepted
p27
aVThis formulation keeps the simpleness and computability of DCS trees mostly unaffected; for example, our semantic calculation for DCS trees is parallel to the denotation computation in original DCS
p28
aVFor
p29
a.
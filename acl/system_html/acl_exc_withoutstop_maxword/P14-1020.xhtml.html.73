<html>
<head>
<title>P14-1020.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>We tested our new pruning approach using an X-bar grammar as the coarse pass</a>
<a name="1">[1]</a> <a href="#1" id=1>Figure 1 shows an overview of the approach we first parse densely with a coarse grammar and then parse sparsely with the fine grammar, skipping symbols that the coarse pass deemed sufficiently unlikely</a>
<a name="2">[2]</a> <a href="#2" id=2>For instance, in a latent variable parser, the coarse grammar would have symbols like N u'\u2062' P , V u'\u2062' P , etc., and the fine pass would have refined symbols N u'\u2062' P 0 , N u'\u2062' P 1 , V u'\u2062' P 4 , and so on</a>
<a name="3">[3]</a> <a href="#3" id=3>The result is a parsing speed of 185.5 sentences per second, as shown in Table 1 on the row labeled u'\u2018' Reimpl u'\u2019' with u'\u2018' Empty, Coarse u'\u2019' pruning</a>
<a name="4">[4]</a> <a href="#4" id=4>The resulting speed is 187.5 sentences per second, labeled in Table 1 as row labeled u'\u2018' Reimpl u'\u2019' with u'\u2018' Labeled, Coarse u'\u2019' pruning</a>
<a name="5">[5]</a> <a href="#5" id=5>Their system uses a grammar based on the Berkeley parser [ 9 ] (which is particularly amenable to GPU processing), u'\u201c' compiling u'\u201d' the grammar into a sequence of GPU kernels that are applied densely to every item in the parse chart</a>
<a name="6">[6]</a> <a href="#6" id=6>The coarse to fine pruning approach of</a>
</body>
</html>
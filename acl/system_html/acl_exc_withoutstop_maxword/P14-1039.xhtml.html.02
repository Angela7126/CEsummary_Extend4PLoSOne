<html>
<head>
<title>P14-1039.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>To improve word ordering decisions, White Rajkumar [ 36 ] demonstrated that incorporating a feature into the ranker inspired by Gibson u'\u2019' s [ 12 ] dependency locality theory can deliver statistically significant improvements in automatic evaluation scores, better match the distributional characteristics of sentence orderings, and significantly reduce the number of serious ordering errors (some involving vicious ambiguities) as confirmed by a targeted human evaluation</a>
<a name="1">[1]</a> <a href="#1" id=1>Finally, to reduce the number of subject-verb agreement errors, Rajkumar and White ( 2010 ) extended the earlier model with features enabling it to make correct verb form choices in sentences involving complex coordinate constructions and with expressions such as a lot of where the correct choice is not determined solely by the head noun</a>
<a name="2">[2]</a> <a href="#2" id=2>In the figure, nodes correspond to discourse referents labeled with lexical predicates, and dependency relations between nodes encode argument structure (gold standard CCG lexical categories are also shown); note that semantically empty function words such as infinitival- to are missing</a>
<a name="3">[3]</a> <a href="#3" id=3>The ranking model makes choices addressing all three interrelated sub-tasks traditionally considered part of the surface realization task in natural language generation research [ 29 , 30 ] inflecting lemmas with grammatical word forms, inserting function words and linearizing the words in a grammatical and natural order</a>
<a name="4">[4]</a> <a href="#4" id=4>Table 1 shows examples from White and Rajkumar ( 2012 ) of how the dependency length feature ( deplen ) affects the OpenCCG realizer u'\u2019' s output even in comparison to a model ( depord ) with a rich set of discriminative syntactic and dependency ordering features, but no features directly targeting relative weight</a>
<a name="5">[5]</a> <a href="#5" id=5>In inspecting the results of reranking with this strategy, we observe that while it does sometimes succeed in avoiding egregious errors involving vicious ambiguities, common parsing mistakes such as PP-attachment errors lead to unnecessarily sacrificing conciseness or fluency in order to avoid ambiguities that would be</a>
</body>
</html>
(lp0
VFor the lf (lexical function) model, we construct functional matrix representations of adjectives, determiners and intransitive verbs
p1
aVIf distributional vectors encode certain aspects of word meaning, it is natural to expect that similar aspects of sentence meaning can also receive vector representations, obtained compositionally from word vectors
p2
aVWe conjecture that the lf 3-way tensor representation of transitive verbs leads to a stronger asymmetry between sentences with inverted arguments, and thus makes this model particularly sensitive to word order differences
p3
aVIndeed, in order to train a transitive verb tensor (e.g.,, eat ), the method of Grefenstette et al
p4
aVThe add (additive) model produces the vector of a sentence by summing the vectors of all content words in it
p5
aVFor instance, symmetric operations like vector addition are insensitive to syntactic structure, therefore meaning differences encoded in word order are lost in composition pandas eat bamboo is identical to bamboo eats pandas
p6
aVWe call our proposal practical lexical function model, or plf
p7
aVIn plf, a functional word is not represented by a single tensor of arity-dependent order, but by a vector plus an ordered set of matrices, with one matrix for each argument the function takes
p8
aVIn the tfds task, not surprisingly the add and mult models, lacking determiner representations and being order-insensitive, fail to distinguish between true paraphrases and foils (indeed, for the mult model foils are significantly closer to the targets than the paraphrases, probably because the latter have lower content word overlap than the foils, that often differ in word
p9
a.
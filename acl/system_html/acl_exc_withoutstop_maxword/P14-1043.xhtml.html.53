<html>
<head>
<title>P14-1043.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Using three supervised parsers, we have many options to construct parse forest on unlabeled data</a>
<a name="1">[1]</a> <a href="#1" id=1>Both work employs two parsers to process the unlabeled data, and only select as extra training data sentences on which the 1-best parse trees of the two parsers are identical</a>
<a name="2">[2]</a> <a href="#2" id=2>We divide the unlabeled data into three sets according to the divergence of the 1-best outputs of Berkeley Parser and ZPar</a>
<a name="3">[3]</a> <a href="#3" id=3>To construct parse forest on unlabeled data, we employ three supervised parsers based on different paradigms, including our baseline graph-based dependency parser, a transition-based dependency parser [] , and a generative constituent parser []</a>
<a name="4">[4]</a> <a href="#4" id=4>16K for Chinese), it is likely that the unlabeled data may overwhelm the labeled data during SGD training</a>
<a name="5">[5]</a> <a href="#5" id=5>Different from traditional self/co/tri-training which only use 1-best parse trees on unlabeled data, our approach adopts ambiguous labelings, represented by parse forest, as gold-standard for unlabeled sentences</a>
<a name="6">[6]</a> <a href="#6" id=6>Finally, with sufficient unlabeled data, it is possible that the parser can learn to resolve such uncertainty by biasing to more reasonable parse trees</a>
<a name="7">[7]</a> <a href="#7" id=7>In this work, we adopt the graph-based paradigm because it allows us to naturally derive conditional probability of a dependency tree u'\ud835' u'\udc1d' given a sentence u'\ud835' u'\udc31' , which is required to compute likelihood of both labeled and unlabeled data</a>
<a name="8">[8]</a> <a href="#8" id=8>Training with the combined labeled and unlabeled data, the objective is to maximize the mixed likelihood</a>
<a name="9">[9]</a> <a href="#9" id=9>Combining the outputs of Berkeley Parser and ZPar ( u'\u201c' Unlabeled</a>
</body>
</html>
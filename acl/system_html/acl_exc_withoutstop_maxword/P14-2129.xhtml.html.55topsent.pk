(lp0
VFinally, Figure 3 shows the speed of inference, labeled precision and labeled recall of annotating hedge constituents on the test set as a function of the maximum span parameter L , versus the baseline parser
p1
aVSegmentation accuracy is reported as an F1-score of unlabeled segment bracketing
p2
aVNote that segmentation time is negligible compared to the parsing time, hence is omitted in reported time
p3
aVThe final two rows show performance with automatic segmentation, using a model that includes either unlabeled or labeled segmentation tags, as described in the last section
p4
aVWe use hedge segmentation as a finite-state pre-processing step for hedge context-free parsing
p5
aVA unique property of hedge constituents compared to constituents in the original parse trees is that they are sequentially connected to the top-most node
p6
aVEfficiency results are reported as number of words parsed per second (w/s
p7
aVIt is possible to parse with a standardly induced PCFG using this sort of hedge constrained parsing that only considers a subset of the chart cells, and speedups are achieved, however this is clearly non-optimal, since the model is ill-suited to combining hedges into flat structures at the root of the tree
p8
aVFigure 2 plots the percentage of constituents from the original WSJ Penn treebank (sections 2-21) retained in the transformed version, as we vary the maximum span length parameter L
p9
aVSegmentation accuracy is better for the model with labels, although overall that accuracy is rather
p10
a.
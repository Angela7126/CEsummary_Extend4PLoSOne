<html>
<head>
<title>P14-1091.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>h u'\ud835' u'\udcac' u'\u2062' u'\ud835' u'\udcab' c u'\u2062' o u'\u2062' u u'\u2062' n u'\u2062' t u'\u2062' ( u'\u22c5' ) , which counts the number of triples in u'\ud835' u'\udc9f' that are generated by u'\ud835' u'\udcac' u'\u2062' u'\ud835' u'\udcab' -based question translation method</a>
<a name="1">[1]</a> <a href="#1" id=1>h u'\u211b' u'\u2062' u'\u2130' c u'\u2062' o u'\u2062' u u'\u2062' n u'\u2062' t u'\u2062' ( u'\u22c5' ) , which counts the number of triples in u'\ud835' u'\udc9f' that are generated by u'\u211b' u'\u2062' u'\u2130' -based question translation method</a>
<a name="2">[2]</a> <a href="#2" id=2>The first half (from Line 1 to Line 13) generates a formal triple set T for each unary span u'\ud835' u'\udcac' i j u'\u2208' u'\ud835' u'\udcac' , using the question translation method Q u'\u2062' T u'\u2062' r u'\u2062' a u'\u2062' n u'\u2062' s u'\u2062' ( u'\ud835' u'\udcac' i j , u'\ud835' u'\udca6' u'\u2062' u'\u212c' ) (Line 4), which takes u'\ud835' u'\udcac' i j as the input</a>
<a name="3">[3]</a> <a href="#3" id=3>Algorithm 2 shows how to generate formal triples for a span u'\ud835' u'\udcac' based on question patterns ( u'\ud835' u'\udcac' u'\u2062' u'\ud835' u'\udcab' -based question translation</a>
<a name="4">[4]</a> <a href="#4" id=4>We define u'\u211b' u'\u2062' u'\u2130' p as a relation expression set for a given KB predicate p u'\u2208' u'\ud835' u'\udca6' u'\u2062' u'\u212c'</a>
<a name="5">[5]</a> <a href="#5" id=5>We first present our translation-based KB-QA method in Algorithm 1, which is used to generate</a>
</body>
</html>
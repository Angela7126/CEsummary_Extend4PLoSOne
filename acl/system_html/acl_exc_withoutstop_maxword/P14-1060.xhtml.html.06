<html>
<head>
<title>P14-1060.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>We describe learning of the model parameters with fully annotated training data, as well as an approach for learning motif segmentation that requires only partial supervision</a>
<a name="1">[1]</a> <a href="#1" id=1>Supervised learning</a>
<a name="2">[2]</a> <a href="#2" id=2>We briefly discuss data-driven learning of weights for features that define the motif affinity scores and penalties</a>
<a name="3">[3]</a> <a href="#3" id=3>This would involve initializing the weights prior to the semi-supervised procedure with the weights from the supervised learning model, so as to seed the semi-supervised approach with reasonable model, and use the partially annotated data to fine-tune the supervised model</a>
<a name="4">[4]</a> <a href="#4" id=4>In this section, we describe the principal features used in the segmentation model</a>
<a name="5">[5]</a> <a href="#5" id=5>Section 3 describes our methodology, which consists of a frequency-driven segmentation model to partition text into semantically meaningful recurring lineal-subunits, a representation learning framework for learning new semantic embeddings based on this segmentation, and an approach to use such embeddings in downstream applications</a>
<a name="6">[6]</a> <a href="#6" id=6>However, the supervised learning model with subsequent annealing outperforms the supervised model in terms of both precision and recall; showing the utility of the semi-supervised method when seeded with a good initial model, and the additive value of partially labeled data</a>
<a name="7">[7]</a> <a href="#7" id=7>We present a framework for extending distributional semantics to learn semantic representations of both words and phrases in terms of recurrent motifs, rather than arbitrary word tokens</a>
<a name="8">[8]</a> <a href="#8" id=8>In this section, we define our frequency-driven framework for distributional semantics in detail</a>
<a name="9">[9]</a> <a href="#9" id=9>While the Viterbi algorithm can be used for tagging optimal state-sequences given the weights, the structured perceptron can learn optimal model weights given gold-standard sequence labels</a>
<a name="10">[10]</a> <a href="#10" id=10>The model accounts for possible segmentations of a sentence into potential motifs, and prefers recurrent and cohesive motifs through features that capture frequency-based and statistical features, as well as linguistic idiosyncracies</a>
<a name="11">[11]</a> <a href="#11" id=11>We first quantitatively and qualitatively analyze the performance of the segmentation model, and then evaluate</a>
</body>
</html>
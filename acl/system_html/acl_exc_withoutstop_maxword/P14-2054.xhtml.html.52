<html>
<head>
<title>P14-2054.xhtml_1.pickle</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Trevor et al. proposed synchronous tree substitution grammar [ 5 ] , which allows local distortion of the tree topology and can thus naturally capture structural mismatches</a>
<a name="1">[1]</a> <a href="#1" id=1>Our method extends Eisner u'\u2019' s cubic time parsing algorithm by adding signatures to each span, which indicate the number of deleted words and the rightmost kept word within the span, resulting in O u'\u2062' ( n 6 ) time complexity and O u'\u2062' ( n 4 ) space complexity</a>
<a name="2">[2]</a> <a href="#2" id=2>Sentence compression aims to shorten a sentence by removing uninformative words to reduce reading time</a>
<a name="3">[3]</a> <a href="#3" id=3>The learning task is to estimate the feature weight vector based on the manually compressed sentences</a>
<a name="4">[4]</a> <a href="#4" id=4>The first is linear chain CRFs, where the compression task is casted as a binary sequence labeling problem</a>
<a name="5">[5]</a> <a href="#5" id=5>Compared with TM13 u'\u2019' s system, our model with exact decoding is not significantly faster due to the high order of the time complexity</a>
<a name="6">[6]</a> <a href="#6" id=6>We further propose a faster approximate algorithm based on Lagrangian relaxation, which has T u'\u2062' O u'\u2062' ( n 4 ) running time and O u'\u2062' ( n 3</a>
</body>
</html>
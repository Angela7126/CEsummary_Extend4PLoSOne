<html>
<head>
<title>f0028.txt</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Database systems provide two forms of data independence termed physical data independence and logical data independence.</a>
<a name="1">[1]</a> <a href="#1" id=1>Database systems use files.</a>
<a name="2">[2]</a> <a href="#2" id=2>Database systems use a schema to implement both logical and physical data independence.</a>
<a name="3">[3]</a> <a href="#3" id=3>These data models can also represent data lineage and other metadata by including narrative text, data definitions, and data tables within the file.</a>
<a name="4">[4]</a> <a href="#4" id=4>Separating the data and the metadata from the programs that manipulate the data is crucial to data independence.</a>
<a name="5">[5]</a> <a href="#5" id=5>While physical data independence is used to hide changes in the physical data organizations, logical data independence hides changes in the logical organization of the data.</a>
<a name="6">[6]</a> <a href="#6" id=6>Modern database systems also provide logical data independence that insulates programs from changes to the logical database design -- allowing designers to add or delete relationships and to add information to the database.</a>
<a name="7">[7]</a> <a href="#7" id=7>As file systems grow to petabyte-scale archives with billions of files, the science community must create a synthesis of database systems and file systems.</a>
<a name="8">[8]</a> <a href="#8" id=8>There is a convergence of file systems, database systems, and programming languages.</a>
<a name="9">[9]</a> <a href="#9" id=9>Data classes encapsulated with methods provide data independence and make it much easier to evolve the data without perturbing programs.</a>
<a name="10">[10]</a> <a href="#10" id=10>Lastly, most file systems can manage millions of files, but by the time a file system can deal with billions of files, it has become a database system.</a>
<a name="11">[11]</a> <a href="#11" id=11>Database systems provide very powerful data definition tools to specify the abstract data formats and also specify how the data is organized.</a>
<a name="12">[12]</a> <a href="#12" id=12>Files (or extended files like HDF) then become part of the database and benefit from the parallel search and metadata management.</a>
<a name="13">[13]</a> <a href="#13" id=13>We believe this database, file system, and programming language integration will be the key to managing and accessing peta-scale data management systems in the future.</a>
<a name="14">[14]</a> <a href="#14" id=14>Traditional database systems have lagged in supporting core scientific data types but they have a few things scientists desperately need for their data analysis:</a>
<a name="15">[15]</a> <a href="#15" id=15>Database systems provide powerful associative search (search by value rather than by location) and provide automatic parallel access and execution essential to peta-scale data analysis.</a>
<a name="16">[16]</a> <a href="#16" id=16>This linking-embedding object model nicely accommodates the integration of database systems and file systems -- files are treated as linked-objects.</a>
<a name="17">[17]</a> <a href="#17" id=17>Once you can put your types and your programs inside the database you get the parallelism, non-procedural query, and data independence advantages of traditional database systems.</a>
<a name="18">[18]</a> <a href="#18" id=18>They provide non-procedural and parallel data search to quickly find data subsets, and a many tools to automate data design and management.</a>
<a name="19">[19]</a> <a href="#19" id=19>The separation of data and programs is artificial -- one cannot see the data without using a program and most programs are data driven.</a>
</body>
</html>
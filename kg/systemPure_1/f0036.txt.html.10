<html>
<head>
<title>f0036.txt</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>So, today, the rule of thumb is that a person can manage 1 TB to 100 TB of storage -- with 10 TB being typical.</a>
<a name="1">[1]</a> <a href="#1" id=1>At that time a GB of disk cost about a million dollars, and so it made sense to have someone optimizing it and monitoring the use of disk space.</a>
<a name="2">[2]</a> <a href="#2" id=2>The parallelism law is algebra, and so remains true and very relevant to this day.</a>
<a name="3">[3]</a> <a href="#3" id=3>Since disk and RAM have a 1:100 price ratio, this price decline suggests that what is economical to put on disk today will be economical to put in RAM in about 10 years.</a>
<a name="4">[4]</a> <a href="#4" id=4>(1) We can reduce disk accesses by caching popular (hot) pages in main memory, and writing a log of their changes to disk.</a>
<a name="5">[5]</a> <a href="#5" id=5>Today, a million dollars can buy 1 TB to 100 TB of disk storage (if you shop carefully).</a>
<a name="6">[6]</a> <a href="#6" id=6>If the local access saves both, then the R_local is a fraction of a second.</a>
<a name="7">[7]</a> <a href="#7" id=7>If the transfer is sequential, there is no seek time, and if the transfer is an entire track, there is no rotation time.</a>
<a name="8">[8]</a> <a href="#8" id=8>So, the marginal cost of an instruction per second is approximately the marginal cost of a byte.</a>
<a name="9">[9]</a> <a href="#9" id=9>If a computation has a serial component S and a parallel component P, then the maximum speedup is (S+P)/S.</a>
<a name="10">[10]</a> <a href="#10" id=10>Based on rule 10, sequential IOs are much larger and so the instructions per IO are much higher for sequential workloads.</a>
</body>
</html>
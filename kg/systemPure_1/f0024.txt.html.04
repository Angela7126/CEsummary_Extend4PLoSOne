<html>
<head>
<title>f0024.txt</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>In my opinion, GPS was unsuccessful as a general problem solver, because problems don't take this form in general and because most of the knowledge about the common sense needed for problem solving and achieving goals is not simply representable in the form of rules for transforming expressions.</a>
<a name="1">[1]</a> <a href="#1" id=1>The Friedberg approach was successful in learning only how to move a single bit from one memory cell to another, and its scheme of rewarding instructions involved in successful runs by reducing their probability of modification was shown by Herbert Simon (a now substantiated rumor froma 1987 personal communication) to be inferior to testing each program thoroughly and completely scrapping any program that wasn't perfect.</a>
<a name="2">[2]</a> <a href="#2" id=2>While Friedberg's problem was learning from experience, all schemes for representing knowledge by program suffer from similar difficulties when the object is to combine disparate knowledge or to make programs that modify knowledge.</a>
<a name="3">[3]</a> <a href="#3" id=3>This problem of how general to be arises whether the general common sense knowledge is expressed in logic, in program or in some other formalism.</a>
<a name="4">[4]</a> <a href="#4" id=4>A small conceptual modification to a behavior is usually not represented by a small modification to the program, especially if machine language programs are used and any one small modification to the text of a program is considered as likely as any other.</a>
<a name="5">[5]</a> <a href="#5" id=5>A logical system using contexts might provide operations of entering and leaving a context yielding what we might call ultra-natural deduction allowing a sequence of reasoning like</a>
<a name="6">[6]</a> <a href="#6" id=6>However, a Prolog program incorporating this fragment directly can sterilize a container only by killing each bacterium individually and would require that some other part of the program successively generate the names of the bacteria.</a>
<a name="7">[7]</a> <a href="#7" id=7>The problem is writing axioms that satisfy our notions of incorporating the general facts about a phenomenon.</a>
<a name="8">[8]</a> <a href="#8" id=8>My own opinion is that reasoning and problem solving programs will eventually have to allow the full use of quantifiers and sets and have strong enough control methods to use them without combinatorial explosion.</a>
<a name="9">[9]</a> <a href="#9" id=9>(Some people propose that the knowledge is internally expressed in the form of examples only, but strong mechanisms using analogy and similarity permit their more general use.</a>
<a name="10">[10]</a> <a href="#10" id=10>The facts that were included in the axioms had to be delicately chosen in order to avoid the introduction of contradictions arising from the failure to delete a sentence that wouldn't be true in the situation that resulted from an action.</a>
<a name="11">[11]</a> <a href="#11" id=11>Namely, the behavior is represented by a computer program and learning is accomplished by making random modifications to the program and testing the modified program.</a>
<a name="12">[12]</a> <a href="#12" id=12>Prolog represents a local optimum in this continuum, because Horn clauses are medium expressive but can be interpreted directly by a logical problem solver.</a>
<a name="13">[13]</a> <a href="#13" id=13>(McCarthy and Hayes 1969) made the distinction between epistemological and heuristic aspects of the AI problem and asserted that generality is more easily studied epistemologically.</a>
<a name="14">[14]</a> <a href="#14" id=14>Newell's current candidate for general problem representation is SOAR (Laird, Newell and Rosenbloom 1987), which, as I understand it, is concerned with transforming one state to another, where the states need not be represented by expressions.</a>
<a name="15">[15]</a> <a href="#15" id=15>The second problem with the situation calculus axioms is that they were again not general enough.</a>
<a name="16">[16]</a> <a href="#16" id=16>The defect of the Friedberg approach is that while representing behaviors by programs is entirely general, modifying behaviors by small modifications to the programs is very special.</a>
<a name="17">[17]</a> <a href="#17" id=17>The initial idea was to represent problems of some general class as problems of transforming one expression into another by means of a set of allowed rules.</a>
</body>
</html>
<html>
<head>
<title>f0024.txt</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Implicit in (McCarthy 1959) was the idea of a general purpose common sense database.</a>
<a name="1">[1]</a> <a href="#1" id=1>This problem of how general to be arises whether the general common sense knowledge is expressed in logic, in program or in some other formalism.</a>
<a name="2">[2]</a> <a href="#2" id=2>The common sense information possessed by humans would be written as logical sentences and included in the database.</a>
<a name="3">[3]</a> <a href="#3" id=3>Within first order logic, the expressive power of a theory depends on what domains the variables are allowed to range.</a>
<a name="4">[4]</a> <a href="#4" id=4>Prolog databases allow arbitrary Horn clauses that include free variables, e.g.</a>
<a name="5">[5]</a> <a href="#5" id=5>In principle, Prolog goes slightly beyond this, because the expressions found as values of variables by Prolog programs can themselves involve free variables.</a>
<a name="6">[6]</a> <a href="#6" id=6>Non-monotonicity has considerably increased the possibility of expressing general knowledge about the effects of events in the situation calculus.</a>
<a name="7">[7]</a> <a href="#7" id=7>In my opinion, GPS was unsuccessful as a general problem solver, because problems don't take this form in general and because most of the knowledge about the common sense needed for problem solving and achieving goals is not simply representable in the form of rules for transforming expressions.</a>
<a name="8">[8]</a> <a href="#8" id=8>This led in the 1960s to the situation calculus (McCarthy and Hayes 1969) which was intended to provide a way of expressing the consequences of actions independent of the problem.</a>
<a name="9">[9]</a> <a href="#9" id=9>the correspond to predicate symbols applied to constant expressions.</a>
<a name="10">[10]</a> <a href="#10" id=10>A production system (or a logic program) can only use this fact by substituting particular bacteria for the variables.</a>
<a name="11">[11]</a> <a href="#11" id=11>Any goalseeking program could consult the database for the facts needed to decide how to achieve its goal.</a>
<a name="12">[12]</a> <a href="#12" id=12>Prolog represents a local optimum in this continuum, because Horn clauses are medium expressive but can be interpreted directly by a logical problem solver.</a>
<a name="13">[13]</a> <a href="#13" id=13>The simplest systems allow only constant predicates applied to constant symbols, e.g.</a>
<a name="14">[14]</a> <a href="#14" id=14>The second problem with the situation calculus axioms is that they were again not general enough.</a>
<a name="15">[15]</a> <a href="#15" id=15>Beyond that lies full first order logic including both existential and universal quantifiers and arbitrary first order formulas.</a>
<a name="16">[16]</a> <a href="#16" id=16>Here are some situation calculus axioms for moving and painting blocks.</a>
<a name="17">[17]</a> <a href="#17" id=17>Next one can allow arbitrary constant terms, built from function symbols, constants and predicate symbols, e.g.</a>
</body>
</html>
<html>
<head>
<title>f0037.txt</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>So, shared disk systems have morphed to partitioned served-disk systems to improve locality.</a>
<a name="1">[1]</a> <a href="#1" id=1>So, paradoxically, shared memory systems have been successful by adopting a shared-nothing software architecture.</a>
<a name="2">[2]</a> <a href="#2" id=2>So, paradoxically, shared-memory and shared-disk systems are becoming shared-nothing systems as they aim for better data locality.</a>
<a name="3">[3]</a> <a href="#3" id=3>These ScaleOut systems are impressive.</a>
<a name="4">[4]</a> <a href="#4" id=4>that appear to be sharing disks are actually very impressive served disk systems with impressive cache management.</a>
<a name="5">[5]</a> <a href="#5" id=5>Today, several vendors are shipping systems that scale to 32 or 64 processors, with either a uniform memory access (UMA) or non-uniform memory access (NUMA) architecture.</a>
<a name="6">[6]</a> <a href="#6" id=6>There is a class of single-node ScaleUp systems from HP, IBM, and Sun, running DB2, Oracle, and Sybase that process about 300 million tpcC transactions per day on a computer costing about ten million dollars with a 20 TB database.</a>
<a name="7">[7]</a> <a href="#7" id=7>Now most modern database systems offer database replication -- and the feature is widely used to geoplex data and to provide fallback service.</a>
<a name="8">[8]</a> <a href="#8" id=8>And then there is a class of multi-node ScaleOut clusters from IBM and Compaq running Windows2000 and SQL Server producing about a billion tpcC transactions per day on a 42 TB database.</a>
<a name="9">[9]</a> <a href="#9" id=9>Persistent data is stored in a database partitioned among several servers, and these servers are packed, so that if one server fails, another member of the pack can provide access to the failed server's database.</a>
<a name="10">[10]</a> <a href="#10" id=10>Dell and Compaq for example both have low-end systems running Windows 2000 and SQL Server 2000 that cost about 100k$, have about 1TB of disk and can process about a million transactions per day.</a>
<a name="11">[11]</a> <a href="#11" id=11>In part this is due to Moore's law, in part it is due to our finally bringing the software base to a modular and partitionable architecture that maps well to shared-nothing arrays (and hence to shared memory and shared disk arrays).</a>
<a name="12">[12]</a> <a href="#12" id=12>In retrospect this was due to a bus rather than switched memory interconnect, unsophisticated cache management, and ignorant software.</a>
<a name="13">[13]</a> <a href="#13" id=13>The tpcC results show this fairly clearly, when you subtract out the disks from the equation (disk prices are nearly constant across all vendors) the residue systems vary in cost by a factor of ten or more.</a>
</body>
</html>
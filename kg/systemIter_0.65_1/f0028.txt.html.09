<html>
<head>
<title>f0028.txt</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Database systems provide two forms of data independence termed physical data independence and logical data independence.</a>
<a name="1">[1]</a> <a href="#1" id=1>Separating the data and the metadata from the programs that manipulate the data is crucial to data independence.</a>
<a name="2">[2]</a> <a href="#2" id=2>While physical data independence is used to hide changes in the physical data organizations, logical data independence hides changes in the logical organization of the data.</a>
<a name="3">[3]</a> <a href="#3" id=3>Database systems use a schema to implement both logical and physical data independence.</a>
<a name="4">[4]</a> <a href="#4" id=4>Data classes encapsulated with methods provide data independence and make it much easier to evolve the data without perturbing programs.</a>
<a name="5">[5]</a> <a href="#5" id=5>These data models can also represent data lineage and other metadata by including narrative text, data definitions, and data tables within the file.</a>
<a name="6">[6]</a> <a href="#6" id=6>Modern database systems also provide logical data independence that insulates programs from changes to the logical database design -- allowing designers to add or delete relationships and to add information to the database.</a>
<a name="7">[7]</a> <a href="#7" id=7>The separation of data and programs is artificial -- one cannot see the data without using a program and most programs are data driven.</a>
<a name="8">[8]</a> <a href="#8" id=8>Logical data independence is typically supported using views.</a>
<a name="9">[9]</a> <a href="#9" id=9>But the key point of this section is that an explicit and standard data access layer with precise metadata and explicit data access is essential for data independence.</a>
<a name="10">[10]</a> <a href="#10" id=10>So, it is paradoxical that the data management community has worked for 40 years to achieve something called data independence -- a clear separation of programs from data.</a>
<a name="11">[11]</a> <a href="#11" id=11>Database systems provide very powerful data definition tools to specify the abstract data formats and also specify how the data is organized.</a>
<a name="12">[12]</a> <a href="#12" id=12>Database systems use files.</a>
<a name="13">[13]</a> <a href="#13" id=13>Physical data independence comes in many different forms.</a>
<a name="14">[14]</a> <a href="#14" id=14>They provide non-procedural and parallel data search to quickly find data subsets, and a many tools to automate data design and management.</a>
<a name="15">[15]</a> <a href="#15" id=15>By allowing such techniques, physical data independence allows performance improvements by reorganizing data for parallelism -- at little or no extra effort on the part of scientists.</a>
<a name="16">[16]</a> <a href="#16" id=16>One example of physical data independence is the ability of a database system to partition the rows of a table across multiple disks and/or multiple nodes of a cluster without requiring that any application programs be modified.</a>
<a name="17">[17]</a> <a href="#17" id=17>Science data centers that provide access to both the data and the applications that analyze the data are emerging as service stations for one or another scientific domain.</a>
<a name="18">[18]</a> <a href="#18" id=18>The tools would do data mining and machine learning on the data, and would make it easy to script workflows that analyze the data.</a>
<a name="19">[19]</a> <a href="#19" id=19>However, in all cases the goal is to be able to change the underlying physical data organization without breaking any application programs that depend on the old data format.</a>
</body>
</html>
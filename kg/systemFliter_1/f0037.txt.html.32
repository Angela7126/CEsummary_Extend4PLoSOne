<html>
<head>
<title>f0037.txt</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Things are going so well that the company decides to (1) do a leveraged buyout of a much larger company and asks you to integrate your site with theirs, (2) form a consortium with two other companies to provide some new services, (3) internationalize the operation offering services in the 20 major languages and 50 major currencies and 500 tax codes, and (4) embrace the latest technology fad, which today is UDDI, WSDL, schemas, XLANG, SOAP, and XML.</a>
<a name="1">[1]</a> <a href="#1" id=1>Taking Microsoft as an example, the most spectacular MSN outages of late have been due to operations mistakes (misconfigured a router) and sabotage (denial of service attacks).</a>
<a name="2">[2]</a> <a href="#2" id=2>In part this is due to Moore's law, in part it is due to our finally bringing the software base to a modular and partitionable architecture that maps well to shared-nothing arrays (and hence to shared memory and shared disk arrays).</a>
<a name="3">[3]</a> <a href="#3" id=3>I confess to having drunk the .NET cool-aid and so agree that UDDI, WSDL, schemas, XLANG, SOAP, and XML help make applications more agile.</a>
<a name="4">[4]</a> <a href="#4" id=4>Persistent data is stored in a database partitioned among several servers, and these servers are packed, so that if one server fails, another member of the pack can provide access to the failed server's database.</a>
<a name="5">[5]</a> <a href="#5" id=5>hardware, software, operations mistakes, and environmental problems (power failures, storms,..</a>
<a name="6">[6]</a> <a href="#6" id=6>In retrospect this was due to a bus rather than switched memory interconnect, unsophisticated cache management, and ignorant software.</a>
<a name="7">[7]</a> <a href="#7" id=7>The chairman of IBM is calling for the return of the mainframe, asserting it is cheaper to run 1,000 Linux systems on a mainframe than it is to run 1,000 Intel boxes -- mostly because the management costs dominate.</a>
<a name="8">[8]</a> <a href="#8" id=8>ipSec everywhere, no anonymous access, careful tracing of all traffic, and other draconian measures to make it much more difficult to launch these attacks.</a>
<a name="9">[9]</a> <a href="#9" id=9>In 1996 I helped with a 12,000 tps benchmark (loosely based on tpcA), which showed a billion banking transactions per day.</a>
<a name="10">[10]</a> <a href="#10" id=10>Interestingly they achieve this scaling by recognizing that cache locality is critical, so sharing of memory is used very sparingly:</a>
<a name="11">[11]</a> <a href="#11" id=11>Big blocks have low volume and so high fixed engineering costs that have to be spread over very few units.</a>
<a name="12">[12]</a> <a href="#12" id=12>Clones, packs, load balancing, failover, and fallback all improve availability -- and they are all automatic.</a>
<a name="13">[13]</a> <a href="#13" id=13>The operations staff can do rolling upgrades of most application changes by first installing them on a few nodes and closely monitoring the behavior.</a>
</body>
</html>
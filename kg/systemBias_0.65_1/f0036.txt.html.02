<html>
<head>
<title>f0036.txt</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>As processor speeds continue to outpace memory speeds, there will be increasing incentives for software designers to look for algorithms with small instruction cache footprints, with predictable branching behavior, and with good or predictable data locality (i.e., clustered or sequential access).</a>
<a name="1">[1]</a> <a href="#1" id=1>Software designers are learning that careful program and data placement and cache sensitive algorithms with good locality give 3x speedups on current processors.</a>
<a name="2">[2]</a> <a href="#2" id=2>The argument in favor of mirrors versus RAID5 is that mirrored disks offer double the read bandwidth to each data item, and they cost only one extra access for a write.</a>
<a name="3">[3]</a> <a href="#3" id=3>As they see petabyte stores looming on the horizon, administrators are moving to strategies that maintain multiple disk versions online so that one never has to restore the database from tape.</a>
<a name="4">[4]</a> <a href="#4" id=4>Getting good performance from these massive SMPs will require careful attention to data partitioning, data locality, and processor affinity.</a>
<a name="5">[5]</a> <a href="#5" id=5>In theory, the current 550 MHz Intel processors are able to execute 2 billion instructions per second, so Amdahl's IO law suggests that each 550 MHz processor needs 160 MBps of disk bandwidth (all numbers rounded).</a>
<a name="6">[6]</a> <a href="#6" id=6>Storage prices have dropped so low that the storage management costs now exceed storage hardware costs (similarly, PC management costs exceed the cost of the hardware).</a>
<a name="7">[7]</a> <a href="#7" id=7>By using RAID (mirroring or parity), administrators sacrifice disk storage capacity to protect against disk media failures.</a>
<a name="8">[8]</a> <a href="#8" id=8>Tape capacities are expected to improve faster than tape speed, and access time is expected to stay about the same, making the access problem even more problematic:</a>
<a name="9">[9]</a> <a href="#9" id=9>In case of a proxy, assume a fast connection between the user and the cache (e.g., a 100Mb/s LAN), so that the time cost of accessing data from a remote proxy disk is not significantly larger than that from a local disk.</a>
<a name="10">[10]</a> <a href="#10" id=10>The basic diagram is shown in Figure 2, where the link speed varies from 100 KBps for intranets, to mo dem speeds of 5 KBps, to wireless speeds of 1 KBps.</a>
</body>
</html>
<html>
<head>
<title>f0029.txt.s3</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>If this is an inexpensive test and if there are less than a thousand runs, then one can compute the overlapping run pairs by simply comparing all runs to all others.</a>
<a name="1">[1]</a> <a href="#1" id=1>This representation dovetails with the HTM library [1] that makes it easy to find all points within a region.</a>
<a name="2">[2]</a> <a href="#2" id=2>The residual misses are neither edge nor masked so they must be ephemeral.</a>
<a name="3">[3]</a> <a href="#3" id=3>insert Match(run1, objectID1, run2, objectID2, hitOrMiss)</a>
<a name="4">[4]</a> <a href="#4" id=4>insert Match(objectID1, run1, objectID2, run2, hitOrMiss)</a>
<a name="5">[5]</a> <a href="#5" id=5>insert Match(objectID1, run1, objectID2, run2, hitOrMiss)</a>
<a name="6">[6]</a> <a href="#6" id=6>Miss(run1, objectID, position1, run2)</a>
<a name="7">[7]</a> <a href="#7" id=7>First, using OpenGIS terminology, define buffer(run1, fuzz) as a region that expands region run1 by the fuzz.</a>
<a name="8">[8]</a> <a href="#8" id=8>ClassificationDistance(run1.positionError, run2.positionError), and run2MasksID is the ID of the union of all the mask regions in run2 (see Figure 1.</a>
</body>
</html>
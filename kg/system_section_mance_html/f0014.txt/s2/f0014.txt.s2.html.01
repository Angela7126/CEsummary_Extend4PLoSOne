<html>
<head>
<title>f0014.txt.s2</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Let this computation be recoded on a fixed universal Turing machine and count the number of steps in the new computation.</a>
<a name="1">[1]</a> <a href="#1" id=1>For any universal Turing machine there is a standard way of recoding on it the computation performed by the given machine.</a>
<a name="2">[2]</a> <a href="#2" id=2>Hence we offer the following revised definition of the length of a computation performed by a Turing machine.</a>
<a name="3">[3]</a> <a href="#3" id=3>This requires a mild generalization of the concept of Turing machines.</a>
<a name="4">[4]</a> <a href="#4" id=4>It will be made at least plausible that a machine with Q internal states and S symbols should be considered as making about (1/2)log(QS) elementary steps per step of computation and hence the number of steps in a computation should be multiplied by this factor to get the length of the computation.</a>
<a name="5">[5]</a> <a href="#5" id=5>There are certain difficulties here connected with the fact that the rate of computation is limited if the tape of the universal machine is finite dimensional, and hence the rate should probably be defined with respect to a machine whose tape is infinite dimensional but each square of which has at most two states and which has only two internal states.</a>
<a name="6">[6]</a> <a href="#6" id=6>Having now an idea of what should be meant by the length L(m,r,T) of a particular computation of g(m,r) by the machine T, we can return to the question of comparing two Turing machines.</a>
<a name="7">[7]</a> <a href="#7" id=7>Any machine can be modified into such a machine by adding to it facilities for testing a conclusion and having it spend a small fraction of its time trying the integers in order).</a>
</body>
</html>
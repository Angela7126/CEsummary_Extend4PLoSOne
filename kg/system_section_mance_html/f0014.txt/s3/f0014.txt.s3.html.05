<html>
<head>
<title>f0014.txt.s3</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>With the enumeration the objects not possessing the property need not even be examined.</a>
<a name="1">[1]</a> <a href="#1" id=1>Of course, exhaustiveness in examining for usefulness can be attained for any effectively enumerable class of objects simply by going through the enumeration.</a>
<a name="2">[2]</a> <a href="#2" id=2>Here we remark that a property is useful mainly when it permits a new enumeration of the objects possessing it and not merely a test which can be applied.</a>
<a name="3">[3]</a> <a href="#3" id=3>What is needed is a general procedure which ensures that all relevant concepts which can be computed with are examined and that the irrelevant are eliminated as rapidly as possible.</a>
<a name="4">[4]</a> <a href="#4" id=4>Of course, it is then necessary to be able to express all other relevant properties as functions of the new enumeration.</a>
<a name="5">[5]</a> <a href="#5" id=5>However, enumerative methods are always inefficient.</a>
<a name="6">[6]</a> <a href="#6" id=6>What has been done is only a semiformal description of a few of the processes common to scientific reasoning and we have no guarantee of being exhaustive.</a>
<a name="7">[7]</a> <a href="#7" id=7>More generally, the enumeration of partial recursive functions should give an early place to compositions of the functions which have already appeared.</a>
<a name="8">[8]</a> <a href="#8" id=8>At this point it becomes unclear how to proceed further.</a>
<a name="9">[9]</a> <a href="#9" id=9>The next complication which suggests itself is to revise the order in which recursive functions are considered.</a>
<a name="10">[10]</a> <a href="#10" id=10>Before discussing how this may be done, it is worthwhile to bring up some more enumerative procedures.</a>
<a name="11">[11]</a> <a href="#11" id=11>First, let fk(x,y) be the function of two variables computed by the kth Turing machine.</a>
<a name="12">[12]</a> <a href="#12" id=12>The difficulty with the afore-mentioned methods and their elaborations is that they have no concept of partial success.</a>
<a name="13">[13]</a> <a href="#13" id=13>The straightforward approach would be to try to develop a formalized theory of Turing machines in which length of a computation is defined and then try to get a decision procedure for this formal theory.</a>
</body>
</html>
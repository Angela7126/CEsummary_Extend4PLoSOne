<html>
<head>
<title>f0014.txt.s3</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>This is based on the idea that the best procedure is more likely to be recursively simple, rather than merely to have a low number in the ordering.</a>
<a name="1">[1]</a> <a href="#1" id=1>This is known to be a hopeless task.</a>
<a name="2">[2]</a> <a href="#2" id=2>This is based on the plausible idea that, in searching for the solution to a problem, the given data should be taken into account.</a>
<a name="3">[3]</a> <a href="#3" id=3>The next complication which suggests itself is to revise the order in which recursive functions are considered.</a>
<a name="4">[4]</a> <a href="#4" id=4>In order to get around the fact that all formal systems which are anywhere near adequate for describing recursive function theory are incomplete, we avoid restriction to any one of them by introducing the notion of a formal theory (not for the first time, of course.</a>
<a name="5">[5]</a> <a href="#5" id=5>Of course, exhaustiveness in examining for usefulness can be attained for any effectively enumerable class of objects simply by going through the enumeration.</a>
<a name="6">[6]</a> <a href="#6" id=6>So, we look for a way of evading these difficulties.</a>
<a name="7">[7]</a> <a href="#7" id=7>Systems much simpler than Turing machine theory have been shown to have unsolvable decision procedures.</a>
<a name="8">[8]</a> <a href="#8" id=8>Our procedure consists in trying the numbers fk(m,r) in order (again diagonalizing to avoid computations which don't end.</a>
<a name="9">[9]</a> <a href="#9" id=9>One way is to consider f_(fk(L))(m,r) diagonalized on k and L.</a>
<a name="10">[10]</a> <a href="#10" id=10>More generally, the enumeration of partial recursive functions should give an early place to compositions of the functions which have already appeared.</a>
<a name="11">[11]</a> <a href="#11" id=11>Intuitively it seems that each successive complication improves the performance on difficult problems, but imposes a delay in getting started.</a>
<a name="12">[12]</a> <a href="#12" id=12>The straightforward approach would be to try to develop a formalized theory of Turing machines in which length of a computation is defined and then try to get a decision procedure for this formal theory.</a>
<a name="13">[13]</a> <a href="#13" id=13>An interpretation of a formal theory is a computable function i(t) mapping a class of statements of the theory into statements of other theories or concrete propositions.</a>
</body>
</html>
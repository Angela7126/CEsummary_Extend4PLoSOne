<html>
<head>
<title>f0028.txt.s3</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>Geographic replication provides both data availability and protects against data loss.</a>
<a name="1">[1]</a> <a href="#1" id=1>Science data centers that provide access to both the data and the applications that analyze the data are emerging as service stations for one or another scientific domain.</a>
<a name="2">[2]</a> <a href="#2" id=2>Within a data center one can combine redundancy with a clever partitioning strategy to protect against failure at the disk controller or server level.</a>
<a name="3">[3]</a> <a href="#3" id=3>Peta-scale data sets will require 1000-10,000 disks and thousands of compute nodes.</a>
<a name="4">[4]</a> <a href="#4" id=4>Replicating the data in science centers at different geographic locations is implied in the discussion above.</a>
<a name="5">[5]</a> <a href="#5" id=5>The new work style in these scientific domains is to send questions to applications running at a data center and get back answers, rather than to bulk-copy raw data from the archive to your local server for further analysis.</a>
<a name="6">[6]</a> <a href="#6" id=6>Failed data can be automatically recovered from the redundant copies with no interruption to database access, much as RAID5 disk arrays do today.</a>
<a name="7">[7]</a> <a href="#7" id=7>Such systems have to have a mechanism in place to protect against data loss, and provide availability even with a less than full configuration -- a self-healing system is required.</a>
<a name="8">[8]</a> <a href="#8" id=8>Each of these science centers curates one or more massive datasets, curates the applications that provide access to that dataset, and supports a staff that understands the data and indeed is constantly adding to and improving the dataset.</a>
</body>
</html>
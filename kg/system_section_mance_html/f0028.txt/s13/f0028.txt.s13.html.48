<html>
<head>
<title>f0028.txt.s13</title>
</head>
<body bgcolor="white">
<a name="0">[0]</a> <a href="#0" id=0>We (Heber) use a database to represent large Finite Element models.</a>
<a name="1">[1]</a> <a href="#1" id=1>Adaptive Finite Element simulations spend considerable time and programming effort on input, output, and checkpointing.</a>
<a name="2">[2]</a> <a href="#2" id=2>Commercial Finite Element packages each use a proprietary form of a "database".</a>
<a name="3">[3]</a> <a href="#3" id=3>providing declarative data analysis interfaces.</a>
<a name="4">[4]</a> <a href="#4" id=4>The initial model is represented in the database and each checkpoint and analysis step is written to the database.</a>
<a name="5">[5]</a> <a href="#5" id=5>These dumps are two to four orders of magnitude larger than the input mesh and represent a performance challenge in both traditional and database environments.</a>
<a name="6">[6]</a> <a href="#6" id=6>The database approach has the added benefit that visualization tools can watch and steer the computation by reading and writing the database.</a>
<a name="7">[7]</a> <a href="#7" id=7>Using a database allows queries to define more sophisticated mesh partitions and allows concurrent indexed access to the simulation data for visualization and computational steering.</a>
</body>
</html>